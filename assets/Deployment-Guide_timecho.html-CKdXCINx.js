import{_ as l,c as r,b as t,d as a,e as s,a as d,w as i,r as o,o as c}from"./app-BHE9oQwv.js";const p={};function m(u,e){const n=o("RouteLink");return c(),r("div",null,[e[31]||(e[31]=t('<h1 id="部署指导" tabindex="-1"><a class="header-anchor" href="#部署指导"><span>部署指导</span></a></h1><p>IoTDB 提供单机版、集群版和双活版共 3 种部署形态。本章节将详细介绍每一种部署形态的具体部署步骤。</p><h2 id="预备知识" tabindex="-1"><a class="header-anchor" href="#预备知识"><span>预备知识</span></a></h2><p>在开始部署前，您需要充分了解下面的预备知识。</p><h3 id="安装包结构" tabindex="-1"><a class="header-anchor" href="#安装包结构"><span>安装包结构</span></a></h3><p>首先，需要获取安装包，名字为 <code>apache-iotdb-{version}-all-bin</code> 的安装包包含 ConfigNode 和 DataNode 的可执行程序，请将安装包部署于目标集群的所有机器上，推荐将安装包部署于所有服务器的相同目录下。</p><p><strong>之后，需要对 IoTDB 安装包的结构有了解。IoTDB 安装包目录结构如下：</strong></p><table><thead><tr><th><strong>目录</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>conf</td><td>配置文件目录，包含 ConfigNode、DataNode、JMX 和 logback 等配置文件</td></tr><tr><td>data</td><td>数据文件目录，包含 ConfigNode 和 DataNode 的数据文件</td></tr><tr><td>lib</td><td>库文件目录</td></tr><tr><td>licenses</td><td>证书文件目录</td></tr><tr><td>logs</td><td>日志文件目录，包含 ConfigNode 和 DataNode 的日志文件</td></tr><tr><td>sbin</td><td>脚本目录，包含 ConfigNode 和 DataNode 的启停移除脚本，以及 Cli 的启动脚本等</td></tr><tr><td>tools</td><td>系统工具目录</td></tr></tbody></table><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件"><span>配置文件</span></a></h3><p><strong>必要情况下，您需要根据业务需求，修改每个服务器上的配置文件。登录服务器，并将工作路径切换至 <code>apache-iotdb-{version}-all-bin</code>，配置文件在 <code>./conf</code> 目录内。</strong></p><ul><li>对于所有部署 ConfigNode 的服务器，需要修改 <strong>通用配置</strong> 和 <strong>ConfigNode 配置</strong> 。</li><li>对于所有部署 DataNode 的服务器，需要修改 <strong>通用配置</strong> 和 <strong>DataNode 配置</strong> 。</li></ul><h4 id="通用配置" tabindex="-1"><a class="header-anchor" href="#通用配置"><span>通用配置</span></a></h4>',12)),a("p",null,[e[1]||(e[1]=s("打开通用配置文件 ./conf/iotdb-common.properties，可根据 ")),d(n,{to:"/zh/UserGuide/V1.2.x/Deployment-and-Maintenance/Deployment-Recommendation.html"},{default:i(()=>e[0]||(e[0]=[s("部署推荐")])),_:1}),e[2]||(e[2]=s("设置以下参数："))]),e[32]||(e[32]=t('<table><thead><tr><th><strong>配置项</strong></th><th><strong>说明</strong></th><th><strong>默认</strong></th></tr></thead><tbody><tr><td>cluster_name</td><td>节点希望加入的集群的名称</td><td>defaultCluster</td></tr><tr><td>config_node_consensus_protocol_class</td><td>ConfigNode 使用的共识协议</td><td>org.apache.iotdb.consensus.ratis.RatisConsensus</td></tr><tr><td>schema_replication_factor</td><td>元数据副本数，DataNode 数量不应少于此数目</td><td>1</td></tr><tr><td>schema_region_consensus_protocol_class</td><td>元数据副本组的共识协议</td><td>org.apache.iotdb.consensus.ratis.RatisConsensus</td></tr><tr><td>data_replication_factor</td><td>数据副本数，DataNode 数量不应少于此数目</td><td>1</td></tr><tr><td>data_region_consensus_protocol_class</td><td>数据副本组的共识协议。注：RatisConsensus 目前不支持多数据目录</td><td>org.apache.iotdb.consensus.iot.IoTConsensus</td></tr></tbody></table><p><strong>注意：上述配置项在集群启动后即不可更改，且务必保证所有节点的通用配置完全一致，否则节点无法启动。</strong></p><h4 id="confignode-配置" tabindex="-1"><a class="header-anchor" href="#confignode-配置"><span>ConfigNode 配置</span></a></h4><p>打开 ConfigNode 配置文件 ./conf/iotdb-confignode.properties，根据服务器/虚拟机的 IP 地址和可用端口，设置以下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>说明</strong></th><th><strong>默认</strong></th><th><strong>用法</strong></th></tr></thead><tbody><tr><td>cn_internal_address</td><td>ConfigNode 在集群内部通讯使用的地址</td><td>127.0.0.1</td><td>设置为服务器的 IPV4 地址或域名</td></tr><tr><td>cn_internal_port</td><td>ConfigNode 在集群内部通讯使用的端口</td><td>10710</td><td>设置为任意未占用端口</td></tr><tr><td>cn_consensus_port</td><td>ConfigNode 副本组共识协议通信使用的端口</td><td>10720</td><td>设置为任意未占用端口</td></tr><tr><td>cn_target_config_node_list</td><td>节点注册加入集群时连接的 ConfigNode 的地址。注：只能配置一个</td><td>127.0.0.1:10710</td><td>对于 Seed-ConfigNode，设置为自己的 cn_internal_address:cn_internal_port；对于其它 ConfigNode，设置为另一个正在运行的 ConfigNode 的 cn_internal_address:cn_internal_port</td></tr></tbody></table><p><strong>注意：上述配置项在节点启动后即不可更改，且务必保证所有端口均未被占用，否则节点无法启动。</strong></p><h4 id="datanode-配置" tabindex="-1"><a class="header-anchor" href="#datanode-配置"><span>DataNode 配置</span></a></h4><p>打开 DataNode 配置文件 ./conf/iotdb-datanode.properties，根据服务器/虚拟机的 IP 地址和可用端口，设置以下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>说明</strong></th><th><strong>默认</strong></th><th><strong>用法</strong></th></tr></thead><tbody><tr><td>dn_rpc_address</td><td>客户端 RPC 服务的地址</td><td>127.0.0.1</td><td>设置为服务器的 IPV4 地址或域名</td></tr><tr><td>dn_rpc_port</td><td>客户端 RPC 服务的端口</td><td>6667</td><td>设置为任意未占用端口</td></tr><tr><td>dn_internal_address</td><td>DataNode 在集群内部接收控制流使用的地址</td><td>127.0.0.1</td><td>设置为服务器的 IPV4 地址或域名</td></tr><tr><td>dn_internal_port</td><td>DataNode 在集群内部接收控制流使用的端口</td><td>10730</td><td>设置为任意未占用端口</td></tr><tr><td>dn_mpp_data_exchange_port</td><td>DataNode 在集群内部接收数据流使用的端口</td><td>10740</td><td>设置为任意未占用端口</td></tr><tr><td>dn_data_region_consensus_port</td><td>DataNode 的数据副本间共识协议通信的端口</td><td>10750</td><td>设置为任意未占用端口</td></tr><tr><td>dn_schema_region_consensus_port</td><td>DataNode 的元数据副本间共识协议通信的端口</td><td>10760</td><td>设置为任意未占用端口</td></tr><tr><td>dn_target_config_node_list</td><td>集群中正在运行的 ConfigNode 地址</td><td>127.0.0.1:10710</td><td>设置为任意正在运行的 ConfigNode 的 cn_internal_address:cn_internal_port，可设置多个，用逗号（&quot;,&quot;）隔开</td></tr></tbody></table><p><strong>注意：上述配置项在节点启动后即不可更改，且务必保证所有端口均未被占用，否则节点无法启动。</strong></p><h3 id="环境检查" tabindex="-1"><a class="header-anchor" href="#环境检查"><span>环境检查</span></a></h3><p><strong>最后，在正式部署前，还需要对下列项目进行检查：</strong></p><ol><li>JDK&gt;=1.8 的运行环境，并配置好 JAVA_HOME 环境变量。</li><li>设置最大文件打开数为 65535。</li><li>关闭交换内存。</li><li>首次启动 ConfigNode 节点时，确保已清空 ConfigNode 节点的 data/confignode 目录；首次启动 DataNode 节点时，确保已清空 DataNode 节点的 data/datanode 目录。</li><li>如果整个集群处在可信环境下，可以关闭机器上的防火墙选项。</li><li>在集群默认配置中，ConfigNode 会占用端口 10710 和 10720，DataNode 会占用端口 6667、10730、10740、10750 和 10760，请确保这些端口未被占用，或者手动修改配置文件中的端口配置。</li></ol><h3 id="faq" tabindex="-1"><a class="header-anchor" href="#faq"><span>FAQ</span></a></h3>',14)),a("p",null,[e[4]||(e[4]=s("在部署集群过程中有任何问题，请参考 ")),d(n,{to:"/zh/UserGuide/V1.2.x/FAQ/Frequently-asked-questions.html"},{default:i(()=>e[3]||(e[3]=[s("分布式部署FAQ")])),_:1}),e[5]||(e[5]=s("。"))]),e[33]||(e[33]=t(`<h2 id="单机版部署" tabindex="-1"><a class="header-anchor" href="#单机版部署"><span>单机版部署</span></a></h2><p>本小节描述如何启动包括 1 个 ConfigNode 和 1 个 DataNode 的实例。</p><h3 id="启动流程" tabindex="-1"><a class="header-anchor" href="#启动流程"><span>启动流程</span></a></h3><p>在完成配置文件的修改后（一般仅需要修改 IP 等信息） ，用户可以使用 sbin 文件夹下的 start-standalone 脚本启动 IoTDB。</p><p>Linux 系统与 MacOS 系统启动命令如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; bash sbin/start-standalone.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Windows 系统启动命令如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; sbin\\start-standalone.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意：目前，要使用单机模式，你需要保证所有的地址设置为 127.0.0.1，如果需要从非 IoTDB 所在的机器访问此IoTDB，请将配置项 <code>dn_rpc_address</code> 修改为 IoTDB 所在的机器 IP。</p><h3 id="验证部署" tabindex="-1"><a class="header-anchor" href="#验证部署"><span>验证部署</span></a></h3><p>若搭建的集群仅用于本地调试，可直接执行 ./sbin 目录下的 Cli 启动脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux</span>
<span class="line">./sbin/start-cli.sh</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\start-cli.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)),a("p",null,[e[7]||(e[7]=s("若希望通过 Cli 连接生产环境的集群，")),e[8]||(e[8]=a("br",null,null,-1)),e[9]||(e[9]=s(" 请阅读 ")),d(n,{to:"/zh/UserGuide/V1.2.x/Tools-System/CLI.html"},{default:i(()=>e[6]||(e[6]=[s("Cli 使用手册")])),_:1}),e[10]||(e[10]=s("。"))]),e[34]||(e[34]=t(`<p>成功启动集群后，在 Cli 执行 <code>show cluster details</code>：</p><ul><li>若所有节点的状态均为 <strong>Running</strong>，则说明集群部署成功；</li><li>否则，请阅读启动失败节点的运行日志，并检查对应的配置参数。</li></ul><h3 id="停止流程" tabindex="-1"><a class="header-anchor" href="#停止流程"><span>停止流程</span></a></h3><p>Linux 系统与 MacOS 系统停止命令如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; bash sbin/stop-standalone.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Windows 系统停止命令如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">&gt; sbin\\stop-standalone.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="集群版部署-使用集群管理工具" tabindex="-1"><a class="header-anchor" href="#集群版部署-使用集群管理工具"><span>集群版部署（使用集群管理工具）</span></a></h2><p>IoTDB 集群管理工具是一款易用的运维工具（企业版工具）。旨在解决 IoTDB 分布式系统多节点的运维难题，主要包括集群部署、集群启停、弹性扩容、配置更新、数据导出等功能，从而实现对复杂数据库集群的一键式指令下发，<br> 极大降低管理难度。本文档将说明如何用集群管理工具远程部署、配置、启动和停止 IoTDB 集群实例。</p><h3 id="环境准备" tabindex="-1"><a class="header-anchor" href="#环境准备"><span>环境准备</span></a></h3><p>本工具为 TimechoDB（基于IoTDB的企业版数据库）配套工具，您可以联系您的销售获取工具下载方式。</p><p>IoTDB 要部署的机器需要依赖jdk 8及以上版本、lsof、netstat、unzip功能如果没有请自行安装，可以参考文档最后的一节环境所需安装命令。</p><p>提示:IoTDB集群管理工具需要使用有root权限的账号</p><h3 id="部署方法" tabindex="-1"><a class="header-anchor" href="#部署方法"><span>部署方法</span></a></h3><h4 id="下载安装" tabindex="-1"><a class="header-anchor" href="#下载安装"><span>下载安装</span></a></h4><p>本工具为TimechoDB（基于IoTDB的企业版数据库）配套工具，您可以联系您的销售获取工具下载方式。</p><p>注意：由于二进制包仅支持GLIBC2.17 及以上版本，因此最低适配Centos7版本</p><ul><li>在iotd目录内输入以下指令后：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">bash</span> install-iotd.sh</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>即可在之后的 shell 内激活 iotd 关键词，如检查部署前所需的环境指令如下所示：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster check example</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>也可以不激活iotd直接使用 &lt;iotd absolute path&gt;/sbin/iotd 来执行命令，如检查部署前所需的环境：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token operator">&lt;</span>iotd absolute path<span class="token operator">&gt;</span>/sbin/iotd cluster check example</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="系统结构" tabindex="-1"><a class="header-anchor" href="#系统结构"><span>系统结构</span></a></h3><p>IoTDB集群管理工具主要由config、logs、doc、sbin目录组成。</p><ul><li><p><code>config</code>存放要部署的集群配置文件如果要使用集群部署工具需要修改里面的yaml文件。</p></li><li><p><code>logs</code> 存放部署工具日志，如果想要查看部署工具执行日志请查看<code>logs/iotd_yyyy_mm_dd.log</code>。</p></li><li><p><code>sbin</code> 存放集群部署工具所需的二进制包。</p></li><li><p><code>doc</code> 存放用户手册、开发手册和推荐部署手册。</p></li></ul><h3 id="集群配置文件介绍" tabindex="-1"><a class="header-anchor" href="#集群配置文件介绍"><span>集群配置文件介绍</span></a></h3><ul><li>在<code>iotd/config</code> 目录下有集群配置的yaml文件，yaml文件名字就是集群名字yaml 文件可以有多个，为了方便用户配置yaml文件在iotd/config目录下面提供了<code>default_cluster.yaml</code>示例。</li><li>yaml 文件配置由<code>global</code>、<code>confignode_servers</code>、<code>datanode_servers</code>、<code>grafana_server</code>、<code>prometheus_server</code>四大部分组成</li><li>global 是通用配置主要配置机器用户名密码、IoTDB本地安装文件、Jdk配置等。在<code>iotd/config</code>目录中提供了一个<code>default_cluster.yaml</code>样例数据，<br> 用户可以复制修改成自己集群名字并参考里面的说明进行配置IoTDB集群，在<code>default_cluster.yaml</code>样例中没有注释的均为必填项，已经注释的为非必填项。</li></ul><p>例如要执行<code>default_cluster.yaml</code>检查命令则需要执行命令<code>iotd cluster check default_cluster</code>即可，<br> 更多详细命令请参考下面命令列表。</p><table><thead><tr><th>参数</th><th>说明</th><th>是否必填</th></tr></thead><tbody><tr><td>iotdb_zip_dir</td><td>IoTDB 部署分发目录，如果值为空则从<code>iotdb_download_url</code>指定地址下载</td><td>非必填</td></tr><tr><td>iotdb_download_url</td><td>IoTDB 下载地址，如果<code>iotdb_zip_dir</code> 没有值则从指定地址下载</td><td>非必填</td></tr><tr><td>jdk_tar_dir</td><td>jdk 本地目录，可使用该 jdk 路径进行上传部署至目标节点。</td><td>非必填</td></tr><tr><td>jdk_deploy_dir</td><td>jdk 远程机器部署目录，会将 jdk 部署到该目录下面，与下面的<code>jdk_dir_name</code>参数构成完整的jdk部署目录即 <code>&lt;jdk_deploy_dir&gt;/&lt;jdk_dir_name&gt;</code></td><td>非必填</td></tr><tr><td>jdk_dir_name</td><td>jdk 解压后的目录名称默认是jdk_iotdb</td><td>非必填</td></tr><tr><td>iotdb_lib_dir</td><td>IoTDB lib 目录或者IoTDB 的lib 压缩包仅支持.zip格式 ，仅用于IoTDB升级，默认处于注释状态，如需升级请打开注释修改路径即可。如果使用zip文件请使用zip 命令压缩iotdb/lib目录例如 zip -r lib.zip apache-iotdb-1.2.0/lib/*</td><td>非必填</td></tr><tr><td>user</td><td>ssh登陆部署机器的用户名</td><td>必填</td></tr><tr><td>password</td><td>ssh登录的密码, 如果password未指定使用pkey登陆, 请确保已配置节点之间ssh登录免密钥</td><td>非必填</td></tr><tr><td>pkey</td><td>密钥登陆如果password有值优先使用password否则使用pkey登陆</td><td>非必填</td></tr><tr><td>ssh_port</td><td>ssh登录端口</td><td>必填</td></tr><tr><td>deploy_dir</td><td>IoTDB 部署目录，会把 IoTDB 部署到该目录下面与下面的<code>iotdb_dir_name</code>参数构成完整的IoTDB 部署目录即 <code>&lt;deploy_dir&gt;/&lt;iotdb_dir_name&gt;</code></td><td>必填</td></tr><tr><td>iotdb_dir_name</td><td>IoTDB 解压后的目录名称默认是iotdb</td><td>非必填</td></tr><tr><td><a href="http://datanode-env.sh" target="_blank" rel="noopener noreferrer">datanode-env.sh</a></td><td>对应<code>iotdb/config/datanode-env.sh</code> ,在<code>global</code>与<code>confignode_servers</code>同时配置值时优先使用<code>confignode_servers</code>中的值</td><td>非必填</td></tr><tr><td><a href="http://confignode-env.sh" target="_blank" rel="noopener noreferrer">confignode-env.sh</a></td><td>对应<code>iotdb/config/confignode-env.sh</code>,在<code>global</code>与<code>datanode_servers</code>同时配置值时优先使用<code>datanode_servers</code>中的值</td><td>非必填</td></tr><tr><td>iotdb-common.properties</td><td>对应<code>iotdb/config/iotdb-common.properties</code></td><td>非必填</td></tr><tr><td>cn_target_config_node_list</td><td>集群配置地址指向存活的ConfigNode,默认指向confignode_x，在<code>global</code>与<code>confignode_servers</code>同时配置值时优先使用<code>confignode_servers</code>中的值，对应<code>iotdb/config/iotdb-confignode.properties</code>中的<code>cn_target_config_node_list</code></td><td>必填</td></tr><tr><td>dn_target_config_node_list</td><td>集群配置地址指向存活的ConfigNode,默认指向confignode_x，在<code>global</code>与<code>datanode_servers</code>同时配置值时优先使用<code>datanode_servers</code>中的值，对应<code>iotdb/config/iotdb-datanode.properties</code>中的<code>dn_target_config_node_list</code></td><td>必填</td></tr></tbody></table><p><a href="http://xn--datanode-env-494s318a.sh" target="_blank" rel="noopener noreferrer">其中datanode-env.sh</a> <a href="http://xn--confignode-env-fq7x.sh" target="_blank" rel="noopener noreferrer">和confignode-env.sh</a> 可以配置额外参数extra_opts，<a href="http://xn--datanode-env-5s7sp53cu6a964asz7a58wgp3imd5bqzxa.sh" target="_blank" rel="noopener noreferrer">当该参数配置后会在datanode-env.sh</a> <a href="http://xn--confignode-env-fq7x.sh" target="_blank" rel="noopener noreferrer">和confignode-env.sh</a> 后面追加对应的值，可参考default_cluster.yaml，配置示例如下:<br><a href="http://datanode-env.sh" target="_blank" rel="noopener noreferrer">datanode-env.sh</a>:<br> extra_opts: |<br> IOTDB_JMX_OPTS=&quot;<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mi>O</mi><mi>T</mi><mi>D</mi><msub><mi>B</mi><mi>J</mi></msub><mi>M</mi><msub><mi>X</mi><mi>O</mi></msub><mi>P</mi><mi>T</mi><mi>S</mi><mo>−</mo><mi>X</mi><mi>X</mi><mo>:</mo><mo>+</mo><mi>U</mi><mi>s</mi><mi>e</mi><mi>G</mi><mn>1</mn><mi>G</mi><mi>C</mi><mi mathvariant="normal">&quot;</mi><mi>I</mi><mi>O</mi><mi>T</mi><mi>D</mi><msub><mi>B</mi><mi>J</mi></msub><mi>M</mi><msub><mi>X</mi><mi>O</mi></msub><mi>P</mi><mi>T</mi><mi>S</mi><mo>=</mo><mi mathvariant="normal">&quot;</mi></mrow><annotation encoding="application/x-tex">IOTDB_JMX_OPTS -XX:+UseG1GC&quot; IOTDB_JMX_OPTS=&quot;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">OT</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">PTS</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">XX</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord">+</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord mathnormal">se</span><span class="mord mathnormal">G</span><span class="mord">1</span><span class="mord mathnormal" style="margin-right:0.07153em;">GC</span><span class="mord">&quot;</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mord mathnormal" style="margin-right:0.13889em;">OT</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.09618em;">J</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">PTS</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">&quot;</span></span></span></span>IOTDB_JMX_OPTS -XX:MaxGCPauseMillis=200&quot;</p><ul><li>confignode_servers 是部署IoTDB Confignodes配置，里面可以配置多个Confignode<br> 默认将第一个启动的ConfigNode节点node1当作Seed-ConfigNode</li></ul><table><thead><tr><th>参数</th><th>说明</th><th>是否必填</th></tr></thead><tbody><tr><td>name</td><td>Confignode 名称</td><td>必填</td></tr><tr><td>deploy_dir</td><td>IoTDB config node 部署目录</td><td>必填｜</td></tr><tr><td>iotdb-confignode.properties</td><td>对应<code>iotdb/config/iotdb-confignode.properties</code>更加详细请参看<code>iotdb-confignode.properties</code>文件说明</td><td>非必填</td></tr><tr><td>cn_internal_address</td><td>对应iotdb/内部通信地址，对应<code>iotdb/config/iotdb-confignode.properties</code>中的<code>cn_internal_address</code></td><td>必填</td></tr><tr><td>cn_target_config_node_list</td><td>集群配置地址指向存活的ConfigNode,默认指向confignode_x，在<code>global</code>与<code>confignode_servers</code>同时配置值时优先使用<code>confignode_servers</code>中的值，对应<code>iotdb/config/iotdb-confignode.properties</code>中的<code>cn_target_config_node_list</code></td><td>必填</td></tr><tr><td>cn_internal_port</td><td>内部通信端口，对应<code>iotdb/config/iotdb-confignode.properties</code>中的<code>cn_internal_port</code></td><td>必填</td></tr><tr><td>cn_consensus_port</td><td>对应<code>iotdb/config/iotdb-confignode.properties</code>中的<code>cn_consensus_port</code></td><td>非必填</td></tr><tr><td>cn_data_dir</td><td>对应<code>iotdb/config/iotdb-confignode.properties</code>中的<code>cn_data_dir</code></td><td>必填</td></tr><tr><td>iotdb-common.properties</td><td>对应<code>iotdb/config/iotdb-common.properties</code>在<code>global</code>与<code>confignode_servers</code>同时配置值优先使用confignode_servers中的值</td><td>非必填</td></tr></tbody></table><ul><li>datanode_servers 是部署IoTDB Datanodes配置，里面可以配置多个Datanode</li></ul><table><thead><tr><th>参数</th><th>说明</th><th>是否必填</th></tr></thead><tbody><tr><td>name</td><td>Datanode 名称</td><td>必填</td></tr><tr><td>deploy_dir</td><td>IoTDB data node 部署目录</td><td>必填</td></tr><tr><td>iotdb-datanode.properties</td><td>对应<code>iotdb/config/iotdb-datanode.properties</code>更加详细请参看<code>iotdb-datanode.properties</code>文件说明</td><td>非必填</td></tr><tr><td>dn_rpc_address</td><td>datanode rpc 地址对应<code>iotdb/config/iotdb-datanode.properties</code>中的<code>dn_rpc_address</code></td><td>必填</td></tr><tr><td>dn_internal_address</td><td>内部通信地址，对应<code>iotdb/config/iotdb-datanode.properties</code>中的<code>dn_internal_address</code></td><td>必填</td></tr><tr><td>dn_target_config_node_list</td><td>集群配置地址指向存活的ConfigNode,默认指向confignode_x，在<code>global</code>与<code>datanode_servers</code>同时配置值时优先使用<code>datanode_servers</code>中的值，对应<code>iotdb/config/iotdb-datanode.properties</code>中的<code>dn_target_config_node_list</code></td><td>必填</td></tr><tr><td>dn_rpc_port</td><td>datanode rpc端口地址，对应<code>iotdb/config/iotdb-datanode.properties</code>中的<code>dn_rpc_port</code></td><td>必填</td></tr><tr><td>dn_internal_port</td><td>内部通信端口，对应<code>iotdb/config/iotdb-datanode.properties</code>中的<code>dn_internal_port</code></td><td>必填</td></tr><tr><td>iotdb-common.properties</td><td>对应<code>iotdb/config/iotdb-common.properties</code>在<code>global</code>与<code>datanode_servers</code>同时配置值优先使用<code>datanode_servers</code>中的值</td><td>非必填</td></tr></tbody></table><ul><li>grafana_server 是部署Grafana 相关配置</li></ul><table><thead><tr><th>参数</th><th>说明</th><th>是否必填</th></tr></thead><tbody><tr><td>grafana_dir_name</td><td>grafana 解压目录名称</td><td>非必填默认grafana_iotdb</td></tr><tr><td>host</td><td>grafana 部署的服务器ip</td><td>必填</td></tr><tr><td>grafana_port</td><td>grafana 部署机器的端口</td><td>非必填，默认3000</td></tr><tr><td>deploy_dir</td><td>grafana 部署服务器目录</td><td>必填</td></tr><tr><td>grafana_tar_dir</td><td>grafana 压缩包位置</td><td>必填</td></tr><tr><td>dashboards</td><td>dashboards 所在的位置</td><td>非必填,多个用逗号隔开</td></tr></tbody></table><ul><li>prometheus_server 是部署Prometheus 相关配置</li></ul><table><thead><tr><th>参数</th><th>说明</th><th>是否必填</th></tr></thead><tbody><tr><td>prometheus_dir_name</td><td>prometheus 解压目录名称</td><td>非必填默认prometheus_iotdb</td></tr><tr><td>host</td><td>prometheus 部署的服务器ip</td><td>必填</td></tr><tr><td>prometheus_port</td><td>prometheus 部署机器的端口</td><td>非必填，默认9090</td></tr><tr><td>deploy_dir</td><td>prometheus 部署服务器目录</td><td>必填</td></tr><tr><td>prometheus_tar_dir</td><td>prometheus 压缩包位置</td><td>必填</td></tr><tr><td>storage_tsdb_retention_time</td><td>默认保存数据天数 默认15天</td><td>非必填</td></tr><tr><td>storage_tsdb_retention_size</td><td>指定block可以保存的数据大小默认512M ，注意单位KB, MB, GB, TB, PB, EB</td><td>非必填</td></tr></tbody></table><p>如果在config/xxx.yaml的<code>iotdb-datanode.properties</code>和<code>iotdb-confignode.properties</code>中配置了metrics,则会自动把配置放入到promethues无需手动修改</p><p>注意:如何配置yaml key对应的值包含特殊字符如:等建议整个value使用双引号，对应的文件路径中不要使用包含空格的路径，防止出现识别出现异常问题。</p><h3 id="使用场景" tabindex="-1"><a class="header-anchor" href="#使用场景"><span>使用场景</span></a></h3><h4 id="清理数据场景" tabindex="-1"><a class="header-anchor" href="#清理数据场景"><span>清理数据场景</span></a></h4><ul><li>清理集群数据场景会删除IoTDB集群中的data目录以及yaml文件中配置的<code>cn_system_dir</code>、<code>cn_consensus_dir</code>、<br><code>dn_data_dirs</code>、<code>dn_consensus_dir</code>、<code>dn_system_dir</code>、<code>logs</code>和<code>ext</code>目录。</li><li>首先执行停止集群命令、然后在执行集群清理命令。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster stop default_cluster</span>
<span class="line">iotd cluster clean default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集群销毁场景" tabindex="-1"><a class="header-anchor" href="#集群销毁场景"><span>集群销毁场景</span></a></h4><ul><li>集群销毁场景会删除IoTDB集群中的<code>data</code>、<code>cn_system_dir</code>、<code>cn_consensus_dir</code>、<br><code>dn_data_dirs</code>、<code>dn_consensus_dir</code>、<code>dn_system_dir</code>、<code>logs</code>、<code>ext</code>、<code>IoTDB</code>部署目录、<br> grafana部署目录和prometheus部署目录。</li><li>首先执行停止集群命令、然后在执行集群销毁命令。</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster stop default_cluster</span>
<span class="line">iotd cluster destroy default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集群升级场景" tabindex="-1"><a class="header-anchor" href="#集群升级场景"><span>集群升级场景</span></a></h4><ul><li>集群升级首先需要在config/xxx.yaml中配置<code>iotdb_lib_dir</code>为要上传到服务器的jar所在目录路径（例如iotdb/lib）。</li><li>如果使用zip文件上传请使用zip 命令压缩iotdb/lib目录例如 zip -r lib.zip apache-iotdb-1.2.0/lib/*</li><li>执行上传命令、然后执行重启IoTDB集群命令即可完成集群升级</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster upgrade default_cluster</span>
<span class="line">iotd cluster restart default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集群配置文件的热部署场景" tabindex="-1"><a class="header-anchor" href="#集群配置文件的热部署场景"><span>集群配置文件的热部署场景</span></a></h4><ul><li>首先修改在config/xxx.yaml中配置。</li><li>执行分发命令、然后执行热部署命令即可完成集群配置的热部署</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster distribute default_cluster</span>
<span class="line">iotd cluster reload default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集群扩容场景" tabindex="-1"><a class="header-anchor" href="#集群扩容场景"><span>集群扩容场景</span></a></h4><ul><li>首先修改在config/xxx.yaml中添加一个datanode 或者confignode 节点。</li><li>执行集群扩容命令</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster scaleout default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="集群缩容场景" tabindex="-1"><a class="header-anchor" href="#集群缩容场景"><span>集群缩容场景</span></a></h4><ul><li>首先在config/xxx.yaml中找到要缩容的节点名字或者ip+port（其中confignode port 是cn_internal_port、datanode port 是rpc_port）</li><li>执行集群缩容命令</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster scalein default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="已有iotdb集群-使用集群部署工具场景" tabindex="-1"><a class="header-anchor" href="#已有iotdb集群-使用集群部署工具场景"><span>已有IoTDB集群，使用集群部署工具场景</span></a></h4><ul><li>配置服务器的<code>user</code>、<code>passwod</code>或<code>pkey</code>、<code>ssh_port</code></li><li>修改config/xxx.yaml中IoTDB 部署路径，<code>deploy_dir</code>（IoTDB 部署目录）、<code>iotdb_dir_name</code>(IoTDB解压目录名称,默认是iotdb)<br> 例如IoTDB 部署完整路径是<code>/home/data/apache-iotdb-1.1.1</code>则需要修改yaml文件<code>deploy_dir:/home/data/</code>、<code>iotdb_dir_name:apache-iotdb-1.1.1</code></li><li>如果服务器不是使用的java_home则修改<code>jdk_deploy_dir</code>(jdk 部署目录)、<code>jdk_dir_name</code>(jdk解压后的目录名称,默认是jdk_iotdb)，如果使用的是java_home 则不需要修改配置<br> 例如jdk部署完整路径是<code>/home/data/jdk_1.8.2</code>则需要修改yaml文件<code>jdk_deploy_dir:/home/data/</code>、<code>jdk_dir_name:jdk_1.8.2</code></li><li>配置<code>cn_target_config_node_list</code>、<code>dn_target_config_node_list</code></li><li>配置<code>confignode_servers</code>中<code>iotdb-confignode.properties</code>里面的<code>cn_internal_address</code>、<code>cn_internal_port</code>、<code>cn_consensus_port</code>、<code>cn_system_dir</code>、<br><code>cn_consensus_dir</code>和<code>iotdb-common.properties</code>里面的值不是IoTDB默认的则需要配置否则可不必配置</li><li>配置<code>datanode_servers</code>中<code>iotdb-datanode.properties</code>里面的<code>dn_rpc_address</code>、<code>dn_internal_address</code>、<code>dn_data_dirs</code>、<code>dn_consensus_dir</code>、<code>dn_system_dir</code>和<code>iotdb-common.properties</code>等</li><li>执行初始化命令</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster init default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="一键部署iotdb、grafana和prometheus-场景" tabindex="-1"><a class="header-anchor" href="#一键部署iotdb、grafana和prometheus-场景"><span>一键部署IoTDB、Grafana和Prometheus 场景</span></a></h4><ul><li>配置<code>iotdb-datanode.properties</code> 、<code>iotdb-confignode.properties</code> 打开metrics接口</li><li>配置Grafana 配置，如果<code>dashboards</code> 有多个就用逗号隔开，名字不能重复否则会被覆盖。</li><li>配置Prometheus配置，IoTDB 集群配置了metrics 则无需手动修改Prometheus 配置会根据哪个节点配置了metrics，自动修改Prometheus 配置。</li><li>启动集群</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster start default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>更加详细参数请参考上方的 集群配置文件介绍</p><h3 id="命令格式" tabindex="-1"><a class="header-anchor" href="#命令格式"><span>命令格式</span></a></h3><p>本工具的基本用法为：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster <span class="token operator">&lt;</span>key<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>cluster name<span class="token operator">&gt;</span> <span class="token punctuation">[</span>params <span class="token punctuation">(</span>Optional<span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>key 表示了具体的命令。</p></li><li><p>cluster name 表示集群名称(即<code>iotd/config</code> 文件中yaml文件名字)。</p></li><li><p>params 表示了命令的所需参数(选填)。</p></li><li><p>例如部署default_cluster集群的命令格式为：</p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster deploy default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>集群的功能及参数列表如下：</li></ul><table><thead><tr><th>命令</th><th>功能</th><th>参数</th></tr></thead><tbody><tr><td>check</td><td>检测集群是否可以部署</td><td>集群名称列表</td></tr><tr><td>clean</td><td>清理集群</td><td>集群名称</td></tr><tr><td>deploy</td><td>部署集群</td><td>集群名称 ,-N,模块名称(iotdb、grafana、prometheus可选),-op force(可选)</td></tr><tr><td>list</td><td>打印集群及状态列表</td><td>无</td></tr><tr><td>start</td><td>启动集群</td><td>集群名称,-N,节点名称(nodename、grafana、prometheus可选)</td></tr><tr><td>stop</td><td>关闭集群</td><td>集群名称,-N,节点名称(nodename、grafana、prometheus可选) ,-op force(nodename、grafana、prometheus可选)</td></tr><tr><td>restart</td><td>重启集群</td><td>集群名称,-N,节点名称(nodename、grafana、prometheus可选),-op force(nodename、grafana、prometheus可选)</td></tr><tr><td>show</td><td>查看集群信息，details字段表示展示集群信息细节</td><td>集群名称, details(可选)</td></tr><tr><td>destroy</td><td>销毁集群</td><td>集群名称,-N,模块名称(iotdb、grafana、prometheus可选)</td></tr><tr><td>scaleout</td><td>集群扩容</td><td>集群名称</td></tr><tr><td>scalein</td><td>集群缩容</td><td>集群名称，-N，集群节点名字或集群节点ip+port</td></tr><tr><td>reload</td><td>集群热加载</td><td>集群名称</td></tr><tr><td>distribute</td><td>集群配置文件分发</td><td>集群名称</td></tr><tr><td>dumplog</td><td>备份指定集群日志</td><td>集群名称,-N,集群节点名字 -h 备份至目标机器ip -pw 备份至目标机器密码 -p 备份至目标机器端口 -path 备份的目录 -startdate 起始时间 -enddate 结束时间 -loglevel 日志类型 -l 传输速度</td></tr><tr><td>dumpdata</td><td>备份指定集群数据</td><td>集群名称, -h 备份至目标机器ip -pw 备份至目标机器密码 -p 备份至目标机器端口 -path 备份的目录 -startdate 起始时间 -enddate 结束时间 -l 传输速度</td></tr><tr><td>upgrade</td><td>lib 包升级</td><td>集群名字(升级完后请重启)</td></tr><tr><td>init</td><td>已有集群使用集群部署工具时，初始化集群配置</td><td>集群名字，初始化集群配置</td></tr><tr><td>status</td><td>查看进程状态</td><td>集群名字</td></tr></tbody></table><h3 id="详细命令执行过程" tabindex="-1"><a class="header-anchor" href="#详细命令执行过程"><span>详细命令执行过程</span></a></h3><p>下面的命令都是以default_cluster.yaml 为示例执行的，用户可以修改成自己的集群文件来执行</p><h4 id="检查集群部署环境命令" tabindex="-1"><a class="header-anchor" href="#检查集群部署环境命令"><span>检查集群部署环境命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster check default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>验证目标节点是否能够通过 SSH 登录</p></li><li><p>验证对应节点上的 JDK 版本是否满足IoTDB jdk1.8及以上版本、服务器是否按照unzip、是否安装lsof 或者netstat</p></li><li><p>如果看到下面提示<code>Info:example check successfully!</code> 证明服务器已经具备安装的要求，<br> 如果输出<code>Error:example check fail!</code> 证明有部分条件没有满足需求可以查看上面的输出的Error日志(例如:<code>Error:Server (ip:172.20.31.76) iotdb port(10713) is listening</code>)进行修复，<br> 如果检查jdk没有满足要求，我们可以自己在yaml 文件中配置一个jdk1.8 及以上版本的进行部署不影响后面使用，<br> 如果检查lsof、netstat或者unzip 不满足要求需要在服务器上自行安装。</p></li></ul><h4 id="部署集群命令" tabindex="-1"><a class="header-anchor" href="#部署集群命令"><span>部署集群命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster deploy default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>根据<code>confignode_servers</code> 和<code>datanode_servers</code>中的节点信息上传IoTDB压缩包和jdk压缩包(如果yaml中配置<code>jdk_tar_dir</code>和<code>jdk_deploy_dir</code>值)</p></li><li><p>根据yaml文件节点配置信息生成并上传<code>iotdb-common.properties</code>、<code>iotdb-confignode.properties</code>、<code>iotdb-datanode.properties</code></p></li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster deploy default_cluster <span class="token parameter variable">-op</span> force</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意：该命令会强制执行部署，具体过程会删除已存在的部署目录重新部署</p><p><em>部署单个模块</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 部署grafana模块</span></span>
<span class="line">iotd cluster deploy default_cluster <span class="token parameter variable">-N</span> grafana</span>
<span class="line"><span class="token comment"># 部署prometheus模块</span></span>
<span class="line">iotd cluster deploy default_cluster <span class="token parameter variable">-N</span> prometheus</span>
<span class="line"><span class="token comment"># 部署iotdb模块</span></span>
<span class="line">iotd cluster deploy default_cluster <span class="token parameter variable">-N</span> iotdb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="启动集群命令" tabindex="-1"><a class="header-anchor" href="#启动集群命令"><span>启动集群命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster start default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>启动confignode，根据yaml配置文件中<code>confignode_servers</code>中的顺序依次启动同时根据进程id检查confignode是否正常，第一个confignode 为seek config</p></li><li><p>启动datanode，根据yaml配置文件中<code>datanode_servers</code>中的顺序依次启动同时根据进程id检查datanode是否正常</p></li><li><p>如果根据进程id检查进程存在后，通过cli依次检查集群列表中每个服务是否正常，如果cli链接失败则每隔10s重试一次直到成功最多重试5次</p></li></ul><p><em>启动单个节点命令</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#按照IoTDB 节点名称启动</span></span>
<span class="line">iotd cluster start default_cluster <span class="token parameter variable">-N</span> datanode_1</span>
<span class="line"><span class="token comment">#按照IoTDB 集群ip+port启动，其中port对应confignode的cn_internal_port、datanode的rpc_port</span></span>
<span class="line">iotd cluster start default_cluster <span class="token parameter variable">-N</span> <span class="token number">192.168</span>.1.5:6667</span>
<span class="line"><span class="token comment">#启动grafana</span></span>
<span class="line">iotd cluster start default_cluster <span class="token parameter variable">-N</span> grafana</span>
<span class="line"><span class="token comment">#启动prometheus</span></span>
<span class="line">iotd cluster start default_cluster <span class="token parameter variable">-N</span> prometheus</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件</p></li><li><p>根据提供的节点名称或者ip:port找到对于节点位置信息,如果启动的节点是<code>data_node</code>则ip使用yaml 文件中的<code>dn_rpc_address</code>、port 使用的是yaml文件中datanode_servers 中的<code>dn_rpc_port</code>。<br> 如果启动的节点是<code>config_node</code>则ip使用的是yaml文件中confignode_servers 中的<code>cn_internal_address</code> 、port 使用的是<code>cn_internal_port</code></p></li><li><p>启动该节点</p></li></ul><p>说明：<a href="http://xn--IoTDBstart-confignode-ke17alzdqfz8ct64bxf3fxr5b6z8ethaw98ayr8eembma1591iw2rb1m8bpa.xn--shstart-datanode-yu21a.sh" target="_blank" rel="noopener noreferrer">由于集群部署工具仅是调用了IoTDB集群中的start-confignode.sh和start-datanode.sh</a> 脚本，<br> 在实际输出结果失败时有可能是集群还未正常启动，建议使用status命令进行查看当前集群状态(iotd cluster status xxx)</p><h4 id="查看iotdb集群状态命令" tabindex="-1"><a class="header-anchor" href="#查看iotdb集群状态命令"><span>查看IoTDB集群状态命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster show default_cluster</span>
<span class="line"><span class="token comment">#查看IoTDB集群详细信息</span></span>
<span class="line">iotd cluster show default_cluster details</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>依次在datanode通过cli执行<code>show cluster details</code> 如果有一个节点执行成功则不会在后续节点继续执行cli直接返回结果</p></li></ul><h4 id="停止集群命令" tabindex="-1"><a class="header-anchor" href="#停止集群命令"><span>停止集群命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster stop default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>根据<code>datanode_servers</code>中datanode节点信息，按照配置先后顺序依次停止datanode节点</p></li><li><p>根据<code>confignode_servers</code>中confignode节点信息，按照配置依次停止confignode节点</p></li></ul><p><em>强制停止集群命令</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster stop default_cluster <span class="token parameter variable">-op</span> force</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>会直接执行kill -9 pid 命令强制停止集群</p><p><em>停止单个节点命令</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#按照IoTDB 节点名称停止</span></span>
<span class="line">iotd cluster stop default_cluster <span class="token parameter variable">-N</span> datanode_1</span>
<span class="line"><span class="token comment">#按照IoTDB 集群ip+port停止(ip+port是按照datanode中的ip+dn_rpc_port获取唯一节点或confignode中的ip+cn_internal_port获取唯一节点)</span></span>
<span class="line">iotd cluster stop default_cluster <span class="token parameter variable">-N</span> <span class="token number">192.168</span>.1.5:6667</span>
<span class="line"><span class="token comment">#停止grafana</span></span>
<span class="line">iotd cluster stop default_cluster <span class="token parameter variable">-N</span> grafana</span>
<span class="line"><span class="token comment">#停止prometheus</span></span>
<span class="line">iotd cluster stop default_cluster <span class="token parameter variable">-N</span> prometheus</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件</p></li><li><p>根据提供的节点名称或者ip:port找到对应节点位置信息，如果停止的节点是<code>data_node</code>则ip使用yaml 文件中的<code>dn_rpc_address</code>、port 使用的是yaml文件中datanode_servers 中的<code>dn_rpc_port</code>。<br> 如果停止的节点是<code>config_node</code>则ip使用的是yaml文件中confignode_servers 中的<code>cn_internal_address</code> 、port 使用的是<code>cn_internal_port</code></p></li><li><p>停止该节点</p></li></ul><p>说明：<a href="http://xn--IoTDBstop-confignode-f545a17cifu6c3y3b0h0fb13bov9ekha509ani6eykbma4878h319a4e7bpa.xn--shstop-datanode-794z.sh" target="_blank" rel="noopener noreferrer">由于集群部署工具仅是调用了IoTDB集群中的stop-confignode.sh和stop-datanode.sh</a> 脚本，在某些情况下有可能iotdb集群并未停止。</p><h4 id="清理集群数据命令" tabindex="-1"><a class="header-anchor" href="#清理集群数据命令"><span>清理集群数据命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster clean default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>、<code>datanode_servers</code>配置信息</p></li><li><p>根据<code>confignode_servers</code>、<code>datanode_servers</code>中的信息，检查是否还有服务正在运行，<br> 如果有任何一个服务正在运行则不会执行清理命令</p></li><li><p>删除IoTDB集群中的data目录以及yaml文件中配置的<code>cn_system_dir</code>、<code>cn_consensus_dir</code>、<br><code>dn_data_dirs</code>、<code>dn_consensus_dir</code>、<code>dn_system_dir</code>、<code>logs</code>和<code>ext</code>目录。</p></li></ul><h4 id="重启集群命令" tabindex="-1"><a class="header-anchor" href="#重启集群命令"><span>重启集群命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster restart default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>、<code>datanode_servers</code>、<code>grafana</code>、<code>prometheus</code>配置信息</p></li><li><p>执行上述的停止集群命令(stop),然后执行启动集群命令(start) 具体参考上面的start 和stop 命令</p></li></ul><p><em>强制重启集群命令</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster restart default_cluster <span class="token parameter variable">-op</span> force</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>会直接执行kill -9 pid 命令强制停止集群，然后启动集群</p><p><em>重启单个节点命令</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#按照IoTDB 节点名称重启datanode_1</span></span>
<span class="line">iotd cluster restart default_cluster <span class="token parameter variable">-N</span> datanode_1</span>
<span class="line"><span class="token comment">#按照IoTDB 节点名称重启confignode_1</span></span>
<span class="line">iotd cluster restart default_cluster <span class="token parameter variable">-N</span> confignode_1</span>
<span class="line"><span class="token comment">#重启grafana</span></span>
<span class="line">iotd cluster restart default_cluster <span class="token parameter variable">-N</span> grafana</span>
<span class="line"><span class="token comment">#重启prometheus</span></span>
<span class="line">iotd cluster restart default_cluster <span class="token parameter variable">-N</span> prometheus</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="集群缩容命令" tabindex="-1"><a class="header-anchor" href="#集群缩容命令"><span>集群缩容命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment">#按照节点名称缩容</span></span>
<span class="line">iotd cluster scalein default_cluster <span class="token parameter variable">-N</span> nodename</span>
<span class="line"><span class="token comment">#按照ip+port缩容(ip+port按照datanode中的ip+dn_rpc_port获取唯一节点，confignode中的ip+cn_internal_port获取唯一节点)</span></span>
<span class="line">iotd cluster scalein default_cluster <span class="token parameter variable">-N</span> ip:port</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>判断要缩容的confignode节点和datanode是否只剩一个，如果只剩一个则不能执行缩容</p></li><li><p>然后根据ip:port或者nodename 获取要缩容的节点信息，执行缩容命令，然后销毁该节点目录，如果缩容的节点是<code>data_node</code>则ip使用yaml 文件中的<code>dn_rpc_address</code>、port 使用的是yaml文件中datanode_servers 中的<code>dn_rpc_port</code>。<br> 如果缩容的节点是<code>config_node</code>则ip使用的是yaml文件中confignode_servers 中的<code>cn_internal_address</code> 、port 使用的是<code>cn_internal_port</code></p></li></ul><p>提示：目前一次仅支持一个节点缩容</p><h4 id="集群扩容命令" tabindex="-1"><a class="header-anchor" href="#集群扩容命令"><span>集群扩容命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster scaleout default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>修改config/xxx.yaml 文件添加一个datanode 节点或者confignode节点</p></li><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>找到要扩容的节点，执行上传IoTDB压缩包和jdb包(如果yaml中配置<code>jdk_tar_dir</code>和<code>jdk_deploy_dir</code>值)并解压</p></li><li><p>根据yaml文件节点配置信息生成并上传<code>iotdb-common.properties</code>、<code>iotdb-confignode.properties</code>或<code>iotdb-datanode.properties</code></p></li><li><p>执行启动该节点命令并校验节点是否启动成功</p></li></ul><p>提示：目前一次仅支持一个节点扩容</p><h4 id="销毁集群命令" tabindex="-1"><a class="header-anchor" href="#销毁集群命令"><span>销毁集群命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster destroy default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>cluster-name 找到默认位置的 yaml 文件</p></li><li><p>根据<code>confignode_servers</code>、<code>datanode_servers</code>、<code>grafana</code>、<code>prometheus</code>中node节点信息，检查是否节点还在运行，<br> 如果有任何一个节点正在运行则停止销毁命令</p></li><li><p>删除IoTDB集群中的<code>data</code>以及yaml文件配置的<code>cn_system_dir</code>、<code>cn_consensus_dir</code>、<br><code>dn_data_dirs</code>、<code>dn_consensus_dir</code>、<code>dn_system_dir</code>、<code>logs</code>、<code>ext</code>、<code>IoTDB</code>部署目录、<br> grafana部署目录和prometheus部署目录</p></li></ul><p><em>销毁单个模块</em></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 销毁grafana模块</span></span>
<span class="line">iotd cluster destroy default_cluster <span class="token parameter variable">-N</span> grafana</span>
<span class="line"><span class="token comment"># 销毁prometheus模块</span></span>
<span class="line">iotd cluster destroy default_cluster <span class="token parameter variable">-N</span> prometheus</span>
<span class="line"><span class="token comment"># 销毁iotdb模块</span></span>
<span class="line">iotd cluster destroy default_cluster <span class="token parameter variable">-N</span> iotdb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="分发集群配置命令" tabindex="-1"><a class="header-anchor" href="#分发集群配置命令"><span>分发集群配置命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster distribute default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>、<code>datanode_servers</code>、<code>grafana</code>、<code>prometheus</code>配置信息</p></li><li><p>根据yaml文件节点配置信息生成并依次上传<code>iotdb-common.properties</code>、<code>iotdb-confignode.properties</code>、<code>iotdb-datanode.properties</code>、到指定节点</p></li></ul><h4 id="热加载集群配置命令" tabindex="-1"><a class="header-anchor" href="#热加载集群配置命令"><span>热加载集群配置命令</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster reload default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>根据yaml文件节点配置信息依次在cli中执行<code>load configuration</code></p></li></ul><h4 id="集群节点日志备份" tabindex="-1"><a class="header-anchor" href="#集群节点日志备份"><span>集群节点日志备份</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster dumplog default_cluster <span class="token parameter variable">-N</span> datanode_1,confignode_1  <span class="token parameter variable">-startdate</span> <span class="token string">&#39;2023-04-11&#39;</span> <span class="token parameter variable">-enddate</span> <span class="token string">&#39;2023-04-26&#39;</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.9.48 <span class="token parameter variable">-p</span> <span class="token number">36000</span> <span class="token parameter variable">-u</span> root <span class="token parameter variable">-pw</span> root <span class="token parameter variable">-path</span> <span class="token string">&#39;/iotdb/logs&#39;</span> <span class="token parameter variable">-logs</span> <span class="token string">&#39;/root/data/db/iotdb/logs&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件</p></li><li><p>该命令会根据yaml文件校验datanode_1,confignode_1 是否存在，然后根据配置的起止日期(startdate&lt;=logtime&lt;=enddate)备份指定节点datanode_1,confignode_1 的日志数据到指定服务<code>192.168.9.48</code> 端口<code>36000</code> 数据备份路径是 <code>/iotdb/logs</code> ，IoTDB日志存储路径在<code>/root/data/db/iotdb/logs</code>(非必填，如果不填写-logs xxx 默认从IoTDB安装路径/logs下面备份日志)</p></li></ul><table><thead><tr><th>命令</th><th>功能</th><th>是否必填</th></tr></thead><tbody><tr><td>-h</td><td>存放备份数据机器ip</td><td>否</td></tr><tr><td>-u</td><td>存放备份数据机器用户名</td><td>否</td></tr><tr><td>-pw</td><td>存放备份数据机器密码</td><td>否</td></tr><tr><td>-p</td><td>存放备份数据机器端口(默认22)</td><td>否</td></tr><tr><td>-path</td><td>存放备份数据的路径(默认当前路径)</td><td>否</td></tr><tr><td>-loglevel</td><td>日志基本有all、info、error、warn(默认是全部)</td><td>否</td></tr><tr><td>-l</td><td>限速(默认不限速范围0到104857601 单位Kbit/s)</td><td>否</td></tr><tr><td>-N</td><td>配置文件集群名称多个用逗号隔开</td><td>是</td></tr><tr><td>-startdate</td><td>起始时间(包含默认1970-01-01)</td><td>否</td></tr><tr><td>-enddate</td><td>截止时间(包含)</td><td>否</td></tr><tr><td>-logs</td><td>IoTDB 日志存放路径，默认是（{iotdb}/logs）</td><td>否</td></tr></tbody></table><h4 id="集群节点数据备份" tabindex="-1"><a class="header-anchor" href="#集群节点数据备份"><span>集群节点数据备份</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster dumpdata default_cluster <span class="token parameter variable">-granularity</span> partition  <span class="token parameter variable">-startdate</span> <span class="token string">&#39;2023-04-11&#39;</span> <span class="token parameter variable">-enddate</span> <span class="token string">&#39;2023-04-26&#39;</span> <span class="token parameter variable">-h</span> <span class="token number">192.168</span>.9.48 <span class="token parameter variable">-p</span> <span class="token number">36000</span> <span class="token parameter variable">-u</span> root <span class="token parameter variable">-pw</span> root <span class="token parameter variable">-path</span> <span class="token string">&#39;/iotdb/datas&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>该命令会根据yaml文件获取leader 节点，然后根据起止日期(startdate&lt;=logtime&lt;=enddate)备份数据到192.168.9.48 服务上的/iotdb/datas 目录下</li></ul><table><thead><tr><th>命令</th><th>功能</th><th>是否必填</th></tr></thead><tbody><tr><td>-h</td><td>存放备份数据机器ip</td><td>否</td></tr><tr><td>-u</td><td>存放备份数据机器用户名</td><td>否</td></tr><tr><td>-pw</td><td>存放备份数据机器密码</td><td>否</td></tr><tr><td>-p</td><td>存放备份数据机器端口(默认22)</td><td>否</td></tr><tr><td>-path</td><td>存放备份数据的路径(默认当前路径)</td><td>否</td></tr><tr><td>-granularity</td><td>类型partition</td><td>是</td></tr><tr><td>-l</td><td>限速(默认不限速范围0到104857601 单位Kbit/s)</td><td>否</td></tr><tr><td>-startdate</td><td>起始时间(包含)</td><td>是</td></tr><tr><td>-enddate</td><td>截止时间(包含)</td><td>是</td></tr></tbody></table><h4 id="集群升级" tabindex="-1"><a class="header-anchor" href="#集群升级"><span>集群升级</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster upgrade default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><p>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>和<code>datanode_servers</code>配置信息</p></li><li><p>上传lib包</p></li></ul><p>注意执行完升级后请重启IoTDB 才能生效</p><h4 id="集群初始化" tabindex="-1"><a class="header-anchor" href="#集群初始化"><span>集群初始化</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster init default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>、<code>datanode_servers</code>、<code>grafana</code>、<code>prometheus</code>配置信息</li><li>初始化集群配置</li></ul><h4 id="查看集群进程状态" tabindex="-1"><a class="header-anchor" href="#查看集群进程状态"><span>查看集群进程状态</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">iotd cluster status default_cluster</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>根据 cluster-name 找到默认位置的 yaml 文件，获取<code>confignode_servers</code>、<code>datanode_servers</code>、<code>grafana</code>、<code>prometheus</code>配置信息</li><li>展示集群的存活状态</li></ul><h3 id="集群部署工具样例介绍" tabindex="-1"><a class="header-anchor" href="#集群部署工具样例介绍"><span>集群部署工具样例介绍</span></a></h3><p>在集群部署工具安装目录中config/example 下面有3个yaml样例，如果需要可以复制到config 中进行修改即可</p><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>default_1c1d.yaml</td><td>1个confignode和1个datanode 配置样例</td></tr><tr><td>default_3c3d.yaml</td><td>3个confignode和3个datanode 配置样例</td></tr><tr><td>default_3c3d_grafa_prome</td><td>3个confignode和3个datanode、Grafana、Prometheus配置样例</td></tr></tbody></table><h2 id="集群版部署-手工部署" tabindex="-1"><a class="header-anchor" href="#集群版部署-手工部署"><span>集群版部署（手工部署）</span></a></h2><h3 id="启动流程-1" tabindex="-1"><a class="header-anchor" href="#启动流程-1"><span>启动流程</span></a></h3><p>本小节描述如何启动包括若干 ConfigNode 和 DataNode 的集群。<br> 集群可以提供服务的标准是至少启动一个 ConfigNode 且启动不小于（数据/元数据）副本个数的 DataNode。</p><p>总体启动流程分为三步：</p><ol><li>启动种子 ConfigNode</li><li>增加 ConfigNode（可选）</li><li>增加 DataNode</li></ol><h4 id="启动-seed-confignode" tabindex="-1"><a class="header-anchor" href="#启动-seed-confignode"><span>启动 Seed-ConfigNode</span></a></h4><p><strong>集群第一个启动的节点必须是 ConfigNode，第一个启动的 ConfigNode 必须遵循本小节教程。</strong></p><p>第一个启动的 ConfigNode 是 Seed-ConfigNode，标志着新集群的创建。<br> 在启动 Seed-ConfigNode 前，请打开通用配置文件 ./conf/iotdb-common.properties，并检查如下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>检查</strong></th></tr></thead><tbody><tr><td>cluster_name</td><td>已设置为期望的集群名称</td></tr><tr><td>config_node_consensus_protocol_class</td><td>已设置为期望的共识协议</td></tr><tr><td>schema_replication_factor</td><td>已设置为期望的元数据副本数</td></tr><tr><td>schema_region_consensus_protocol_class</td><td>已设置为期望的共识协议</td></tr><tr><td>data_replication_factor</td><td>已设置为期望的数据副本数</td></tr><tr><td>data_region_consensus_protocol_class</td><td>已设置为期望的共识协议</td></tr></tbody></table>`,166)),a("p",null,[e[12]||(e[12]=a("strong",null,"注意：",-1)),e[13]||(e[13]=s(" 请根据")),d(n,{to:"/zh/UserGuide/V1.2.x/Deployment-and-Maintenance/Deployment-Recommendation.html"},{default:i(()=>e[11]||(e[11]=[s("部署推荐")])),_:1}),e[14]||(e[14]=s("配置合适的通用参数，这些参数在首次配置后即不可修改。"))]),e[35]||(e[35]=t(`<p>接着请打开它的配置文件 ./conf/iotdb-confignode.properties，并检查如下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>检查</strong></th></tr></thead><tbody><tr><td>cn_internal_address</td><td>已设置为服务器的 IPV4 地址或域名</td></tr><tr><td>cn_internal_port</td><td>该端口未被占用</td></tr><tr><td>cn_consensus_port</td><td>该端口未被占用</td></tr><tr><td>cn_target_config_node_list</td><td>已设置为自己的内部通讯地址，即 cn_internal_address:cn_internal_port</td></tr></tbody></table><p>检查完毕后，即可在服务器上运行启动脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux 前台启动</span>
<span class="line">bash ./sbin/start-confignode.sh</span>
<span class="line"></span>
<span class="line"># Linux 后台启动</span>
<span class="line">nohup bash ./sbin/start-confignode.sh &gt;/dev/null 2&gt;&amp;1 &amp;</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\start-confignode.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),a("p",null,[e[16]||(e[16]=s("ConfigNode 的其它配置参数可参考")),e[17]||(e[17]=a("br",null,null,-1)),d(n,{to:"/zh/UserGuide/V1.2.x/Reference/ConfigNode-Config-Manual.html"},{default:i(()=>e[15]||(e[15]=[s("ConfigNode 配置参数")])),_:1}),e[18]||(e[18]=s("。"))]),e[36]||(e[36]=t(`<h4 id="增加更多-confignode-可选" tabindex="-1"><a class="header-anchor" href="#增加更多-confignode-可选"><span>增加更多 ConfigNode（可选）</span></a></h4><p><strong>只要不是第一个启动的 ConfigNode 就必须遵循本小节教程。</strong></p><p>可向集群添加更多 ConfigNode，以保证 ConfigNode 的高可用。常用的配置为额外增加两个 ConfigNode，使集群共有三个 ConfigNode。</p><p>新增的 ConfigNode 需要保证 ./conf/iotdb-common.properites 中的所有配置参数与 Seed-ConfigNode 完全一致，否则可能启动失败或产生运行时错误。<br> 因此，请着重检查通用配置文件中的以下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>检查</strong></th></tr></thead><tbody><tr><td>cluster_name</td><td>与 Seed-ConfigNode 保持一致</td></tr><tr><td>config_node_consensus_protocol_class</td><td>与 Seed-ConfigNode 保持一致</td></tr><tr><td>schema_replication_factor</td><td>与 Seed-ConfigNode 保持一致</td></tr><tr><td>schema_region_consensus_protocol_class</td><td>与 Seed-ConfigNode 保持一致</td></tr><tr><td>data_replication_factor</td><td>与 Seed-ConfigNode 保持一致</td></tr><tr><td>data_region_consensus_protocol_class</td><td>与 Seed-ConfigNode 保持一致</td></tr></tbody></table><p>接着请打开它的配置文件 ./conf/iotdb-confignode.properties，并检查以下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>检查</strong></th></tr></thead><tbody><tr><td>cn_internal_address</td><td>已设置为服务器的 IPV4 地址或域名</td></tr><tr><td>cn_internal_port</td><td>该端口未被占用</td></tr><tr><td>cn_consensus_port</td><td>该端口未被占用</td></tr><tr><td>cn_target_config_node_list</td><td>已设置为另一个正在运行的 ConfigNode 的内部通讯地址，推荐使用 Seed-ConfigNode 的内部通讯地址</td></tr></tbody></table><p>检查完毕后，即可在服务器上运行启动脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux 前台启动</span>
<span class="line">bash ./sbin/start-confignode.sh</span>
<span class="line"></span>
<span class="line"># Linux 后台启动</span>
<span class="line">nohup bash ./sbin/start-confignode.sh &gt;/dev/null 2&gt;&amp;1 &amp;</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\start-confignode.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),a("p",null,[e[20]||(e[20]=s("ConfigNode 的其它配置参数可参考")),e[21]||(e[21]=a("br",null,null,-1)),d(n,{to:"/zh/UserGuide/V1.2.x/Reference/ConfigNode-Config-Manual.html"},{default:i(()=>e[19]||(e[19]=[s("ConfigNode配置参数")])),_:1})]),e[37]||(e[37]=t(`<h4 id="增加-datanode" tabindex="-1"><a class="header-anchor" href="#增加-datanode"><span>增加 DataNode</span></a></h4><p><strong>确保集群已有正在运行的 ConfigNode 后，才能开始增加 DataNode。</strong></p><p>可以向集群中添加任意个 DataNode。<br> 在添加新的 DataNode 前，请先打开通用配置文件 ./conf/iotdb-common.properties 并检查以下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>检查</strong></th></tr></thead><tbody><tr><td>cluster_name</td><td>与 Seed-ConfigNode 保持一致</td></tr></tbody></table><p>接着打开它的配置文件 ./conf/iotdb-datanode.properties 并检查以下参数：</p><table><thead><tr><th><strong>配置项</strong></th><th><strong>检查</strong></th></tr></thead><tbody><tr><td>dn_rpc_address</td><td>已设置为服务器的 IPV4 地址或域名</td></tr><tr><td>dn_rpc_port</td><td>该端口未被占用</td></tr><tr><td>dn_internal_address</td><td>已设置为服务器的 IPV4 地址或域名</td></tr><tr><td>dn_internal_port</td><td>该端口未被占用</td></tr><tr><td>dn_mpp_data_exchange_port</td><td>该端口未被占用</td></tr><tr><td>dn_data_region_consensus_port</td><td>该端口未被占用</td></tr><tr><td>dn_schema_region_consensus_port</td><td>该端口未被占用</td></tr><tr><td>dn_target_config_node_list</td><td>已设置为正在运行的 ConfigNode 的内部通讯地址，推荐使用 Seed-ConfigNode 的内部通讯地址</td></tr></tbody></table><p>检查完毕后，即可在服务器上运行启动脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux 前台启动</span>
<span class="line">bash ./sbin/start-datanode.sh</span>
<span class="line"></span>
<span class="line"># Linux 后台启动</span>
<span class="line">nohup bash ./sbin/start-datanode.sh &gt;/dev/null 2&gt;&amp;1 &amp;</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\start-datanode.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)),a("p",null,[e[23]||(e[23]=s("DataNode 的其它配置参数可参考")),e[24]||(e[24]=a("br",null,null,-1)),d(n,{to:"/zh/UserGuide/V1.2.x/Reference/DataNode-Config-Manual.html"},{default:i(()=>e[22]||(e[22]=[s("DataNode配置参数")])),_:1}),e[25]||(e[25]=s("。"))]),e[38]||(e[38]=t(`<p><strong>注意：当且仅当集群拥有不少于副本个数（max{schema_replication_factor, data_replication_factor}）的 DataNode 后，集群才可以提供服务</strong></p><h3 id="验证部署-1" tabindex="-1"><a class="header-anchor" href="#验证部署-1"><span>验证部署</span></a></h3><p>若搭建的集群仅用于本地调试，可直接执行 ./sbin 目录下的 Cli 启动脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux</span>
<span class="line">./sbin/start-cli.sh</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\start-cli.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4)),a("p",null,[e[27]||(e[27]=s("若希望通过 Cli 连接生产环境的集群，")),e[28]||(e[28]=a("br",null,null,-1)),e[29]||(e[29]=s(" 请阅读 ")),d(n,{to:"/zh/UserGuide/V1.2.x/Tools-System/CLI.html"},{default:i(()=>e[26]||(e[26]=[s("Cli 使用手册")])),_:1}),e[30]||(e[30]=s("。"))]),e[39]||(e[39]=t(`<p>以在6台服务器上启动的3C3D（3个ConfigNode 和 3个DataNode）集群为例，<br> 这里假设3个ConfigNode的IP地址依次为192.168.1.10、192.168.1.11、192.168.1.12，且3个ConfigNode启动时均使用了默认的端口10710与10720；<br> 3个DataNode的IP地址依次为192.168.1.20、192.168.1.21、192.168.1.22，且3个DataNode启动时均使用了默认的端口6667、10730、10740、10750与10760。</p><p>成功启动集群后，在 Cli 执行 <code>show cluster details</code>，看到的结果应当如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; show cluster details</span>
<span class="line">+------+----------+-------+---------------+------------+-------------------+------------+-------+-------+-------------------+-----------------+</span>
<span class="line">|NodeID|  NodeType| Status|InternalAddress|InternalPort|ConfigConsensusPort|  RpcAddress|RpcPort|MppPort|SchemaConsensusPort|DataConsensusPort|</span>
<span class="line">+------+----------+-------+---------------+------------+-------------------+------------+-------+-------+-------------------+-----------------+</span>
<span class="line">|     0|ConfigNode|Running|   192.168.1.10|       10710|              10720|            |       |       |                   |                 |</span>
<span class="line">|     2|ConfigNode|Running|   192.168.1.11|       10710|              10720|            |       |       |                   |                 |</span>
<span class="line">|     3|ConfigNode|Running|   192.168.1.12|       10710|              10720|            |       |       |                   |                 |</span>
<span class="line">|     1|  DataNode|Running|   192.168.1.20|       10730|                   |192.168.1.20|   6667|  10740|              10750|            10760|</span>
<span class="line">|     4|  DataNode|Running|   192.168.1.21|       10730|                   |192.168.1.21|   6667|  10740|              10750|            10760|</span>
<span class="line">|     5|  DataNode|Running|   192.168.1.22|       10730|                   |192.168.1.22|   6667|  10740|              10750|            10760|</span>
<span class="line">+------+----------+-------+---------------+------------+-------------------+------------+-------+-------+-------------------+-----------------+</span>
<span class="line">Total line number = 6</span>
<span class="line">It costs 0.012s</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若所有节点的状态均为 <strong>Running</strong>，则说明集群部署成功；<br> 否则，请阅读启动失败节点的运行日志，并检查对应的配置参数。</p><h3 id="停止流程-1" tabindex="-1"><a class="header-anchor" href="#停止流程-1"><span>停止流程</span></a></h3><p>本小节描述如何手动关闭 IoTDB 的 ConfigNode 或 DataNode 进程。</p><h4 id="使用脚本停止-confignode" tabindex="-1"><a class="header-anchor" href="#使用脚本停止-confignode"><span>使用脚本停止 ConfigNode</span></a></h4><p>执行停止 ConfigNode 脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux</span>
<span class="line">./sbin/stop-confignode.sh</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\stop-confignode.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用脚本停止-datanode" tabindex="-1"><a class="header-anchor" href="#使用脚本停止-datanode"><span>使用脚本停止 DataNode</span></a></h4><p>执行停止 DataNode 脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux</span>
<span class="line">./sbin/stop-datanode.sh</span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">.\\sbin\\stop-datanode.bat</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="停止节点进程" tabindex="-1"><a class="header-anchor" href="#停止节点进程"><span>停止节点进程</span></a></h4><p>首先获取节点的进程号：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">jps</span>
<span class="line"></span>
<span class="line"># 或</span>
<span class="line"></span>
<span class="line">ps aux | grep iotdb</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结束进程：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">kill -9 &lt;pid&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>注意：有些端口的信息需要 root 权限才能获取，在此情况下请使用 sudo</strong></p><h3 id="集群缩容" tabindex="-1"><a class="header-anchor" href="#集群缩容"><span>集群缩容</span></a></h3><p>本小节描述如何将 ConfigNode 或 DataNode 移出集群。</p><h4 id="移除-confignode" tabindex="-1"><a class="header-anchor" href="#移除-confignode"><span>移除 ConfigNode</span></a></h4><p>在移除 ConfigNode 前，请确保移除后集群至少还有一个活跃的 ConfigNode。<br> 在活跃的 ConfigNode 上执行 remove-confignode 脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux</span>
<span class="line">## 根据 confignode_id 移除节点</span>
<span class="line">./sbin/remove-confignode.sh &lt;confignode_id&gt;</span>
<span class="line"></span>
<span class="line">## 根据 ConfigNode 内部通讯地址和端口移除节点</span>
<span class="line">./sbin/remove-confignode.sh &lt;cn_internal_address&gt;:&lt;cn_internal_port&gt;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">## 根据 confignode_id 移除节点</span>
<span class="line">.\\sbin\\remove-confignode.bat &lt;confignode_id&gt;</span>
<span class="line"></span>
<span class="line">## 根据 ConfigNode 内部通讯地址和端口移除节点</span>
<span class="line">.\\sbin\\remove-confignode.bat &lt;cn_internal_address&gt;:&lt;cn_internal_port&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="移除-datanode" tabindex="-1"><a class="header-anchor" href="#移除-datanode"><span>移除 DataNode</span></a></h4><p>在移除 DataNode 前，请确保移除后集群至少还有不少于（数据/元数据）副本个数的 DataNode。<br> 在活跃的 DataNode 上执行 remove-datanode 脚本：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"># Linux</span>
<span class="line">## 根据 datanode_id 移除节点</span>
<span class="line">./sbin/remove-datanode.sh &lt;datanode_id&gt;</span>
<span class="line"></span>
<span class="line">## 根据 DataNode RPC 服务地址和端口移除节点</span>
<span class="line">./sbin/remove-datanode.sh &lt;dn_rpc_address&gt;:&lt;dn_rpc_port&gt;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"># Windows</span>
<span class="line">## 根据 datanode_id 移除节点</span>
<span class="line">.\\sbin\\remove-datanode.bat &lt;datanode_id&gt;</span>
<span class="line"></span>
<span class="line">## 根据 DataNode RPC 服务地址和端口移除节点</span>
<span class="line">.\\sbin\\remove-datanode.bat &lt;dn_rpc_address&gt;:&lt;dn_rpc_port&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="双活版部署" tabindex="-1"><a class="header-anchor" href="#双活版部署"><span>双活版部署</span></a></h2><p>IoTDB 的双活集群指的是两个独立的集群，它们的配置完全独立，可以同时接收外界的写入，每一个独立的集群都可以将写入到自己数据同步到另一个集群中，<br> 两个集群的数据可达到最终一致。</p><p>两个集群可构成一个高可用组：当其中一个集群停止服务时，另一个集群不会受到影响。当停止服务的集群再次启动时，另一个集群会将新写入的数据同步过来。<br> 业务可以绑定两个集群进行读写，从而达到高可用的目的。</p><p>双活集群的部署方案允许在物理节点少于 3 的情况下实现高可用，在部署成本上具备一定优势。</p><p>请参考 <a href="https://iotdb.apache.org/zh/UserGuide/Master/FAQ/FAQ-for-cluster-setup.html" target="_blank" rel="noopener noreferrer">分布式部署FAQ</a></p>`,31))])}const g=l(p,[["render",m],["__file","Deployment-Guide_timecho.html.vue"]]),b=JSON.parse('{"path":"/zh/UserGuide/V1.2.x/Deployment-and-Maintenance/Deployment-Guide_timecho.html","title":"部署指导","lang":"zh-CN","frontmatter":{"description":"部署指导 IoTDB 提供单机版、集群版和双活版共 3 种部署形态。本章节将详细介绍每一种部署形态的具体部署步骤。 预备知识 在开始部署前，您需要充分了解下面的预备知识。 安装包结构 首先，需要获取安装包，名字为 apache-iotdb-{version}-all-bin 的安装包包含 ConfigNode 和 DataNode 的可执行程序，请将安...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.2.x/Deployment-and-Maintenance/Deployment-Guide_timecho.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.2.x/Deployment-and-Maintenance/Deployment-Guide_timecho.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"部署指导"}],["meta",{"property":"og:description","content":"部署指导 IoTDB 提供单机版、集群版和双活版共 3 种部署形态。本章节将详细介绍每一种部署形态的具体部署步骤。 预备知识 在开始部署前，您需要充分了解下面的预备知识。 安装包结构 首先，需要获取安装包，名字为 apache-iotdb-{version}-all-bin 的安装包包含 ConfigNode 和 DataNode 的可执行程序，请将安..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-01-12T08:18:47.000Z"}],["meta",{"property":"article:modified_time","content":"2024-01-12T08:18:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"部署指导\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-12T08:18:47.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"预备知识","slug":"预备知识","link":"#预备知识","children":[{"level":3,"title":"安装包结构","slug":"安装包结构","link":"#安装包结构","children":[]},{"level":3,"title":"配置文件","slug":"配置文件","link":"#配置文件","children":[]},{"level":3,"title":"环境检查","slug":"环境检查","link":"#环境检查","children":[]},{"level":3,"title":"FAQ","slug":"faq","link":"#faq","children":[]}]},{"level":2,"title":"单机版部署","slug":"单机版部署","link":"#单机版部署","children":[{"level":3,"title":"启动流程","slug":"启动流程","link":"#启动流程","children":[]},{"level":3,"title":"验证部署","slug":"验证部署","link":"#验证部署","children":[]},{"level":3,"title":"停止流程","slug":"停止流程","link":"#停止流程","children":[]}]},{"level":2,"title":"集群版部署（使用集群管理工具）","slug":"集群版部署-使用集群管理工具","link":"#集群版部署-使用集群管理工具","children":[{"level":3,"title":"环境准备","slug":"环境准备","link":"#环境准备","children":[]},{"level":3,"title":"部署方法","slug":"部署方法","link":"#部署方法","children":[]},{"level":3,"title":"系统结构","slug":"系统结构","link":"#系统结构","children":[]},{"level":3,"title":"集群配置文件介绍","slug":"集群配置文件介绍","link":"#集群配置文件介绍","children":[]},{"level":3,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":3,"title":"命令格式","slug":"命令格式","link":"#命令格式","children":[]},{"level":3,"title":"详细命令执行过程","slug":"详细命令执行过程","link":"#详细命令执行过程","children":[]},{"level":3,"title":"集群部署工具样例介绍","slug":"集群部署工具样例介绍","link":"#集群部署工具样例介绍","children":[]}]},{"level":2,"title":"集群版部署（手工部署）","slug":"集群版部署-手工部署","link":"#集群版部署-手工部署","children":[{"level":3,"title":"启动流程","slug":"启动流程-1","link":"#启动流程-1","children":[]},{"level":3,"title":"验证部署","slug":"验证部署-1","link":"#验证部署-1","children":[]},{"level":3,"title":"停止流程","slug":"停止流程-1","link":"#停止流程-1","children":[]},{"level":3,"title":"集群缩容","slug":"集群缩容","link":"#集群缩容","children":[]}]},{"level":2,"title":"双活版部署","slug":"双活版部署","link":"#双活版部署","children":[]}],"git":{"createdTime":1688958677000,"updatedTime":1705047527000,"contributors":[{"name":"CritasWang","email":"critas@outlook.com","commits":2},{"name":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":2},{"name":"Caideyipi","email":"87789683+Caideyipi@users.noreply.github.com","commits":1},{"name":"CloudWise-Lukemiao","email":"76942485+CloudWise-Lukemiao@users.noreply.github.com","commits":1},{"name":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":33.6,"words":10080},"filePathRelative":"zh/UserGuide/V1.2.x/Deployment-and-Maintenance/Deployment-Guide_timecho.md","localizedDate":"2023年7月10日","autoDesc":true}');export{g as comp,b as data};
