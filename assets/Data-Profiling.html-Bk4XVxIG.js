import{_ as n,c as a,b as e,o as l}from"./app-BHE9oQwv.js";const i={};function p(c,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="数据画像" tabindex="-1"><a class="header-anchor" href="#数据画像"><span>数据画像</span></a></h2><h3 id="acf" tabindex="-1"><a class="header-anchor" href="#acf"><span>ACF</span></a></h3><h4 id="函数简介" tabindex="-1"><a class="header-anchor" href="#函数简介"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见<code>XCorr</code>函数文档。</p><p><strong>函数名：</strong> ACF</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。序列中共包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mi>N</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2N-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>个数据点，每个值的具体含义参见<code>XCorr</code>函数文档。</p><p><strong>提示：</strong></p><ul><li>序列中的<code>NaN</code>值会被忽略，在计算中表现为0。</li></ul><h4 id="使用示例" tabindex="-1"><a class="header-anchor" href="#使用示例"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|              1|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|            NaN|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|              3|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|            NaN|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|              5|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> acf<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">05</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+--------------------+</span>
<span class="line">|                         Time|acf(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|                 1.0|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|                 0.0|</span>
<span class="line">|1970-01-01T08:00:00.003+08:00|                 3.6|</span>
<span class="line">|1970-01-01T08:00:00.004+08:00|                 0.0|</span>
<span class="line">|1970-01-01T08:00:00.005+08:00|                 7.0|</span>
<span class="line">|1970-01-01T08:00:00.006+08:00|                 0.0|</span>
<span class="line">|1970-01-01T08:00:00.007+08:00|                 3.6|</span>
<span class="line">|1970-01-01T08:00:00.008+08:00|                 0.0|</span>
<span class="line">|1970-01-01T08:00:00.009+08:00|                 1.0|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="distinct" tabindex="-1"><a class="header-anchor" href="#distinct"><span>Distinct</span></a></h3><h4 id="函数简介-1" tabindex="-1"><a class="header-anchor" href="#函数简介-1"><span>函数简介</span></a></h4><p>本函数可以返回输入序列中出现的所有不同的元素。</p><p><strong>函数名：</strong> DISTINCT</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型可以是任意的</p><p><strong>输出序列：</strong> 输出单个序列，类型与输入相同。</p><p><strong>提示：</strong></p><ul><li>输出序列的时间戳是无意义的。输出顺序是任意的。</li><li>缺失值和空值将被忽略，但<code>NaN</code>不会被忽略。</li><li>字符串区分大小写</li></ul><h4 id="使用示例-1" tabindex="-1"><a class="header-anchor" href="#使用示例-1"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d2.s2|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T08:00:00.001+08:00|          Hello|</span>
<span class="line">|2020-01-01T08:00:00.002+08:00|          hello|</span>
<span class="line">|2020-01-01T08:00:00.003+08:00|          Hello|</span>
<span class="line">|2020-01-01T08:00:00.004+08:00|          World|</span>
<span class="line">|2020-01-01T08:00:00.005+08:00|          World|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token keyword">distinct</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-------------------------+</span>
<span class="line">|                         Time|distinct(root.test.d2.s2)|</span>
<span class="line">+-----------------------------+-------------------------+</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|                    Hello|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|                    hello|</span>
<span class="line">|1970-01-01T08:00:00.003+08:00|                    World|</span>
<span class="line">+-----------------------------+-------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="histogram" tabindex="-1"><a class="header-anchor" href="#histogram"><span>Histogram</span></a></h3><h4 id="函数简介-2" tabindex="-1"><a class="header-anchor" href="#函数简介-2"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的分布直方图。</p><p><strong>函数名：</strong> HISTOGRAM</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>min</code>：表示所求数据范围的下限，默认值为 -Double.MAX_VALUE。</li><li><code>max</code>：表示所求数据范围的上限，默认值为 Double.MAX_VALUE，<code>start</code>的值必须小于或等于<code>end</code>。</li><li><code>count</code>: 表示直方图分桶的数量，默认值为 1，其值必须为正整数。</li></ul><p><strong>输出序列：</strong> 直方图分桶的值，其中第 i 个桶（从 1 开始计数）表示的数据范围下界为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo>+</mo><mo stretchy="false">(</mo><mi>i</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>⋅</mo><mfrac><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">min+ (i-1)\\cdot\\frac{max-min}{count}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">min</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2007em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8557em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，数据范围上界为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo>+</mo><mi>i</mi><mo>⋅</mo><mfrac><mrow><mi>m</mi><mi>a</mi><mi>x</mi><mo>−</mo><mi>m</mi><mi>i</mi><mi>n</mi></mrow><mrow><mi>c</mi><mi>o</mi><mi>u</mi><mi>n</mi><mi>t</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">min+ i \\cdot \\frac{max-min}{count}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">min</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.2007em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8557em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">co</span><span class="mord mathnormal mtight">u</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ma</span><span class="mord mathnormal mtight">x</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。</p><p><strong>提示：</strong></p><ul><li>如果某个数据点的数值小于<code>min</code>，它会被放入第 1 个桶；如果某个数据点的数值大于<code>max</code>，它会被放入最后 1 个桶。</li><li>数据中的空值、缺失值和<code>NaN</code>将会被忽略。</li></ul><h4 id="使用示例-2" tabindex="-1"><a class="header-anchor" href="#使用示例-2"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:00.000+08:00|            1.0|</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|            2.0|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|            3.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|            4.0|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|            5.0|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|            6.0|</span>
<span class="line">|2020-01-01T00:00:06.000+08:00|            7.0|</span>
<span class="line">|2020-01-01T00:00:07.000+08:00|            8.0|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|            9.0|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|           11.0|</span>
<span class="line">|2020-01-01T00:00:11.000+08:00|           12.0|</span>
<span class="line">|2020-01-01T00:00:12.000+08:00|           13.0|</span>
<span class="line">|2020-01-01T00:00:13.000+08:00|           14.0|</span>
<span class="line">|2020-01-01T00:00:14.000+08:00|           15.0|</span>
<span class="line">|2020-01-01T00:00:15.000+08:00|           16.0|</span>
<span class="line">|2020-01-01T00:00:16.000+08:00|           17.0|</span>
<span class="line">|2020-01-01T00:00:17.000+08:00|           18.0|</span>
<span class="line">|2020-01-01T00:00:18.000+08:00|           19.0|</span>
<span class="line">|2020-01-01T00:00:19.000+08:00|           20.0|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> histogram<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;min&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;max&quot;</span><span class="token operator">=</span><span class="token string">&quot;20&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;count&quot;</span><span class="token operator">=</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------------------------------------------------------+</span>
<span class="line">|                         Time|histogram(root.test.d1.s1, &quot;min&quot;=&quot;1&quot;, &quot;max&quot;=&quot;20&quot;, &quot;count&quot;=&quot;10&quot;)|</span>
<span class="line">+-----------------------------+---------------------------------------------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.003+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.004+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.005+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.006+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.007+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.008+08:00|                                                              2|</span>
<span class="line">|1970-01-01T08:00:00.009+08:00|                                                              2|</span>
<span class="line">+-----------------------------+---------------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="integral" tabindex="-1"><a class="header-anchor" href="#integral"><span>Integral</span></a></h3><h4 id="函数简介-3" tabindex="-1"><a class="header-anchor" href="#函数简介-3"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的数值积分，即以时间为横坐标、数值为纵坐标绘制的折线图中折线以下的面积。</p><p><strong>函数名：</strong> INTEGRAL</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>unit</code>：积分求解所用的时间轴单位，取值为 &quot;1S&quot;, &quot;1s&quot;, &quot;1m&quot;, &quot;1H&quot;, &quot;1d&quot;（区分大小写），分别表示以毫秒、秒、分钟、小时、天为单位计算积分。<br> 缺省情况下取 &quot;1s&quot;，以秒为单位。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为积分结果的数据点。</p><p><strong>提示：</strong></p><ul><li><p>积分值等于折线图中每相邻两个数据点和时间轴形成的直角梯形的面积之和，不同时间单位下相当于横轴进行不同倍数放缩，得到的积分值可直接按放缩倍数转换。</p></li><li><p>数据中<code>NaN</code>将会被忽略。折线将以临近两个有值数据点为准。</p></li></ul><h4 id="使用示例-3" tabindex="-1"><a class="header-anchor" href="#使用示例-3"><span>使用示例</span></a></h4><h5 id="参数缺省" tabindex="-1"><a class="header-anchor" href="#参数缺省"><span>参数缺省</span></a></h5><p>缺省情况下积分以1s为时间单位。</p><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|              1|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|              2|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|              5|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|              6|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|              7|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|              8|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|            NaN|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|             10|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> integral<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-------------------------+</span>
<span class="line">|                         Time|integral(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+-------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                     57.5|</span>
<span class="line">+-----------------------------+-------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其计算公式为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>+</mo><mn>5</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>5</mn><mo>+</mo><mn>6</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>7</mn><mo>+</mo><mn>8</mn><mo stretchy="false">)</mo><mo>×</mo><mn>3</mn><mo>+</mo><mo stretchy="false">(</mo><mn>8</mn><mo>+</mo><mn>10</mn><mo stretchy="false">)</mo><mo>×</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mn>57.5</mn></mrow><annotation encoding="application/x-tex"> \\frac{1}{2}[(1+2)\\times 1 + (2+5) \\times 1 + (5+6) \\times 1 + (6+7) \\times 1 + (7+8) \\times 3 + (8+10) \\times 2] = 57.5 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">10</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">57.5</span></span></span></span></span></p><h5 id="指定时间单位" tabindex="-1"><a class="header-anchor" href="#指定时间单位"><span>指定时间单位</span></a></h5><p>指定以分钟为时间单位。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> integral<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;unit&quot;</span><span class="token operator">=</span><span class="token string">&quot;1m&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-------------------------+</span>
<span class="line">|                         Time|integral(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+-------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                    0.958|</span>
<span class="line">+-----------------------------+-------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其计算公式为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mo>×</mo><mn>60</mn></mrow></mfrac><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>+</mo><mn>3</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>5</mn><mo>+</mo><mn>6</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>7</mn><mo>+</mo><mn>8</mn><mo stretchy="false">)</mo><mo>×</mo><mn>3</mn><mo>+</mo><mo stretchy="false">(</mo><mn>8</mn><mo>+</mo><mn>10</mn><mo stretchy="false">)</mo><mo>×</mo><mn>2</mn><mo stretchy="false">]</mo><mo>=</mo><mn>0.958</mn></mrow><annotation encoding="application/x-tex"> \\frac{1}{2\\times 60}[(1+2) \\times 1 + (2+3) \\times 1 + (5+6) \\times 1 + (6+7) \\times 1 + (7+8) \\times 3 + (8+10) \\times 2] = 0.958 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0908em;vertical-align:-0.7693em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">60</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">3</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">10</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.958</span></span></span></span></span></p><h3 id="integralavg" tabindex="-1"><a class="header-anchor" href="#integralavg"><span>IntegralAvg</span></a></h3><h4 id="函数简介-4" tabindex="-1"><a class="header-anchor" href="#函数简介-4"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的函数均值，即在相同时间单位下的数值积分除以序列总的时间跨度。更多关于数值积分计算的信息请参考<code>Integral</code>函数。</p><p><strong>函数名：</strong> INTEGRALAVG</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为时间加权平均结果的数据点。</p><p><strong>提示：</strong></p><ul><li><p>时间加权的平均值等于在任意时间单位<code>unit</code>下计算的数值积分（即折线图中每相邻两个数据点和时间轴形成的直角梯形的面积之和），<br> 除以相同时间单位下输入序列的时间跨度，其值与具体采用的时间单位无关，默认与 IoTDB 时间单位一致。</p></li><li><p>数据中的<code>NaN</code>将会被忽略。折线将以临近两个有值数据点为准。</p></li><li><p>输入序列为空时，函数输出结果为 0；仅有一个数据点时，输出结果为该点数值。</p></li></ul><h4 id="使用示例-4" tabindex="-1"><a class="header-anchor" href="#使用示例-4"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|              1|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|              2|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|              5|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|              6|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|              7|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|              8|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|            NaN|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|             10|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> integralavg<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+----------------------------+</span>
<span class="line">|                         Time|integralavg(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+----------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                        5.75|</span>
<span class="line">+-----------------------------+----------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其计算公式为：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mn>2</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>2</mn><mo>+</mo><mn>5</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>5</mn><mo>+</mo><mn>6</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>6</mn><mo>+</mo><mn>7</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn><mo>+</mo><mo stretchy="false">(</mo><mn>7</mn><mo>+</mo><mn>8</mn><mo stretchy="false">)</mo><mo>×</mo><mn>3</mn><mo>+</mo><mo stretchy="false">(</mo><mn>8</mn><mo>+</mo><mn>10</mn><mo stretchy="false">)</mo><mo>×</mo><mn>2</mn><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>10</mn><mo>=</mo><mn>5.75</mn></mrow><annotation encoding="application/x-tex"> \\frac{1}{2}[(1+2)\\times 1 + (2+5) \\times 1 + (5+6) \\times 1 + (6+7) \\times 1 + (7+8) \\times 3 + (8+10) \\times 2] / 10 = 5.75 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.0074em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">8</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">3</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">10</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mclose">]</span><span class="mord">/10</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5.75</span></span></span></span></span></p><h3 id="mad" tabindex="-1"><a class="header-anchor" href="#mad"><span>Mad</span></a></h3><h4 id="函数简介-5" tabindex="-1"><a class="header-anchor" href="#函数简介-5"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的精确或近似绝对中位差，绝对中位差为所有数值与其中位数绝对偏移量的中位数。</p><p>如有数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>7</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>9</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\\{1,3,3,5,5,6,7,8,9\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">9</span><span class="mclose">}</span></span></span></span>，其中位数为5，所有数值与中位数的偏移量的绝对值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>4</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\\{0,0,1,2,2,2,3,4,4\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mclose">}</span></span></span></span>，其中位数为2，故而原数据集的绝对中位差为2。</p><p><strong>函数名：</strong> MAD</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>error</code>：近似绝对中位差的基于数值的误差百分比，取值范围为 [0,1)，默认值为 0。如当<code>error</code>=0.01 时，记精确绝对中位差为a，近似绝对中位差为b，不等式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.99</mn><mi>a</mi><mo>≤</mo><mi>b</mi><mo>≤</mo><mn>1.01</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">0.99a \\le b \\le 1.01a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7804em;vertical-align:-0.136em;"></span><span class="mord">0.99</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8304em;vertical-align:-0.136em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1.01</span><span class="mord mathnormal">a</span></span></span></span> 成立。当<code>error</code>=0 时，计算结果为精确绝对中位差。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为DOUBLE，序列仅包含一个时间戳为 0、值为绝对中位差的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-5" tabindex="-1"><a class="header-anchor" href="#使用示例-5"><span>使用示例</span></a></h4><h5 id="精确查询" tabindex="-1"><a class="header-anchor" href="#精确查询"><span>精确查询</span></a></h5><p>当<code>error</code>参数缺省或为0时，本函数计算精确绝对中位差。</p><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|2021-03-17T10:32:17.054+08:00|   0.5319929|</span>
<span class="line">|2021-03-17T10:32:18.054+08:00|   0.9304316|</span>
<span class="line">|2021-03-17T10:32:19.054+08:00|  -1.4800133|</span>
<span class="line">|2021-03-17T10:32:20.054+08:00|   0.6114087|</span>
<span class="line">|2021-03-17T10:32:21.054+08:00|   2.5163336|</span>
<span class="line">|2021-03-17T10:32:22.054+08:00|  -1.0845392|</span>
<span class="line">|2021-03-17T10:32:23.054+08:00|   1.0562582|</span>
<span class="line">|2021-03-17T10:32:24.054+08:00|   1.3867859|</span>
<span class="line">|2021-03-17T10:32:25.054+08:00| -0.45429882|</span>
<span class="line">|2021-03-17T10:32:26.054+08:00|   1.0353678|</span>
<span class="line">|2021-03-17T10:32:27.054+08:00|   0.7307929|</span>
<span class="line">|2021-03-17T10:32:28.054+08:00|   2.3167255|</span>
<span class="line">|2021-03-17T10:32:29.054+08:00|    2.342443|</span>
<span class="line">|2021-03-17T10:32:30.054+08:00|   1.5809103|</span>
<span class="line">|2021-03-17T10:32:31.054+08:00|   1.4829416|</span>
<span class="line">|2021-03-17T10:32:32.054+08:00|   1.5800357|</span>
<span class="line">|2021-03-17T10:32:33.054+08:00|   0.7124368|</span>
<span class="line">|2021-03-17T10:32:34.054+08:00| -0.78597564|</span>
<span class="line">|2021-03-17T10:32:35.054+08:00|   1.2058644|</span>
<span class="line">|2021-03-17T10:32:36.054+08:00|   1.4215064|</span>
<span class="line">|2021-03-17T10:32:37.054+08:00|   1.2808295|</span>
<span class="line">|2021-03-17T10:32:38.054+08:00|  -0.6173715|</span>
<span class="line">|2021-03-17T10:32:39.054+08:00|  0.06644377|</span>
<span class="line">|2021-03-17T10:32:40.054+08:00|    2.349338|</span>
<span class="line">|2021-03-17T10:32:41.054+08:00|   1.7335888|</span>
<span class="line">|2021-03-17T10:32:42.054+08:00|   1.5872132|</span>
<span class="line">............</span>
<span class="line">Total line number = 10000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> mad<span class="token punctuation">(</span>s0<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------+</span>
<span class="line">|                         Time| mad(root.test.s0)|</span>
<span class="line">+-----------------------------+------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|0.6806197166442871|</span>
<span class="line">+-----------------------------+------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="近似查询" tabindex="-1"><a class="header-anchor" href="#近似查询"><span>近似查询</span></a></h5><p>当<code>error</code>参数取值不为 0 时，本函数计算近似绝对中位差。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> mad<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------------------------+</span>
<span class="line">|                         Time|mad(root.test.s0, &quot;error&quot;=&quot;0.01&quot;)|</span>
<span class="line">+-----------------------------+---------------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|               0.6806616245859518|</span>
<span class="line">+-----------------------------+---------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="median" tabindex="-1"><a class="header-anchor" href="#median"><span>Median</span></a></h3><h4 id="函数简介-6" tabindex="-1"><a class="header-anchor" href="#函数简介-6"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的精确或近似中位数。中位数是顺序排列的一组数据中居于中间位置的数；当序列有偶数个时，中位数为中间二者的平均数。</p><p><strong>函数名：</strong> MEDIAN</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>参数：</strong></p><ul><li><code>error</code>：近似中位数的基于排名的误差百分比，取值范围 [0,1)，默认值为 0。如当<code>error</code>=0.01 时，计算出的中位数的真实排名百分比在 0.49~0.51 之间。当<code>error</code>=0 时，计算结果为精确中位数。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为中位数的数据点。</p><h4 id="使用示例-6" tabindex="-1"><a class="header-anchor" href="#使用示例-6"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|2021-03-17T10:32:17.054+08:00|   0.5319929|</span>
<span class="line">|2021-03-17T10:32:18.054+08:00|   0.9304316|</span>
<span class="line">|2021-03-17T10:32:19.054+08:00|  -1.4800133|</span>
<span class="line">|2021-03-17T10:32:20.054+08:00|   0.6114087|</span>
<span class="line">|2021-03-17T10:32:21.054+08:00|   2.5163336|</span>
<span class="line">|2021-03-17T10:32:22.054+08:00|  -1.0845392|</span>
<span class="line">|2021-03-17T10:32:23.054+08:00|   1.0562582|</span>
<span class="line">|2021-03-17T10:32:24.054+08:00|   1.3867859|</span>
<span class="line">|2021-03-17T10:32:25.054+08:00| -0.45429882|</span>
<span class="line">|2021-03-17T10:32:26.054+08:00|   1.0353678|</span>
<span class="line">|2021-03-17T10:32:27.054+08:00|   0.7307929|</span>
<span class="line">|2021-03-17T10:32:28.054+08:00|   2.3167255|</span>
<span class="line">|2021-03-17T10:32:29.054+08:00|    2.342443|</span>
<span class="line">|2021-03-17T10:32:30.054+08:00|   1.5809103|</span>
<span class="line">|2021-03-17T10:32:31.054+08:00|   1.4829416|</span>
<span class="line">|2021-03-17T10:32:32.054+08:00|   1.5800357|</span>
<span class="line">|2021-03-17T10:32:33.054+08:00|   0.7124368|</span>
<span class="line">|2021-03-17T10:32:34.054+08:00| -0.78597564|</span>
<span class="line">|2021-03-17T10:32:35.054+08:00|   1.2058644|</span>
<span class="line">|2021-03-17T10:32:36.054+08:00|   1.4215064|</span>
<span class="line">|2021-03-17T10:32:37.054+08:00|   1.2808295|</span>
<span class="line">|2021-03-17T10:32:38.054+08:00|  -0.6173715|</span>
<span class="line">|2021-03-17T10:32:39.054+08:00|  0.06644377|</span>
<span class="line">|2021-03-17T10:32:40.054+08:00|    2.349338|</span>
<span class="line">|2021-03-17T10:32:41.054+08:00|   1.7335888|</span>
<span class="line">|2021-03-17T10:32:42.054+08:00|   1.5872132|</span>
<span class="line">............</span>
<span class="line">Total line number = 10000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> median<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------------------------+</span>
<span class="line">|                         Time|median(root.test.s0, &quot;error&quot;=&quot;0.01&quot;)|</span>
<span class="line">+-----------------------------+------------------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                   1.021884560585022|</span>
<span class="line">+-----------------------------+------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="minmax" tabindex="-1"><a class="header-anchor" href="#minmax"><span>MinMax</span></a></h3><h4 id="函数简介-7" tabindex="-1"><a class="header-anchor" href="#函数简介-7"><span>函数简介</span></a></h4><p>本函数将输入序列使用 min-max 方法进行标准化。最小值归一至 0，最大值归一至 1.</p><p><strong>函数名：</strong> MINMAX</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>compute</code>：若设置为&quot;batch&quot;，则将数据全部读入后转换；若设置为 &quot;stream&quot;，则需用户提供最大值及最小值进行流式计算转换。默认为 &quot;batch&quot;。</li><li><code>min</code>：使用流式计算时的最小值。</li><li><code>max</code>：使用流式计算时的最大值。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-7" tabindex="-1"><a class="header-anchor" href="#使用示例-7"><span>使用示例</span></a></h4><h5 id="全数据计算" tabindex="-1"><a class="header-anchor" href="#全数据计算"><span>全数据计算</span></a></h5><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s1|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|1970-01-01T08:00:00.100+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|         0.0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> minmax<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+--------------------+</span>
<span class="line">|                         Time|minmax(root.test.s1)|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line">|1970-01-01T08:00:00.100+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|                0.25|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00| 0.08333333333333333|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|                 0.0|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|  0.3333333333333333|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|                0.25|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00| 0.08333333333333333|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00| 0.08333333333333333|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|                0.25|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00| 0.16666666666666666|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|                 1.0|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|  0.3333333333333333|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|                 0.0|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00| 0.16666666666666666|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mode" tabindex="-1"><a class="header-anchor" href="#mode"><span>Mode</span></a></h3><h4 id="函数简介-8" tabindex="-1"><a class="header-anchor" href="#函数简介-8"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的众数，即出现次数最多的元素。</p><p><strong>函数名：</strong> MODE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型可以是任意的。</p><p><strong>输出序列：</strong> 输出单个序列，类型与输入相同，序列仅包含一个时间戳为众数第一次出现的时间戳、值为众数的数据点。</p><p><strong>提示：</strong></p><ul><li>如果有多个出现次数最多的元素，将会输出任意一个。</li><li>数据中的空值和缺失值将会被忽略，但<code>NaN</code>不会被忽略。</li></ul><h4 id="使用示例-8" tabindex="-1"><a class="header-anchor" href="#使用示例-8"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d2.s2|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|          Hello|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|          hello|</span>
<span class="line">|1970-01-01T08:00:00.003+08:00|          Hello|</span>
<span class="line">|1970-01-01T08:00:00.004+08:00|          World|</span>
<span class="line">|1970-01-01T08:00:00.005+08:00|          World|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|          World|</span>
<span class="line">|1970-01-15T09:37:34.451+08:00|          Hello|</span>
<span class="line">|1970-01-15T09:37:34.452+08:00|          hello|</span>
<span class="line">|1970-01-15T09:37:34.453+08:00|          Hello|</span>
<span class="line">|1970-01-15T09:37:34.454+08:00|          World|</span>
<span class="line">|1970-01-15T09:37:34.455+08:00|          World|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token keyword">mode</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------------+</span>
<span class="line">|                         Time|mode(root.test.d2.s2)|</span>
<span class="line">+-----------------------------+---------------------+</span>
<span class="line">|1970-01-01T08:00:00.004+08:00|                World|</span>
<span class="line">+-----------------------------+---------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mvavg" tabindex="-1"><a class="header-anchor" href="#mvavg"><span>MvAvg</span></a></h3><h4 id="函数简介-9" tabindex="-1"><a class="header-anchor" href="#函数简介-9"><span>函数简介</span></a></h4><p>本函数计算序列的移动平均。</p><p><strong>函数名：</strong> MVAVG</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>window</code>：移动窗口的长度。默认值为 10.</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-9" tabindex="-1"><a class="header-anchor" href="#使用示例-9"><span>使用示例</span></a></h4><h5 id="指定窗口长度" tabindex="-1"><a class="header-anchor" href="#指定窗口长度"><span>指定窗口长度</span></a></h5><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s1|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|1970-01-01T08:00:00.100+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|         0.0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> mvavg<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;window&quot;</span><span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------------------------+</span>
<span class="line">|                         Time|mvavg(root.test.s1, &quot;window&quot;=&quot;3&quot;)|</span>
<span class="line">+-----------------------------+---------------------------------+</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|               0.3333333333333333|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|              -0.3333333333333333|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|              -0.6666666666666666|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|               0.6666666666666666|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|               0.3333333333333333|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|              -0.6666666666666666|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|               0.3333333333333333|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|               3.3333333333333335|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|                              4.0|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|                              0.0|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|              -0.6666666666666666|</span>
<span class="line">+-----------------------------+---------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="pacf" tabindex="-1"><a class="header-anchor" href="#pacf"><span>PACF</span></a></h3><h4 id="函数简介-10" tabindex="-1"><a class="header-anchor" href="#函数简介-10"><span>函数简介</span></a></h4><p>本函数通过求解 Yule-Walker 方程，计算序列的偏自相关系数。对于特殊的输入序列，方程可能没有解，此时输出<code>NaN</code>。</p><p><strong>函数名：</strong> PACF</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>lag</code>：最大滞后阶数。默认值为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>10</mn><msub><mrow><mi>log</mi><mo>⁡</mo></mrow><mn>10</mn></msub><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\\min(10\\log_{10}n,n-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord">10</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.207em;"><span style="top:-2.4559em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2441em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>表示数据点个数。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-10" tabindex="-1"><a class="header-anchor" href="#使用示例-10"><span>使用示例</span></a></h4><h5 id="指定滞后阶数" tabindex="-1"><a class="header-anchor" href="#指定滞后阶数"><span>指定滞后阶数</span></a></h5><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s1|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|2019-12-27T00:00:00.000+08:00|         5.0|</span>
<span class="line">|2019-12-27T00:05:00.000+08:00|         5.0|</span>
<span class="line">|2019-12-27T00:10:00.000+08:00|         5.0|</span>
<span class="line">|2019-12-27T00:15:00.000+08:00|         5.0|</span>
<span class="line">|2019-12-27T00:20:00.000+08:00|         6.0|</span>
<span class="line">|2019-12-27T00:25:00.000+08:00|         5.0|</span>
<span class="line">|2019-12-27T00:30:00.000+08:00|         6.0|</span>
<span class="line">|2019-12-27T00:35:00.000+08:00|         6.0|</span>
<span class="line">|2019-12-27T00:40:00.000+08:00|         6.0|</span>
<span class="line">|2019-12-27T00:45:00.000+08:00|         6.0|</span>
<span class="line">|2019-12-27T00:50:00.000+08:00|         6.0|</span>
<span class="line">|2019-12-27T00:55:00.000+08:00|    5.982609|</span>
<span class="line">|2019-12-27T01:00:00.000+08:00|   5.9652176|</span>
<span class="line">|2019-12-27T01:05:00.000+08:00|    5.947826|</span>
<span class="line">|2019-12-27T01:10:00.000+08:00|   5.9304347|</span>
<span class="line">|2019-12-27T01:15:00.000+08:00|   5.9130435|</span>
<span class="line">|2019-12-27T01:20:00.000+08:00|   5.8956523|</span>
<span class="line">|2019-12-27T01:25:00.000+08:00|    5.878261|</span>
<span class="line">|2019-12-27T01:30:00.000+08:00|   5.8608694|</span>
<span class="line">|2019-12-27T01:35:00.000+08:00|    5.843478|</span>
<span class="line">............</span>
<span class="line">Total line number = 18066</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> pacf<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;lag&quot;</span><span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------------------+</span>
<span class="line">|                         Time|pacf(root.test.s1, &quot;lag&quot;=&quot;5&quot;)|</span>
<span class="line">+-----------------------------+-----------------------------+</span>
<span class="line">|2019-12-27T00:00:00.000+08:00|                          1.0|</span>
<span class="line">|2019-12-27T00:05:00.000+08:00|           0.3528915091942786|</span>
<span class="line">|2019-12-27T00:10:00.000+08:00|           0.1761346122516304|</span>
<span class="line">|2019-12-27T00:15:00.000+08:00|           0.1492391973294682|</span>
<span class="line">|2019-12-27T00:20:00.000+08:00|          0.03560059645868398|</span>
<span class="line">|2019-12-27T00:25:00.000+08:00|           0.0366222998995286|</span>
<span class="line">+-----------------------------+-----------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="percentile" tabindex="-1"><a class="header-anchor" href="#percentile"><span>Percentile</span></a></h3><h4 id="函数简介-11" tabindex="-1"><a class="header-anchor" href="#函数简介-11"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的精确或近似分位数。</p><p><strong>函数名：</strong> PERCENTILE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>rank</code>：所求分位数在所有数据中的排名百分比，取值范围为 (0,1]，默认值为 0.5。如当设为 0.5时则计算中位数。</li><li><code>error</code>：近似分位数的基于排名的误差百分比，取值范围为 [0,1)，默认值为0。如<code>rank</code>=0.5 且<code>error</code>=0.01，则计算出的分位数的真实排名百分比在 0.49~0.51之间。当<code>error</code>=0 时，计算结果为精确分位数。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型与输入序列相同。当<code>error</code>=0时，序列仅包含一个时间戳为分位数第一次出现的时间戳、值为分位数的数据点；否则，输出值的时间戳为0。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-11" tabindex="-1"><a class="header-anchor" href="#使用示例-11"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|2021-03-17T10:32:17.054+08:00|   0.5319929|</span>
<span class="line">|2021-03-17T10:32:18.054+08:00|   0.9304316|</span>
<span class="line">|2021-03-17T10:32:19.054+08:00|  -1.4800133|</span>
<span class="line">|2021-03-17T10:32:20.054+08:00|   0.6114087|</span>
<span class="line">|2021-03-17T10:32:21.054+08:00|   2.5163336|</span>
<span class="line">|2021-03-17T10:32:22.054+08:00|  -1.0845392|</span>
<span class="line">|2021-03-17T10:32:23.054+08:00|   1.0562582|</span>
<span class="line">|2021-03-17T10:32:24.054+08:00|   1.3867859|</span>
<span class="line">|2021-03-17T10:32:25.054+08:00| -0.45429882|</span>
<span class="line">|2021-03-17T10:32:26.054+08:00|   1.0353678|</span>
<span class="line">|2021-03-17T10:32:27.054+08:00|   0.7307929|</span>
<span class="line">|2021-03-17T10:32:28.054+08:00|   2.3167255|</span>
<span class="line">|2021-03-17T10:32:29.054+08:00|    2.342443|</span>
<span class="line">|2021-03-17T10:32:30.054+08:00|   1.5809103|</span>
<span class="line">|2021-03-17T10:32:31.054+08:00|   1.4829416|</span>
<span class="line">|2021-03-17T10:32:32.054+08:00|   1.5800357|</span>
<span class="line">|2021-03-17T10:32:33.054+08:00|   0.7124368|</span>
<span class="line">|2021-03-17T10:32:34.054+08:00| -0.78597564|</span>
<span class="line">|2021-03-17T10:32:35.054+08:00|   1.2058644|</span>
<span class="line">|2021-03-17T10:32:36.054+08:00|   1.4215064|</span>
<span class="line">|2021-03-17T10:32:37.054+08:00|   1.2808295|</span>
<span class="line">|2021-03-17T10:32:38.054+08:00|  -0.6173715|</span>
<span class="line">|2021-03-17T10:32:39.054+08:00|  0.06644377|</span>
<span class="line">|2021-03-17T10:32:40.054+08:00|    2.349338|</span>
<span class="line">|2021-03-17T10:32:41.054+08:00|   1.7335888|</span>
<span class="line">|2021-03-17T10:32:42.054+08:00|   1.5872132|</span>
<span class="line">............</span>
<span class="line">Total line number = 10000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> percentile<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;rank&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line">|                         Time|percentile(root.test.s0, &quot;rank&quot;=&quot;0.2&quot;, &quot;error&quot;=&quot;0.01&quot;)|</span>
<span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line">|2021-03-17T10:35:02.054+08:00|                                    0.1801469624042511|</span>
<span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="period" tabindex="-1"><a class="header-anchor" href="#period"><span>Period</span></a></h3><h4 id="函数简介-12" tabindex="-1"><a class="header-anchor" href="#函数简介-12"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的周期。</p><p><strong>函数名：</strong> PERIOD</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>输出序列：</strong> 输出单个序列，类型为 INT32，序列仅包含一个时间戳为 0、值为周期的数据点。</p><h4 id="使用示例-12" tabindex="-1"><a class="header-anchor" href="#使用示例-12"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d3.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|            1.0|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|            2.0|</span>
<span class="line">|1970-01-01T08:00:00.003+08:00|            3.0|</span>
<span class="line">|1970-01-01T08:00:00.004+08:00|            1.0|</span>
<span class="line">|1970-01-01T08:00:00.005+08:00|            2.0|</span>
<span class="line">|1970-01-01T08:00:00.006+08:00|            3.0|</span>
<span class="line">|1970-01-01T08:00:00.007+08:00|            1.0|</span>
<span class="line">|1970-01-01T08:00:00.008+08:00|            2.0|</span>
<span class="line">|1970-01-01T08:00:00.009+08:00|            3.0|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> period<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|                         Time|period(root.test.d3.s1)|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                      3|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="qlb" tabindex="-1"><a class="header-anchor" href="#qlb"><span>QLB</span></a></h3><h4 id="函数简介-13" tabindex="-1"><a class="header-anchor" href="#函数简介-13"><span>函数简介</span></a></h4><p>本函数对输入序列计算$Q_{LB} $统计量，并计算对应的p值。p值越小表明序列越有可能为非平稳序列。</p><p><strong>函数名：</strong> QLB</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>lag</code>：计算时用到的最大延迟阶数，取值应为 1 至 n-2 之间的整数，n 为序列采样总数。默认取 n-2。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。该序列是$Q_{LB} $统计量对应的 p 值，时间标签代表偏移阶数。</p><p><strong>提示：</strong> $Q_{LB} $统计量由自相关系数求得，如需得到统计量而非 p 值，可以使用 ACF 函数。</p><h4 id="使用示例-13" tabindex="-1"><a class="header-anchor" href="#使用示例-13"><span>使用示例</span></a></h4><h5 id="使用默认参数" tabindex="-1"><a class="header-anchor" href="#使用默认参数"><span>使用默认参数</span></a></h5><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|1970-01-01T00:00:00.100+08:00|           1.22|</span>
<span class="line">|1970-01-01T00:00:00.200+08:00|          -2.78|</span>
<span class="line">|1970-01-01T00:00:00.300+08:00|           1.53|</span>
<span class="line">|1970-01-01T00:00:00.400+08:00|           0.70|</span>
<span class="line">|1970-01-01T00:00:00.500+08:00|           0.75|</span>
<span class="line">|1970-01-01T00:00:00.600+08:00|          -0.72|</span>
<span class="line">|1970-01-01T00:00:00.700+08:00|          -0.22|</span>
<span class="line">|1970-01-01T00:00:00.800+08:00|           0.28|</span>
<span class="line">|1970-01-01T00:00:00.900+08:00|           0.57|</span>
<span class="line">|1970-01-01T00:00:01.000+08:00|          -0.22|</span>
<span class="line">|1970-01-01T00:00:01.100+08:00|          -0.72|</span>
<span class="line">|1970-01-01T00:00:01.200+08:00|           1.34|</span>
<span class="line">|1970-01-01T00:00:01.300+08:00|          -0.25|</span>
<span class="line">|1970-01-01T00:00:01.400+08:00|           0.17|</span>
<span class="line">|1970-01-01T00:00:01.500+08:00|           2.51|</span>
<span class="line">|1970-01-01T00:00:01.600+08:00|           1.42|</span>
<span class="line">|1970-01-01T00:00:01.700+08:00|          -1.34|</span>
<span class="line">|1970-01-01T00:00:01.800+08:00|          -0.01|</span>
<span class="line">|1970-01-01T00:00:01.900+08:00|          -0.49|</span>
<span class="line">|1970-01-01T00:00:02.000+08:00|           1.63|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> QLB<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+--------------------+</span>
<span class="line">|                         Time|QLB(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line">|1970-01-01T00:00:00.001+08:00|  0.2168702295315677|</span>
<span class="line">|1970-01-01T00:00:00.002+08:00|  0.3068948509261751|</span>
<span class="line">|1970-01-01T00:00:00.003+08:00|  0.4217859150918444|</span>
<span class="line">|1970-01-01T00:00:00.004+08:00|  0.5114539874276656|</span>
<span class="line">|1970-01-01T00:00:00.005+08:00|  0.6560619525616759|</span>
<span class="line">|1970-01-01T00:00:00.006+08:00|  0.7722398654053280|</span>
<span class="line">|1970-01-01T00:00:00.007+08:00|  0.8532491661465290|</span>
<span class="line">|1970-01-01T00:00:00.008+08:00|  0.9028575017542528|</span>
<span class="line">|1970-01-01T00:00:00.009+08:00|  0.9434989988192729|</span>
<span class="line">|1970-01-01T00:00:00.010+08:00|  0.8950280161464689|</span>
<span class="line">|1970-01-01T00:00:00.011+08:00|  0.7701048398839656|</span>
<span class="line">|1970-01-01T00:00:00.012+08:00|  0.7845536060001281|</span>
<span class="line">|1970-01-01T00:00:00.013+08:00|  0.5943030981705825|</span>
<span class="line">|1970-01-01T00:00:00.014+08:00|  0.4618413512531093|</span>
<span class="line">|1970-01-01T00:00:00.015+08:00|  0.2645948244673964|</span>
<span class="line">|1970-01-01T00:00:00.016+08:00|  0.3167530476666645|</span>
<span class="line">|1970-01-01T00:00:00.017+08:00|  0.2330010780351453|</span>
<span class="line">|1970-01-01T00:00:00.018+08:00|  0.0666611237622325|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="resample" tabindex="-1"><a class="header-anchor" href="#resample"><span>Resample</span></a></h3><h4 id="函数简介-14" tabindex="-1"><a class="header-anchor" href="#函数简介-14"><span>函数简介</span></a></h4><p>本函数对输入序列按照指定的频率进行重采样，包括上采样和下采样。目前，本函数支持的上采样方法包括<code>NaN</code>填充法 (NaN)、前值填充法 (FFill)、后值填充法 (BFill) 以及线性插值法 (Linear)；本函数支持的下采样方法为分组聚合，聚合方法包括最大值 (Max)、最小值 (Min)、首值 (First)、末值 (Last)、平均值 (Mean)和中位数 (Median)。</p><p><strong>函数名：</strong> RESAMPLE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>every</code>：重采样频率，是一个有单位的正数。目前支持五种单位，分别是 &#39;ms&#39;（毫秒）、&#39;s&#39;（秒）、&#39;m&#39;（分钟）、&#39;h&#39;（小时）和&#39;d&#39;（天）。该参数不允许缺省。</li><li><code>interp</code>：上采样的插值方法，取值为 &#39;NaN&#39;、&#39;FFill&#39;、&#39;BFill&#39; 或 &#39;Linear&#39;。在缺省情况下，使用<code>NaN</code>填充法。</li><li><code>aggr</code>：下采样的聚合方法，取值为 &#39;Max&#39;、&#39;Min&#39;、&#39;First&#39;、&#39;Last&#39;、&#39;Mean&#39; 或 &#39;Median&#39;。在缺省情况下，使用平均数聚合。</li><li><code>start</code>：重采样的起始时间（包含），是一个格式为 &#39;yyyy-MM-dd HH:mm:ss&#39; 的时间字符串。在缺省情况下，使用第一个有效数据点的时间戳。</li><li><code>end</code>：重采样的结束时间（不包含），是一个格式为 &#39;yyyy-MM-dd HH:mm:ss&#39; 的时间字符串。在缺省情况下，使用最后一个有效数据点的时间戳。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。该序列按照重采样频率严格等间隔分布。</p><p><strong>提示：</strong> 数据中的<code>NaN</code>将会被忽略。</p><h4 id="使用示例-14" tabindex="-1"><a class="header-anchor" href="#使用示例-14"><span>使用示例</span></a></h4><h5 id="上采样" tabindex="-1"><a class="header-anchor" href="#上采样"><span>上采样</span></a></h5><p>当重采样频率高于数据原始频率时，将会进行上采样。</p><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2021-03-06T16:00:00.000+08:00|           3.09|</span>
<span class="line">|2021-03-06T16:15:00.000+08:00|           3.53|</span>
<span class="line">|2021-03-06T16:30:00.000+08:00|            3.5|</span>
<span class="line">|2021-03-06T16:45:00.000+08:00|           3.51|</span>
<span class="line">|2021-03-06T17:00:00.000+08:00|           3.41|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> resample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;every&#39;</span><span class="token operator">=</span><span class="token string">&#39;5m&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;interp&#39;</span><span class="token operator">=</span><span class="token string">&#39;linear&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+----------------------------------------------------------+</span>
<span class="line">|                         Time|resample(root.test.d1.s1, &quot;every&quot;=&quot;5m&quot;, &quot;interp&quot;=&quot;linear&quot;)|</span>
<span class="line">+-----------------------------+----------------------------------------------------------+</span>
<span class="line">|2021-03-06T16:00:00.000+08:00|                                        3.0899999141693115|</span>
<span class="line">|2021-03-06T16:05:00.000+08:00|                                        3.2366665999094644|</span>
<span class="line">|2021-03-06T16:10:00.000+08:00|                                        3.3833332856496177|</span>
<span class="line">|2021-03-06T16:15:00.000+08:00|                                        3.5299999713897705|</span>
<span class="line">|2021-03-06T16:20:00.000+08:00|                                        3.5199999809265137|</span>
<span class="line">|2021-03-06T16:25:00.000+08:00|                                         3.509999990463257|</span>
<span class="line">|2021-03-06T16:30:00.000+08:00|                                                       3.5|</span>
<span class="line">|2021-03-06T16:35:00.000+08:00|                                         3.503333330154419|</span>
<span class="line">|2021-03-06T16:40:00.000+08:00|                                         3.506666660308838|</span>
<span class="line">|2021-03-06T16:45:00.000+08:00|                                         3.509999990463257|</span>
<span class="line">|2021-03-06T16:50:00.000+08:00|                                        3.4766666889190674|</span>
<span class="line">|2021-03-06T16:55:00.000+08:00|                                         3.443333387374878|</span>
<span class="line">|2021-03-06T17:00:00.000+08:00|                                        3.4100000858306885|</span>
<span class="line">+-----------------------------+----------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="下采样" tabindex="-1"><a class="header-anchor" href="#下采样"><span>下采样</span></a></h5><p>当重采样频率低于数据原始频率时，将会进行下采样。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> resample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;every&#39;</span><span class="token operator">=</span><span class="token string">&#39;30m&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;aggr&#39;</span><span class="token operator">=</span><span class="token string">&#39;first&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+--------------------------------------------------------+</span>
<span class="line">|                         Time|resample(root.test.d1.s1, &quot;every&quot;=&quot;30m&quot;, &quot;aggr&quot;=&quot;first&quot;)|</span>
<span class="line">+-----------------------------+--------------------------------------------------------+</span>
<span class="line">|2021-03-06T16:00:00.000+08:00|                                      3.0899999141693115|</span>
<span class="line">|2021-03-06T16:30:00.000+08:00|                                                     3.5|</span>
<span class="line">|2021-03-06T17:00:00.000+08:00|                                      3.4100000858306885|</span>
<span class="line">+-----------------------------+--------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="指定重采样时间段" tabindex="-1"><a class="header-anchor" href="#指定重采样时间段"><span>指定重采样时间段</span></a></h5><p>可以使用<code>start</code>和<code>end</code>两个参数指定重采样的时间段，超出实际时间范围的部分会被插值填补。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> resample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;every&#39;</span><span class="token operator">=</span><span class="token string">&#39;30m&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;start&#39;</span><span class="token operator">=</span><span class="token string">&#39;2021-03-06 15:00:00&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------------------------------------------------------------+</span>
<span class="line">|                         Time|resample(root.test.d1.s1, &quot;every&quot;=&quot;30m&quot;, &quot;start&quot;=&quot;2021-03-06 15:00:00&quot;)|</span>
<span class="line">+-----------------------------+-----------------------------------------------------------------------+</span>
<span class="line">|2021-03-06T15:00:00.000+08:00|                                                                    NaN|</span>
<span class="line">|2021-03-06T15:30:00.000+08:00|                                                                    NaN|</span>
<span class="line">|2021-03-06T16:00:00.000+08:00|                                                      3.309999942779541|</span>
<span class="line">|2021-03-06T16:30:00.000+08:00|                                                     3.5049999952316284|</span>
<span class="line">|2021-03-06T17:00:00.000+08:00|                                                     3.4100000858306885|</span>
<span class="line">+-----------------------------+-----------------------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sample" tabindex="-1"><a class="header-anchor" href="#sample"><span>Sample</span></a></h3><h4 id="函数简介-15" tabindex="-1"><a class="header-anchor" href="#函数简介-15"><span>函数简介</span></a></h4><p>本函数对输入序列进行采样，即从输入序列中选取指定数量的数据点并输出。目前，本函数支持两种采样方法：<strong>蓄水池采样法 (reservoir sampling)</strong> 对数据进行随机采样，所有数据点被采样的概率相同；<strong>等距采样法 (isometric sampling)</strong> 按照相等的索引间隔对数据进行采样。</p><p><strong>函数名：</strong> SAMPLE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型可以是任意的。</p><p><strong>参数：</strong></p><ul><li><code>method</code>：采样方法，取值为 &#39;reservoir&#39; 或&#39; isometric&#39;。在缺省情况下，采用蓄水池采样法。</li><li><code>k</code>：采样数，它是一个正整数，在缺省情况下为 1。</li></ul><p><strong>输出序列：</strong> 输出单个序列，类型与输入序列相同。该序列的长度为采样数，序列中的每一个数据点都来自于输入序列。</p><p><strong>提示：</strong> 如果采样数大于序列长度，那么输入序列中所有的数据点都会被输出。</p><h4 id="使用示例-15" tabindex="-1"><a class="header-anchor" href="#使用示例-15"><span>使用示例</span></a></h4><h5 id="蓄水池采样" tabindex="-1"><a class="header-anchor" href="#蓄水池采样"><span>蓄水池采样</span></a></h5><p>当<code>method</code>参数为 &#39;reservoir&#39; 或缺省时，采用蓄水池采样法对输入序列进行采样。由于该采样方法具有随机性，下面展示的输出序列只是一种可能的结果。</p><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|            1.0|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|            2.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|            3.0|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|            4.0|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|            5.0|</span>
<span class="line">|2020-01-01T00:00:06.000+08:00|            6.0|</span>
<span class="line">|2020-01-01T00:00:07.000+08:00|            7.0|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|            8.0|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|            9.0|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|           10.0|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> sample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token string">&#39;reservoir&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line">|                         Time|sample(root.test.d1.s1, &quot;method&quot;=&quot;reservoir&quot;, &quot;k&quot;=&quot;5&quot;)|</span>
<span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|                                                   2.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|                                                   3.0|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|                                                   5.0|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|                                                   8.0|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|                                                  10.0|</span>
<span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="等距采样" tabindex="-1"><a class="header-anchor" href="#等距采样"><span>等距采样</span></a></h5><p>当<code>method</code>参数为 &#39;isometric&#39; 时，采用等距采样法对输入序列进行采样。</p><p>输入序列同上，用于查询的 SQL 语句如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> sample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token string">&#39;isometric&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line">|                         Time|sample(root.test.d1.s1, &quot;method&quot;=&quot;isometric&quot;, &quot;k&quot;=&quot;5&quot;)|</span>
<span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|                                                   1.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|                                                   3.0|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|                                                   5.0|</span>
<span class="line">|2020-01-01T00:00:07.000+08:00|                                                   7.0|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|                                                   9.0|</span>
<span class="line">+-----------------------------+------------------------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="segment" tabindex="-1"><a class="header-anchor" href="#segment"><span>Segment</span></a></h3><h4 id="函数简介-16" tabindex="-1"><a class="header-anchor" href="#函数简介-16"><span>函数简介</span></a></h4><p>本函数按照数据的线性变化趋势将数据划分为多个子序列，返回分段直线拟合后的子序列首值或所有拟合值。</p><p><strong>函数名：</strong> SEGMENT</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>参数：</strong></p><ul><li><p><code>output</code>：&quot;all&quot; 输出所有拟合值；&quot;first&quot; 输出子序列起点拟合值。默认为 &quot;first&quot;。</p></li><li><p><code>error</code>：判定存在线性趋势的误差允许阈值。误差的定义为子序列进行线性拟合的误差的绝对值的均值。默认为 0.1.</p></li></ul><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。</p><p><strong>提示：</strong> 函数默认所有数据等时间间隔分布。函数读取所有数据，若原始数据过多，请先进行降采样处理。拟合采用自底向上方法，子序列的尾值可能会被认作子序列首值输出。</p><h4 id="使用示例-16" tabindex="-1"><a class="header-anchor" href="#使用示例-16"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s1|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|         5.0|</span>
<span class="line">|1970-01-01T08:00:00.100+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00|         3.0|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|         4.0|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|         5.0|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|         6.0|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|         7.0|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|         8.0|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|         9.0|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|         9.1|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|         9.2|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|         9.3|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|         9.4|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|         9.5|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|         9.6|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|         9.7|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|         9.8|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|         9.9|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:02.100+08:00|         8.0|</span>
<span class="line">|1970-01-01T08:00:02.200+08:00|         6.0|</span>
<span class="line">|1970-01-01T08:00:02.300+08:00|         4.0|</span>
<span class="line">|1970-01-01T08:00:02.400+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:02.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:02.600+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:02.700+08:00|        -4.0|</span>
<span class="line">|1970-01-01T08:00:02.800+08:00|        -6.0|</span>
<span class="line">|1970-01-01T08:00:02.900+08:00|        -8.0|</span>
<span class="line">|1970-01-01T08:00:03.000+08:00|       -10.0|</span>
<span class="line">|1970-01-01T08:00:03.100+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.200+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.300+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.400+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.500+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.600+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.700+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.800+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:03.900+08:00|        10.0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> segment<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------------------------+</span>
<span class="line">|                         Time|segment(root.test.s1, &quot;error&quot;=&quot;0.1&quot;)|</span>
<span class="line">+-----------------------------+------------------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                                 5.0|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|                                 1.0|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|                                 9.0|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|                                10.0|</span>
<span class="line">|1970-01-01T08:00:03.000+08:00|                               -10.0|</span>
<span class="line">|1970-01-01T08:00:03.200+08:00|                                10.0|</span>
<span class="line">+-----------------------------+------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="skew" tabindex="-1"><a class="header-anchor" href="#skew"><span>Skew</span></a></h3><h4 id="函数简介-17" tabindex="-1"><a class="header-anchor" href="#函数简介-17"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的总体偏度</p><p><strong>函数名：</strong> SKEW</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE，序列仅包含一个时间戳为 0、值为总体偏度的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-17" tabindex="-1"><a class="header-anchor" href="#使用示例-17"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:00.000+08:00|            1.0|</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|            2.0|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|            3.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|            4.0|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|            5.0|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|            6.0|</span>
<span class="line">|2020-01-01T00:00:06.000+08:00|            7.0|</span>
<span class="line">|2020-01-01T00:00:07.000+08:00|            8.0|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|            9.0|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:11.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:12.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:13.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:14.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:15.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:16.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:17.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:18.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:19.000+08:00|           10.0|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的SQL语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> skew<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|                         Time|  skew(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|    -0.9998427402292644|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spline" tabindex="-1"><a class="header-anchor" href="#spline"><span>Spline</span></a></h3><h4 id="函数简介-18" tabindex="-1"><a class="header-anchor" href="#函数简介-18"><span>函数简介</span></a></h4><p>本函数提供对原始序列进行三次样条曲线拟合后的插值重采样。</p><p><strong>函数名：</strong> SPLINE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>points</code>：重采样个数。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><p><strong>提示</strong>：输出序列保留输入序列的首尾值，等时间间隔采样。仅当输入点个数不少于 4 个时才计算插值。</p><h4 id="使用示例-18" tabindex="-1"><a class="header-anchor" href="#使用示例-18"><span>使用示例</span></a></h4><h5 id="指定插值个数" tabindex="-1"><a class="header-anchor" href="#指定插值个数"><span>指定插值个数</span></a></h5><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s1|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|         1.2|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|         1.7|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|         2.1|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|         1.8|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|         1.2|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|         1.6|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> spline<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;points&quot;</span><span class="token operator">=</span><span class="token string">&quot;151&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------------------------------+</span>
<span class="line">|                         Time|spline(root.test.s1, &quot;points&quot;=&quot;151&quot;)|</span>
<span class="line">+-----------------------------+------------------------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                                 0.0|</span>
<span class="line">|1970-01-01T08:00:00.010+08:00|                 0.04870000251134237|</span>
<span class="line">|1970-01-01T08:00:00.020+08:00|                 0.09680000495910646|</span>
<span class="line">|1970-01-01T08:00:00.030+08:00|                 0.14430000734329226|</span>
<span class="line">|1970-01-01T08:00:00.040+08:00|                 0.19120000966389972|</span>
<span class="line">|1970-01-01T08:00:00.050+08:00|                 0.23750001192092896|</span>
<span class="line">|1970-01-01T08:00:00.060+08:00|                  0.2832000141143799|</span>
<span class="line">|1970-01-01T08:00:00.070+08:00|                 0.32830001624425253|</span>
<span class="line">|1970-01-01T08:00:00.080+08:00|                  0.3728000183105469|</span>
<span class="line">|1970-01-01T08:00:00.090+08:00|                   0.416700020313263|</span>
<span class="line">|1970-01-01T08:00:00.100+08:00|                  0.4600000222524008|</span>
<span class="line">|1970-01-01T08:00:00.110+08:00|                  0.5027000241279602|</span>
<span class="line">|1970-01-01T08:00:00.120+08:00|                  0.5448000259399414|</span>
<span class="line">|1970-01-01T08:00:00.130+08:00|                  0.5863000276883443|</span>
<span class="line">|1970-01-01T08:00:00.140+08:00|                   0.627200029373169|</span>
<span class="line">|1970-01-01T08:00:00.150+08:00|                  0.6675000309944153|</span>
<span class="line">|1970-01-01T08:00:00.160+08:00|                  0.7072000325520833|</span>
<span class="line">|1970-01-01T08:00:00.170+08:00|                  0.7463000340461731|</span>
<span class="line">|1970-01-01T08:00:00.180+08:00|                  0.7848000354766846|</span>
<span class="line">|1970-01-01T08:00:00.190+08:00|                  0.8227000368436178|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|                  0.8600000381469728|</span>
<span class="line">|1970-01-01T08:00:00.210+08:00|                  0.8967000393867494|</span>
<span class="line">|1970-01-01T08:00:00.220+08:00|                  0.9328000405629477|</span>
<span class="line">|1970-01-01T08:00:00.230+08:00|                  0.9683000416755676|</span>
<span class="line">|1970-01-01T08:00:00.240+08:00|                  1.0032000427246095|</span>
<span class="line">|1970-01-01T08:00:00.250+08:00|                   1.037500043710073|</span>
<span class="line">|1970-01-01T08:00:00.260+08:00|                   1.071200044631958|</span>
<span class="line">|1970-01-01T08:00:00.270+08:00|                  1.1043000454902647|</span>
<span class="line">|1970-01-01T08:00:00.280+08:00|                  1.1368000462849934|</span>
<span class="line">|1970-01-01T08:00:00.290+08:00|                  1.1687000470161437|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|                  1.2000000476837158|</span>
<span class="line">|1970-01-01T08:00:00.310+08:00|                  1.2307000483103594|</span>
<span class="line">|1970-01-01T08:00:00.320+08:00|                  1.2608000489139557|</span>
<span class="line">|1970-01-01T08:00:00.330+08:00|                  1.2903000494873524|</span>
<span class="line">|1970-01-01T08:00:00.340+08:00|                  1.3192000500233967|</span>
<span class="line">|1970-01-01T08:00:00.350+08:00|                  1.3475000505149364|</span>
<span class="line">|1970-01-01T08:00:00.360+08:00|                  1.3752000509548186|</span>
<span class="line">|1970-01-01T08:00:00.370+08:00|                   1.402300051335891|</span>
<span class="line">|1970-01-01T08:00:00.380+08:00|                  1.4288000516510009|</span>
<span class="line">|1970-01-01T08:00:00.390+08:00|                  1.4547000518929958|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00|                   1.480000052054723|</span>
<span class="line">|1970-01-01T08:00:00.410+08:00|                  1.5047000521290301|</span>
<span class="line">|1970-01-01T08:00:00.420+08:00|                  1.5288000521087646|</span>
<span class="line">|1970-01-01T08:00:00.430+08:00|                  1.5523000519867738|</span>
<span class="line">|1970-01-01T08:00:00.440+08:00|                   1.575200051755905|</span>
<span class="line">|1970-01-01T08:00:00.450+08:00|                   1.597500051409006|</span>
<span class="line">|1970-01-01T08:00:00.460+08:00|                   1.619200050938924|</span>
<span class="line">|1970-01-01T08:00:00.470+08:00|                  1.6403000503385066|</span>
<span class="line">|1970-01-01T08:00:00.480+08:00|                   1.660800049600601|</span>
<span class="line">|1970-01-01T08:00:00.490+08:00|                   1.680700048718055|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|                  1.7000000476837158|</span>
<span class="line">|1970-01-01T08:00:00.510+08:00|                  1.7188475466453037|</span>
<span class="line">|1970-01-01T08:00:00.520+08:00|                  1.7373800457262996|</span>
<span class="line">|1970-01-01T08:00:00.530+08:00|                  1.7555825448831923|</span>
<span class="line">|1970-01-01T08:00:00.540+08:00|                  1.7734400440724702|</span>
<span class="line">|1970-01-01T08:00:00.550+08:00|                   1.790937543250622|</span>
<span class="line">|1970-01-01T08:00:00.560+08:00|                  1.8080600423741364|</span>
<span class="line">|1970-01-01T08:00:00.570+08:00|                  1.8247925413995016|</span>
<span class="line">|1970-01-01T08:00:00.580+08:00|                  1.8411200402832066|</span>
<span class="line">|1970-01-01T08:00:00.590+08:00|                  1.8570275389817397|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|                  1.8725000374515897|</span>
<span class="line">|1970-01-01T08:00:00.610+08:00|                  1.8875225356492449|</span>
<span class="line">|1970-01-01T08:00:00.620+08:00|                   1.902080033531194|</span>
<span class="line">|1970-01-01T08:00:00.630+08:00|                  1.9161575310539258|</span>
<span class="line">|1970-01-01T08:00:00.640+08:00|                  1.9297400281739288|</span>
<span class="line">|1970-01-01T08:00:00.650+08:00|                  1.9428125248476913|</span>
<span class="line">|1970-01-01T08:00:00.660+08:00|                  1.9553600210317021|</span>
<span class="line">|1970-01-01T08:00:00.670+08:00|                    1.96736751668245|</span>
<span class="line">|1970-01-01T08:00:00.680+08:00|                  1.9788200117564232|</span>
<span class="line">|1970-01-01T08:00:00.690+08:00|                  1.9897025062101101|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|                                 2.0|</span>
<span class="line">|1970-01-01T08:00:00.710+08:00|                  2.0097024933913334|</span>
<span class="line">|1970-01-01T08:00:00.720+08:00|                  2.0188199867081615|</span>
<span class="line">|1970-01-01T08:00:00.730+08:00|                   2.027367479995188|</span>
<span class="line">|1970-01-01T08:00:00.740+08:00|                  2.0353599732971155|</span>
<span class="line">|1970-01-01T08:00:00.750+08:00|                  2.0428124666586482|</span>
<span class="line">|1970-01-01T08:00:00.760+08:00|                   2.049739960124489|</span>
<span class="line">|1970-01-01T08:00:00.770+08:00|                   2.056157453739342|</span>
<span class="line">|1970-01-01T08:00:00.780+08:00|                    2.06207994754791|</span>
<span class="line">|1970-01-01T08:00:00.790+08:00|                   2.067522441594897|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|                   2.072499935925006|</span>
<span class="line">|1970-01-01T08:00:00.810+08:00|                    2.07702743058294|</span>
<span class="line">|1970-01-01T08:00:00.820+08:00|                   2.081119925613404|</span>
<span class="line">|1970-01-01T08:00:00.830+08:00|                     2.0847924210611|</span>
<span class="line">|1970-01-01T08:00:00.840+08:00|                  2.0880599169707317|</span>
<span class="line">|1970-01-01T08:00:00.850+08:00|                  2.0909374133870027|</span>
<span class="line">|1970-01-01T08:00:00.860+08:00|                  2.0934399103546166|</span>
<span class="line">|1970-01-01T08:00:00.870+08:00|                  2.0955824079182768|</span>
<span class="line">|1970-01-01T08:00:00.880+08:00|                  2.0973799061226863|</span>
<span class="line">|1970-01-01T08:00:00.890+08:00|                   2.098847405012549|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|                  2.0999999046325684|</span>
<span class="line">|1970-01-01T08:00:00.910+08:00|                  2.1005574051201332|</span>
<span class="line">|1970-01-01T08:00:00.920+08:00|                  2.1002599065303778|</span>
<span class="line">|1970-01-01T08:00:00.930+08:00|                  2.0991524087846245|</span>
<span class="line">|1970-01-01T08:00:00.940+08:00|                  2.0972799118041947|</span>
<span class="line">|1970-01-01T08:00:00.950+08:00|                  2.0946874155104105|</span>
<span class="line">|1970-01-01T08:00:00.960+08:00|                  2.0914199198245944|</span>
<span class="line">|1970-01-01T08:00:00.970+08:00|                  2.0875224246680673|</span>
<span class="line">|1970-01-01T08:00:00.980+08:00|                   2.083039929962151|</span>
<span class="line">|1970-01-01T08:00:00.990+08:00|                  2.0780174356281687|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|                  2.0724999415874406|</span>
<span class="line">|1970-01-01T08:00:01.010+08:00|                    2.06653244776129|</span>
<span class="line">|1970-01-01T08:00:01.020+08:00|                   2.060159954071038|</span>
<span class="line">|1970-01-01T08:00:01.030+08:00|                   2.053427460438006|</span>
<span class="line">|1970-01-01T08:00:01.040+08:00|                   2.046379966783517|</span>
<span class="line">|1970-01-01T08:00:01.050+08:00|                  2.0390624730288924|</span>
<span class="line">|1970-01-01T08:00:01.060+08:00|                   2.031519979095454|</span>
<span class="line">|1970-01-01T08:00:01.070+08:00|                  2.0237974849045237|</span>
<span class="line">|1970-01-01T08:00:01.080+08:00|                   2.015939990377423|</span>
<span class="line">|1970-01-01T08:00:01.090+08:00|                  2.0079924954354746|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|                                 2.0|</span>
<span class="line">|1970-01-01T08:00:01.110+08:00|                  1.9907018211101906|</span>
<span class="line">|1970-01-01T08:00:01.120+08:00|                  1.9788509124245144|</span>
<span class="line">|1970-01-01T08:00:01.130+08:00|                  1.9645127287932083|</span>
<span class="line">|1970-01-01T08:00:01.140+08:00|                  1.9477527250665083|</span>
<span class="line">|1970-01-01T08:00:01.150+08:00|                  1.9286363560946513|</span>
<span class="line">|1970-01-01T08:00:01.160+08:00|                  1.9072290767278735|</span>
<span class="line">|1970-01-01T08:00:01.170+08:00|                  1.8835963418164114|</span>
<span class="line">|1970-01-01T08:00:01.180+08:00|                  1.8578036062105014|</span>
<span class="line">|1970-01-01T08:00:01.190+08:00|                  1.8299163247603802|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|                  1.7999999523162842|</span>
<span class="line">|1970-01-01T08:00:01.210+08:00|                  1.7623635841923329|</span>
<span class="line">|1970-01-01T08:00:01.220+08:00|                  1.7129696477516976|</span>
<span class="line">|1970-01-01T08:00:01.230+08:00|                  1.6543635959181928|</span>
<span class="line">|1970-01-01T08:00:01.240+08:00|                  1.5890908816156328|</span>
<span class="line">|1970-01-01T08:00:01.250+08:00|                  1.5196969577678319|</span>
<span class="line">|1970-01-01T08:00:01.260+08:00|                  1.4487272772986044|</span>
<span class="line">|1970-01-01T08:00:01.270+08:00|                  1.3787272931317647|</span>
<span class="line">|1970-01-01T08:00:01.280+08:00|                  1.3122424581911272|</span>
<span class="line">|1970-01-01T08:00:01.290+08:00|                   1.251818225400506|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|                  1.2000000476837158|</span>
<span class="line">|1970-01-01T08:00:01.310+08:00|                  1.1548000470995912|</span>
<span class="line">|1970-01-01T08:00:01.320+08:00|                  1.1130667107899999|</span>
<span class="line">|1970-01-01T08:00:01.330+08:00|                  1.0756000393033045|</span>
<span class="line">|1970-01-01T08:00:01.340+08:00|                   1.043200033187868|</span>
<span class="line">|1970-01-01T08:00:01.350+08:00|                   1.016666692992053|</span>
<span class="line">|1970-01-01T08:00:01.360+08:00|                  0.9968000192642223|</span>
<span class="line">|1970-01-01T08:00:01.370+08:00|                  0.9844000125527389|</span>
<span class="line">|1970-01-01T08:00:01.380+08:00|                  0.9802666734059655|</span>
<span class="line">|1970-01-01T08:00:01.390+08:00|                  0.9852000023722649|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|                                 1.0|</span>
<span class="line">|1970-01-01T08:00:01.410+08:00|                   1.023999999165535|</span>
<span class="line">|1970-01-01T08:00:01.420+08:00|                  1.0559999990463256|</span>
<span class="line">|1970-01-01T08:00:01.430+08:00|                  1.0959999996423722|</span>
<span class="line">|1970-01-01T08:00:01.440+08:00|                  1.1440000009536744|</span>
<span class="line">|1970-01-01T08:00:01.450+08:00|                  1.2000000029802322|</span>
<span class="line">|1970-01-01T08:00:01.460+08:00|                   1.264000005722046|</span>
<span class="line">|1970-01-01T08:00:01.470+08:00|                  1.3360000091791153|</span>
<span class="line">|1970-01-01T08:00:01.480+08:00|                  1.4160000133514405|</span>
<span class="line">|1970-01-01T08:00:01.490+08:00|                  1.5040000182390214|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|                   1.600000023841858|</span>
<span class="line">+-----------------------------+------------------------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spread" tabindex="-1"><a class="header-anchor" href="#spread"><span>Spread</span></a></h3><h4 id="函数简介-19" tabindex="-1"><a class="header-anchor" href="#函数简介-19"><span>函数简介</span></a></h4><p>本函数用于计算时间序列的极差，即最大值减去最小值的结果。</p><p><strong>函数名：</strong> SPREAD</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型与输入相同，序列仅包含一个时间戳为 0 、值为极差的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-19" tabindex="-1"><a class="header-anchor" href="#使用示例-19"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|          100.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|          101.0|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|          102.0|</span>
<span class="line">|2020-01-01T00:00:06.000+08:00|          104.0|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|          126.0|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|          108.0|</span>
<span class="line">|2020-01-01T00:00:14.000+08:00|          112.0|</span>
<span class="line">|2020-01-01T00:00:15.000+08:00|          113.0|</span>
<span class="line">|2020-01-01T00:00:16.000+08:00|          114.0|</span>
<span class="line">|2020-01-01T00:00:18.000+08:00|          116.0|</span>
<span class="line">|2020-01-01T00:00:20.000+08:00|          118.0|</span>
<span class="line">|2020-01-01T00:00:22.000+08:00|          120.0|</span>
<span class="line">|2020-01-01T00:00:26.000+08:00|          124.0|</span>
<span class="line">|2020-01-01T00:00:28.000+08:00|          126.0|</span>
<span class="line">|2020-01-01T00:00:30.000+08:00|            NaN|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> spread<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|                         Time|spread(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|                   26.0|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="stddev" tabindex="-1"><a class="header-anchor" href="#stddev"><span>Stddev</span></a></h3><h4 id="函数简介-20" tabindex="-1"><a class="header-anchor" href="#函数简介-20"><span>函数简介</span></a></h4><p>本函数用于计算单列数值型数据的总体标准差。</p><p><strong>函数名：</strong> STDDEV</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>输出序列：</strong> 输出单个序列，类型为 DOUBLE。序列仅包含一个时间戳为 0、值为总体标准差的数据点。</p><p><strong>提示：</strong> 数据中的空值、缺失值和<code>NaN</code>将会被忽略。</p><h4 id="使用示例-20" tabindex="-1"><a class="header-anchor" href="#使用示例-20"><span>使用示例</span></a></h4><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+---------------+</span>
<span class="line">|                         Time|root.test.d1.s1|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line">|2020-01-01T00:00:00.000+08:00|            1.0|</span>
<span class="line">|2020-01-01T00:00:01.000+08:00|            2.0|</span>
<span class="line">|2020-01-01T00:00:02.000+08:00|            3.0|</span>
<span class="line">|2020-01-01T00:00:03.000+08:00|            4.0|</span>
<span class="line">|2020-01-01T00:00:04.000+08:00|            5.0|</span>
<span class="line">|2020-01-01T00:00:05.000+08:00|            6.0|</span>
<span class="line">|2020-01-01T00:00:06.000+08:00|            7.0|</span>
<span class="line">|2020-01-01T00:00:07.000+08:00|            8.0|</span>
<span class="line">|2020-01-01T00:00:08.000+08:00|            9.0|</span>
<span class="line">|2020-01-01T00:00:09.000+08:00|           10.0|</span>
<span class="line">|2020-01-01T00:00:10.000+08:00|           11.0|</span>
<span class="line">|2020-01-01T00:00:11.000+08:00|           12.0|</span>
<span class="line">|2020-01-01T00:00:12.000+08:00|           13.0|</span>
<span class="line">|2020-01-01T00:00:13.000+08:00|           14.0|</span>
<span class="line">|2020-01-01T00:00:14.000+08:00|           15.0|</span>
<span class="line">|2020-01-01T00:00:15.000+08:00|           16.0|</span>
<span class="line">|2020-01-01T00:00:16.000+08:00|           17.0|</span>
<span class="line">|2020-01-01T00:00:17.000+08:00|           18.0|</span>
<span class="line">|2020-01-01T00:00:18.000+08:00|           19.0|</span>
<span class="line">|2020-01-01T00:00:19.000+08:00|           20.0|</span>
<span class="line">+-----------------------------+---------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> stddev<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|                         Time|stddev(root.test.d1.s1)|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line">|1970-01-01T08:00:00.000+08:00|     5.7662812973353965|</span>
<span class="line">+-----------------------------+-----------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zscore" tabindex="-1"><a class="header-anchor" href="#zscore"><span>ZScore</span></a></h3><h4 id="函数简介-21" tabindex="-1"><a class="header-anchor" href="#函数简介-21"><span>函数简介</span></a></h4><p>本函数将输入序列使用z-score方法进行归一化。</p><p><strong>函数名：</strong> ZSCORE</p><p><strong>输入序列：</strong> 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。</p><p><strong>参数：</strong></p><ul><li><code>compute</code>：若设置为 &quot;batch&quot;，则将数据全部读入后转换；若设置为 &quot;stream&quot;，则需用户提供均值及方差进行流式计算转换。默认为 &quot;batch&quot;。</li><li><code>avg</code>：使用流式计算时的均值。</li><li><code>sd</code>：使用流式计算时的标准差。</li></ul><p><strong>输出序列</strong>：输出单个序列，类型为 DOUBLE。</p><h4 id="使用示例-21" tabindex="-1"><a class="header-anchor" href="#使用示例-21"><span>使用示例</span></a></h4><h5 id="全数据计算-1" tabindex="-1"><a class="header-anchor" href="#全数据计算-1"><span>全数据计算</span></a></h5><p>输入序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+------------+</span>
<span class="line">|                         Time|root.test.s1|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line">|1970-01-01T08:00:00.100+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00|        -1.0|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00|         1.0|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|         0.0|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|        10.0|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|         2.0|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|        -2.0|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|         0.0|</span>
<span class="line">+-----------------------------+------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用于查询的 SQL 语句：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> zscore<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>输出序列：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+--------------------+</span>
<span class="line">|                         Time|zscore(root.test.s1)|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line">|1970-01-01T08:00:00.100+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:00.200+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:00.300+08:00| 0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:00.400+08:00| -0.6201736729460423|</span>
<span class="line">|1970-01-01T08:00:00.500+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:00.600+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:00.700+08:00|  -1.033622788243404|</span>
<span class="line">|1970-01-01T08:00:00.800+08:00|  0.6201736729460423|</span>
<span class="line">|1970-01-01T08:00:00.900+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:01.000+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:01.100+08:00| 0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:01.200+08:00| -0.6201736729460423|</span>
<span class="line">|1970-01-01T08:00:01.300+08:00| -0.6201736729460423|</span>
<span class="line">|1970-01-01T08:00:01.400+08:00| 0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:01.500+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:01.600+08:00|-0.20672455764868078|</span>
<span class="line">|1970-01-01T08:00:01.700+08:00|  3.9277665953249348|</span>
<span class="line">|1970-01-01T08:00:01.800+08:00|  0.6201736729460423|</span>
<span class="line">|1970-01-01T08:00:01.900+08:00|  -1.033622788243404|</span>
<span class="line">|1970-01-01T08:00:02.000+08:00|-0.20672455764868078|</span>
<span class="line">+-----------------------------+--------------------+</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,388)]))}const r=n(i,[["render",p],["__file","Data-Profiling.html.vue"]]),d=JSON.parse('{"path":"/zh/UserGuide/V0.13.x/UDF-Library/Data-Profiling.html","title":"","lang":"zh-CN","frontmatter":{"description":"数据画像 ACF 函数简介 本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见XCorr函数文档。 函数名： ACF 输入序列： 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。 输出序列： 输出单个序列，类型为 DOUBLE。序列中共包含2N−1个数据点，每个值的具体含义参见XCor...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V0.13.x/UDF-Library/Data-Profiling.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V0.13.x/UDF-Library/Data-Profiling.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:description","content":"数据画像 ACF 函数简介 本函数用于计算时间序列的自相关函数值，即序列与自身之间的互相关函数，详情参见XCorr函数文档。 函数名： ACF 输入序列： 仅支持单个输入序列，类型为 INT32 / INT64 / FLOAT / DOUBLE。 输出序列： 输出单个序列，类型为 DOUBLE。序列中共包含2N−1个数据点，每个值的具体含义参见XCor..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"数据画像","slug":"数据画像","link":"#数据画像","children":[{"level":3,"title":"ACF","slug":"acf","link":"#acf","children":[]},{"level":3,"title":"Distinct","slug":"distinct","link":"#distinct","children":[]},{"level":3,"title":"Histogram","slug":"histogram","link":"#histogram","children":[]},{"level":3,"title":"Integral","slug":"integral","link":"#integral","children":[]},{"level":3,"title":"IntegralAvg","slug":"integralavg","link":"#integralavg","children":[]},{"level":3,"title":"Mad","slug":"mad","link":"#mad","children":[]},{"level":3,"title":"Median","slug":"median","link":"#median","children":[]},{"level":3,"title":"MinMax","slug":"minmax","link":"#minmax","children":[]},{"level":3,"title":"Mode","slug":"mode","link":"#mode","children":[]},{"level":3,"title":"MvAvg","slug":"mvavg","link":"#mvavg","children":[]},{"level":3,"title":"PACF","slug":"pacf","link":"#pacf","children":[]},{"level":3,"title":"Percentile","slug":"percentile","link":"#percentile","children":[]},{"level":3,"title":"Period","slug":"period","link":"#period","children":[]},{"level":3,"title":"QLB","slug":"qlb","link":"#qlb","children":[]},{"level":3,"title":"Resample","slug":"resample","link":"#resample","children":[]},{"level":3,"title":"Sample","slug":"sample","link":"#sample","children":[]},{"level":3,"title":"Segment","slug":"segment","link":"#segment","children":[]},{"level":3,"title":"Skew","slug":"skew","link":"#skew","children":[]},{"level":3,"title":"Spline","slug":"spline","link":"#spline","children":[]},{"level":3,"title":"Spread","slug":"spread","link":"#spread","children":[]},{"level":3,"title":"Stddev","slug":"stddev","link":"#stddev","children":[]},{"level":3,"title":"ZScore","slug":"zscore","link":"#zscore","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","email":"critas@outlook.com","commits":1}]},"readingTime":{"minutes":36.21,"words":10864},"filePathRelative":"zh/UserGuide/V0.13.x/UDF-Library/Data-Profiling.md","localizedDate":"2023年7月10日","autoDesc":true}');export{r as comp,d as data};
