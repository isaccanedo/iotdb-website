import{_ as i,c as o,b as l,d as a,e as n,a as t,w as p,r as c,o as r}from"./app-BHE9oQwv.js";const d={};function u(k,s){const e=c("RouteLink");return r(),o("div",null,[s[54]||(s[54]=l(`<h1 id="sql手册" tabindex="-1"><a class="header-anchor" href="#sql手册"><span>SQL手册</span></a></h1><h2 id="元数据操作" tabindex="-1"><a class="header-anchor" href="#元数据操作"><span>元数据操作</span></a></h2><h3 id="_1、数据库管理" tabindex="-1"><a class="header-anchor" href="#_1、数据库管理"><span>1、数据库管理</span></a></h3><h4 id="创建数据库" tabindex="-1"><a class="header-anchor" href="#创建数据库"><span>创建数据库</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> root<span class="token punctuation">.</span>ln</span>
<span class="line"></span>
<span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01</span>
<span class="line"><span class="token operator">&gt;</span> Msg: <span class="token number">300</span>: root<span class="token punctuation">.</span>ln has already been created <span class="token keyword">as</span> <span class="token keyword">database</span><span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看数据库" tabindex="-1"><a class="header-anchor" href="#查看数据库"><span>查看数据库</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">show</span> <span class="token keyword">databases</span></span>
<span class="line"><span class="token keyword">show</span> <span class="token keyword">databases</span> root<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line"><span class="token keyword">show</span> <span class="token keyword">databases</span> root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除数据库" tabindex="-1"><a class="header-anchor" href="#删除数据库"><span>删除数据库</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">DATABASE</span> root<span class="token punctuation">.</span>ln</span>
<span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">DATABASE</span> root<span class="token punctuation">.</span>sgcc</span>
<span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">DATABASE</span> root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="统计数据库数量" tabindex="-1"><a class="header-anchor" href="#统计数据库数量"><span>统计数据库数量</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">count <span class="token keyword">databases</span></span>
<span class="line">count <span class="token keyword">databases</span> root<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line">count <span class="token keyword">databases</span> root<span class="token punctuation">.</span>sgcc<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line">count <span class="token keyword">databases</span> root<span class="token punctuation">.</span>sgcc</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、时间序列管理" tabindex="-1"><a class="header-anchor" href="#_2、时间序列管理"><span>2、时间序列管理</span></a></h3><h4 id="创建时间序列" tabindex="-1"><a class="header-anchor" href="#创建时间序列"><span>创建时间序列</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span>temperature <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">FLOAT</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>RLE</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span>wt02<span class="token punctuation">.</span>hardware <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">TEXT</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span>wt02<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>sgcc<span class="token punctuation">.</span>wf03<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>sgcc<span class="token punctuation">.</span>wf03<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span>temperature <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">FLOAT</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span>RLE</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>简化版</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">BOOLEAN</span> encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span>temperature <span class="token keyword">FLOAT</span> encoding<span class="token operator">=</span>RLE</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span>wt02<span class="token punctuation">.</span>hardware <span class="token keyword">TEXT</span> encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span>wt02<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">BOOLEAN</span> encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>sgcc<span class="token punctuation">.</span>wf03<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">BOOLEAN</span> encoding<span class="token operator">=</span>PLAIN</span>
<span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>sgcc<span class="token punctuation">.</span>wf03<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span>temperature <span class="token keyword">FLOAT</span> encoding<span class="token operator">=</span>RLE</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>错误提示</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span>wt02<span class="token punctuation">.</span><span class="token keyword">status</span> <span class="token keyword">WITH</span> DATATYPE<span class="token operator">=</span><span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span> ENCODING<span class="token operator">=</span>TS_2DIFF</span>
<span class="line"><span class="token operator">&gt;</span> error: encoding TS_2DIFF does <span class="token operator">not</span> support <span class="token keyword">BOOLEAN</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="创建对齐时间序列" tabindex="-1"><a class="header-anchor" href="#创建对齐时间序列"><span>创建对齐时间序列</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> ALIGNED TIMESERIES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>GPS<span class="token punctuation">(</span>latitude <span class="token keyword">FLOAT</span> encoding<span class="token operator">=</span>PLAIN compressor<span class="token operator">=</span>SNAPPY<span class="token punctuation">,</span> longitude <span class="token keyword">FLOAT</span> encoding<span class="token operator">=</span>PLAIN compressor<span class="token operator">=</span>SNAPPY<span class="token punctuation">)</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="删除时间序列" tabindex="-1"><a class="header-anchor" href="#删除时间序列"><span>删除时间序列</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">delete</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span><span class="token keyword">status</span></span>
<span class="line"><span class="token keyword">delete</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span>temperature<span class="token punctuation">,</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span>wt02<span class="token punctuation">.</span>hardware</span>
<span class="line"><span class="token keyword">delete</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line"><span class="token keyword">drop</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf02<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看时间序列" tabindex="-1"><a class="header-anchor" href="#查看时间序列"><span>查看时间序列</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SHOW</span> TIMESERIES</span>
<span class="line"><span class="token keyword">SHOW</span> TIMESERIES <span class="token operator">&lt;</span>Path<span class="token operator">&gt;</span></span>
<span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">limit</span> <span class="token number">10</span> <span class="token keyword">offset</span> <span class="token number">10</span></span>
<span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> timeseries <span class="token keyword">contains</span> <span class="token string">&#39;wf01.wt&#39;</span></span>
<span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> dataType<span class="token operator">=</span><span class="token keyword">FLOAT</span></span>
<span class="line"><span class="token keyword">SHOW</span> LATEST TIMESERIES</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="统计时间序列数量" tabindex="-1"><a class="header-anchor" href="#统计时间序列数量"><span>统计时间序列数量</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">.</span><span class="token keyword">status</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">.</span><span class="token keyword">status</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">WHERE</span> TIMESERIES <span class="token keyword">contains</span> <span class="token string">&#39;sgcc&#39;</span> </span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">WHERE</span> DATATYPE <span class="token operator">=</span> INT64</span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">WHERE</span> TAGS<span class="token punctuation">(</span>unit<span class="token punctuation">)</span> <span class="token keyword">contains</span> <span class="token string">&#39;c&#39;</span> </span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">WHERE</span> TAGS<span class="token punctuation">(</span>unit<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;c&#39;</span> </span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">WHERE</span> TIMESERIES <span class="token keyword">contains</span> <span class="token string">&#39;sgcc&#39;</span> <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token keyword">level</span> <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">1</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line">COUNT TIMESERIES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="标签点管理" tabindex="-1"><a class="header-anchor" href="#标签点管理"><span>标签点管理</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">create</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1<span class="token punctuation">(</span>temprature<span class="token punctuation">)</span> <span class="token keyword">with</span> datatype<span class="token operator">=</span><span class="token keyword">FLOAT</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span>RLE<span class="token punctuation">,</span> compression<span class="token operator">=</span>SNAPPY tags<span class="token punctuation">(</span>tag1<span class="token operator">=</span>v1<span class="token punctuation">,</span> tag2<span class="token operator">=</span>v2<span class="token punctuation">)</span> attributes<span class="token punctuation">(</span>attr1<span class="token operator">=</span>v1<span class="token punctuation">,</span> attr2<span class="token operator">=</span>v2<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>重命名标签或属性</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1 <span class="token keyword">RENAME</span> tag1 <span class="token keyword">TO</span> newTag1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>重新设置标签或属性的值</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1 <span class="token keyword">SET</span> newTag1<span class="token operator">=</span>newV1<span class="token punctuation">,</span> attr1<span class="token operator">=</span>newV1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>删除已经存在的标签或属性</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1 <span class="token keyword">DROP</span> tag1<span class="token punctuation">,</span> tag2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>添加新的标签</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1 <span class="token keyword">ADD</span> TAGS tag3<span class="token operator">=</span>v3<span class="token punctuation">,</span> tag4<span class="token operator">=</span>v4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>添加新的属性</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1 <span class="token keyword">ADD</span> ATTRIBUTES attr3<span class="token operator">=</span>v3<span class="token punctuation">,</span> attr4<span class="token operator">=</span>v4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>更新插入别名，标签和属性</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> timeseries root<span class="token punctuation">.</span>turbine<span class="token punctuation">.</span>d1<span class="token punctuation">.</span>s1 UPSERT ALIAS<span class="token operator">=</span>newAlias TAGS<span class="token punctuation">(</span>tag2<span class="token operator">=</span>newV2<span class="token punctuation">,</span> tag3<span class="token operator">=</span>v3<span class="token punctuation">)</span> ATTRIBUTES<span class="token punctuation">(</span>attr3<span class="token operator">=</span>v3<span class="token punctuation">,</span> attr4<span class="token operator">=</span>v4<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>使用标签作为过滤条件查询时间序列</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SHOW</span> TIMESERIES <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token identifier"><span class="token punctuation">\`</span>PathPattern<span class="token punctuation">\`</span></span><span class="token operator">&gt;</span><span class="token punctuation">)</span>? timeseriesWhereClause</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>返回给定路径下的所有满足条件的时间序列信息：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> TAGS<span class="token punctuation">(</span>unit<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">&#39;c&#39;</span></span>
<span class="line"><span class="token keyword">show</span> timeseries root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> TAGS<span class="token punctuation">(</span>description<span class="token punctuation">)</span> <span class="token keyword">contains</span> <span class="token string">&#39;test1&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>使用标签作为过滤条件统计时间序列数量</li></ul><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">COUNT TIMESERIES <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token identifier"><span class="token punctuation">\`</span>PathPattern<span class="token punctuation">\`</span></span><span class="token operator">&gt;</span><span class="token punctuation">)</span>? timeseriesWhereClause</span>
<span class="line">COUNT TIMESERIES <span class="token punctuation">(</span><span class="token operator">&lt;</span><span class="token identifier"><span class="token punctuation">\`</span>PathPattern<span class="token punctuation">\`</span></span><span class="token operator">&gt;</span><span class="token punctuation">)</span>? timeseriesWhereClause <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token operator">&lt;</span><span class="token keyword">INTEGER</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>返回给定路径下的所有满足条件的时间序列的数量：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">count timeseries</span>
<span class="line">count timeseries root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> TAGS<span class="token punctuation">(</span>unit<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">&#39;c&#39;</span></span>
<span class="line">count timeseries root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> TAGS<span class="token punctuation">(</span>unit<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">&#39;c&#39;</span> <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token keyword">level</span> <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建对齐时间序列：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">create</span> aligned timeseries root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1<span class="token punctuation">(</span>s1 INT32 tags<span class="token punctuation">(</span>tag1<span class="token operator">=</span>v1<span class="token punctuation">,</span> tag2<span class="token operator">=</span>v2<span class="token punctuation">)</span> attributes<span class="token punctuation">(</span>attr1<span class="token operator">=</span>v1<span class="token punctuation">,</span> attr2<span class="token operator">=</span>v2<span class="token punctuation">)</span><span class="token punctuation">,</span> s2 <span class="token keyword">DOUBLE</span> tags<span class="token punctuation">(</span>tag3<span class="token operator">=</span>v3<span class="token punctuation">,</span> tag4<span class="token operator">=</span>v4<span class="token punctuation">)</span> attributes<span class="token punctuation">(</span>attr3<span class="token operator">=</span>v3<span class="token punctuation">,</span> attr4<span class="token operator">=</span>v4<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>支持查询：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">show</span> timeseries <span class="token keyword">where</span> TAGS<span class="token punctuation">(</span>tag1<span class="token punctuation">)</span><span class="token operator">=</span><span class="token string">&#39;v1&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3、时间序列路径管理" tabindex="-1"><a class="header-anchor" href="#_3、时间序列路径管理"><span>3、时间序列路径管理</span></a></h3><h4 id="查看路径的所有子路径" tabindex="-1"><a class="header-anchor" href="#查看路径的所有子路径"><span>查看路径的所有子路径</span></a></h4><p>SHOW CHILD PATHS pathPattern</p><ul><li>查询 root.ln 的下一层：show child paths root.ln</li><li>查询形如 root.xx.xx.xx 的路径：show child paths root.<em>.</em></li></ul><h4 id="查看路径的所有子节点" tabindex="-1"><a class="header-anchor" href="#查看路径的所有子节点"><span>查看路径的所有子节点</span></a></h4><p>SHOW CHILD NODES pathPattern</p><ul><li>查询 root 的下一层：show child nodes root</li><li>查询 root.ln 的下一层 ：show child nodes root.ln</li></ul><h4 id="查看设备" tabindex="-1"><a class="header-anchor" href="#查看设备"><span>查看设备</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"></span>
<span class="line">IoTDB<span class="token operator">&gt;</span> <span class="token keyword">show</span> devices</span>
<span class="line"></span>
<span class="line">IoTDB<span class="token operator">&gt;</span> <span class="token keyword">show</span> devices root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="查看设备及其-database-信息" tabindex="-1"><a class="header-anchor" href="#查看设备及其-database-信息"><span>查看设备及其 database 信息</span></a></h5><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"></span>
<span class="line">IoTDB<span class="token operator">&gt;</span> <span class="token keyword">show</span> devices <span class="token keyword">with</span> <span class="token keyword">database</span></span>
<span class="line"></span>
<span class="line">IoTDB<span class="token operator">&gt;</span> <span class="token keyword">show</span> devices root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">with</span> <span class="token keyword">database</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="统计节点数" tabindex="-1"><a class="header-anchor" href="#统计节点数"><span>统计节点数</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"></span>
<span class="line">IoTDB <span class="token operator">&gt;</span> COUNT NODES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line"></span>
<span class="line">IoTDB <span class="token operator">&gt;</span> COUNT NODES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">2</span></span>
<span class="line"></span>
<span class="line">IoTDB <span class="token operator">&gt;</span> COUNT NODES root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">3</span></span>
<span class="line"></span>
<span class="line">IoTDB <span class="token operator">&gt;</span> COUNT NODES root<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span><span class="token punctuation">.</span>temperature <span class="token keyword">LEVEL</span><span class="token operator">=</span><span class="token number">3</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="统计设备数量" tabindex="-1"><a class="header-anchor" href="#统计设备数量"><span>统计设备数量</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line">IoTDB<span class="token operator">&gt;</span> <span class="token keyword">show</span> devices</span>
<span class="line"></span>
<span class="line">IoTDB<span class="token operator">&gt;</span> count devices</span>
<span class="line"></span>
<span class="line">IoTDB<span class="token operator">&gt;</span> count devices root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、设备模板管理" tabindex="-1"><a class="header-anchor" href="#_4、设备模板管理"><span>4、设备模板管理</span></a></h3><figure><img src="https://alioss.timecho.com/docs/img/模板.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>Create template(s1 int, s2 float) on <a href="http://root.sg" target="_blank" rel="noopener noreferrer">root.sg</a></p><p>Create device root.sg.d1</p><figure><img src="https://alioss.timecho.com/docs/img/模板流程.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><h4 id="创建元数据模板" tabindex="-1"><a class="header-anchor" href="#创建元数据模板"><span>创建元数据模板</span></a></h4><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">CREATE SCHEMA TEMPLATE &lt;templateName&gt; ALIGNED? &#39;(&#39; &lt;measurementId&gt; &lt;attributeClauses&gt; [&#39;,&#39; &lt;measurementId&gt; &lt;attributeClauses&gt;]+ &#39;)&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>创建包含两个非对齐序列的元数据模板</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">IoTDB&gt; create schema template t1 (temperature FLOAT encoding=RLE, status BOOLEAN encoding=PLAIN compression=SNAPPY)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建包含一组对齐序列的元数据模板</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; create schema template t2 aligned (lat FLOAT encoding=Gorilla, lon FLOAT encoding=Gorilla)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="挂载元数据模板" tabindex="-1"><a class="header-anchor" href="#挂载元数据模板"><span>挂载元数据模板</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; set SCHEMA TEMPLATE t1 to root.sg1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="激活元数据模板" tabindex="-1"><a class="header-anchor" href="#激活元数据模板"><span>激活元数据模板</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; create timeseries using SCHEMA TEMPLATE on root.sg1.d1</span>
<span class="line"></span>
<span class="line">IoTDB&gt; set SCHEMA TEMPLATE t1 to root.sg1.d1</span>
<span class="line"></span>
<span class="line">IoTDB&gt; set SCHEMA TEMPLATE t2 to root.sg1.d2</span>
<span class="line"></span>
<span class="line">IoTDB&gt; create timeseries using schema template on root.sg1.d1</span>
<span class="line"></span>
<span class="line">IoTDB&gt; create timeseries using schema template on root.sg1.d2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查看元数据模板" tabindex="-1"><a class="header-anchor" href="#查看元数据模板"><span>查看元数据模板</span></a></h4><p>IoTDB&gt; show schema templates</p><ul><li>查看某个元数据模板下的物理量</li></ul><p>IoTDB&gt; show nodes in schema template t1</p><ul><li>查看挂载了某个元数据模板的路径</li></ul><p>IoTDB&gt; show paths set schema template t1</p><ul><li>查看使用了某个元数据模板的路径（即模板在该路径上已激活，序列已创建）</li></ul><p>IoTDB&gt; show paths using schema template t1</p><p>IoTDB&gt; show devices using schema template t1</p><h4 id="解除元数据模板" tabindex="-1"><a class="header-anchor" href="#解除元数据模板"><span>解除元数据模板</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; delete timeseries of schema template t1 from root.sg1.d1</span>
<span class="line"></span>
<span class="line">IoTDB&gt; deactivate schema template t1 from root.sg1.d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量处理</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; delete timeseries of schema template t1 from root.sg1.*, root.sg2.*</span>
<span class="line"></span>
<span class="line">IoTDB&gt; deactivate schema template t1 from root.sg1.*, root.sg2.*</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="卸载元数据模板" tabindex="-1"><a class="header-anchor" href="#卸载元数据模板"><span>卸载元数据模板</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; unset schema template t1 from root.sg1.d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="删除元数据模板" tabindex="-1"><a class="header-anchor" href="#删除元数据模板"><span>删除元数据模板</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; drop schema template t1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5、数据存活时间管理" tabindex="-1"><a class="header-anchor" href="#_5、数据存活时间管理"><span>5、数据存活时间管理</span></a></h3><h4 id="设置-ttl" tabindex="-1"><a class="header-anchor" href="#设置-ttl"><span>设置 TTL</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; set ttl to root.ln 3600000</span>
<span class="line"></span>
<span class="line">IoTDB&gt; set ttl to root.sgcc.** 3600000</span>
<span class="line"></span>
<span class="line">IoTDB&gt; set ttl to root.** 3600000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="取消-ttl" tabindex="-1"><a class="header-anchor" href="#取消-ttl"><span>取消 TTL</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; unset ttl to root.ln</span>
<span class="line"></span>
<span class="line">IoTDB&gt; unset ttl to root.sgcc.**</span>
<span class="line"></span>
<span class="line">IoTDB&gt; unset ttl to root.**</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="显示-ttl" tabindex="-1"><a class="header-anchor" href="#显示-ttl"><span>显示 TTL</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; SHOW ALL TTL</span>
<span class="line"></span>
<span class="line">IoTDB&gt; SHOW TTL ON StorageGroupNames</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="写入数据" tabindex="-1"><a class="header-anchor" href="#写入数据"><span>写入数据</span></a></h2><h3 id="_1、写入单列数据" tabindex="-1"><a class="header-anchor" href="#_1、写入单列数据"><span>1、写入单列数据</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB &gt; insert into root.ln.wf02.wt02(timestamp,status) values(1,true)</span>
<span class="line"></span>
<span class="line">IoTDB &gt; insert into root.ln.wf02.wt02(timestamp,hardware) values(1, &#39;v1&#39;),(2, &#39;v1&#39;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、写入多列数据" tabindex="-1"><a class="header-anchor" href="#_2、写入多列数据"><span>2、写入多列数据</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB &gt; insert into root.ln.wf02.wt02(timestamp, status, hardware) values (2, false, &#39;v2&#39;)</span>
<span class="line"></span>
<span class="line">IoTDB &gt; insert into root.ln.wf02.wt02(timestamp, status, hardware) VALUES (3, false, &#39;v3&#39;),(4, true, &#39;v4&#39;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、使用服务器时间戳" tabindex="-1"><a class="header-anchor" href="#_3、使用服务器时间戳"><span>3、使用服务器时间戳</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB &gt; insert into root.ln.wf02.wt02(status, hardware) values (false, &#39;v2&#39;)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4、写入对齐时间序列数据" tabindex="-1"><a class="header-anchor" href="#_4、写入对齐时间序列数据"><span>4、写入对齐时间序列数据</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB &gt; create aligned timeseries root.sg1.d1(s1 INT32, s2 DOUBLE)</span>
<span class="line"></span>
<span class="line">IoTDB &gt; insert into root.sg1.d1(timestamp, s1, s2) aligned values(1, 1, 1)</span>
<span class="line"></span>
<span class="line">IoTDB &gt; insert into root.sg1.d1(timestamp, s1, s2) aligned values(2, 2, 2), (3, 3, 3)</span>
<span class="line"></span>
<span class="line">IoTDB &gt; select * from root.sg1.d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、加载-tsfile-文件数据" tabindex="-1"><a class="header-anchor" href="#_5、加载-tsfile-文件数据"><span>5、加载 TsFile 文件数据</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">load &#39;&lt;path/dir&gt;&#39; [sglevel=int][onSuccess=delete/none]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="通过指定文件路径-绝对路径-加载单-tsfile-文件" tabindex="-1"><a class="header-anchor" href="#通过指定文件路径-绝对路径-加载单-tsfile-文件"><span>通过指定文件路径(绝对路径)加载单 tsfile 文件</span></a></h4><ul><li><code>load &#39;/Users/Desktop/data/1575028885956-101-0.tsfile&#39;</code></li><li><code>load &#39;/Users/Desktop/data/1575028885956-101-0.tsfile&#39; sglevel=1</code></li><li><code>load &#39;/Users/Desktop/data/1575028885956-101-0.tsfile&#39; onSuccess=delete</code></li><li><code>load &#39;/Users/Desktop/data/1575028885956-101-0.tsfile&#39; sglevel=1 onSuccess=delete</code></li></ul><h4 id="通过指定文件夹路径-绝对路径-批量加载文件" tabindex="-1"><a class="header-anchor" href="#通过指定文件夹路径-绝对路径-批量加载文件"><span>通过指定文件夹路径(绝对路径)批量加载文件</span></a></h4><ul><li><code>load &#39;/Users/Desktop/data&#39;</code></li><li><code>load &#39;/Users/Desktop/data&#39; sglevel=1</code></li><li><code>load &#39;/Users/Desktop/data&#39; onSuccess=delete</code></li><li><code>load &#39;/Users/Desktop/data&#39; sglevel=1 onSuccess=delete</code></li></ul><h2 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h2><h3 id="_1、删除单列数据" tabindex="-1"><a class="header-anchor" href="#_1、删除单列数据"><span>1、删除单列数据</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">delete from root.ln.wf02.wt02.status where time&lt;=2017-11-01T16:26:00;</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time&gt;=2017-01-01T00:00:00 and time&lt;=2017-11-01T16:26:00;</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time &lt; 10</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time &lt;= 10</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time &lt; 20 and time &gt; 10</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time &lt;= 20 and time &gt;= 10</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time &gt; 20</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time &gt;= 20</span>
<span class="line"></span>
<span class="line">delete from root.ln.wf02.wt02.status where time = 20</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>出错：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">delete from root.ln.wf02.wt02.status where time &gt; 4 or time &lt; 0</span>
<span class="line"></span>
<span class="line">Msg: 303: Check metadata error: For delete statement, where clause can only contain atomic</span>
<span class="line"></span>
<span class="line">expressions like : time &gt; XXX, time &lt;= XXX, or two atomic expressions connected by &#39;AND&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除时间序列中的所有数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">delete from root.ln.wf02.wt02.status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2、删除多列数据" tabindex="-1"><a class="header-anchor" href="#_2、删除多列数据"><span>2、删除多列数据</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">delete from root.ln.wf02.wt02.* where time &lt;= 2017-11-01T16:26:00;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>声明式的编程方式：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; delete from root.ln.wf03.wt02.status where time &lt; now()</span>
<span class="line"></span>
<span class="line">Msg: The statement is executed successfully.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数据查询" tabindex="-1"><a class="header-anchor" href="#数据查询"><span>数据查询</span></a></h2><h3 id="_1、基础查询" tabindex="-1"><a class="header-anchor" href="#_1、基础查询"><span>1、基础查询</span></a></h3><h4 id="时间过滤查询" tabindex="-1"><a class="header-anchor" href="#时间过滤查询"><span>时间过滤查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature from root.ln.wf01.wt01 where time &lt; 2017-11-01T00:08:00.000</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="根据一个时间区间选择多列数据" tabindex="-1"><a class="header-anchor" href="#根据一个时间区间选择多列数据"><span>根据一个时间区间选择多列数据</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select status, temperature from root.ln.wf01.wt01 where time &gt; 2017-11-01T00:05:00.000 and time &lt; 2017-11-01T00:12:00.000;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="按照多个时间区间选择同一设备的多列数据" tabindex="-1"><a class="header-anchor" href="#按照多个时间区间选择同一设备的多列数据"><span>按照多个时间区间选择同一设备的多列数据</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select status, temperature from root.ln.wf01.wt01 where (time &gt; 2017-11-01T00:05:00.000 and time &lt; 2017-11-01T00:12:00.000) or (time &gt;= 2017-11-01T16:35:00.000 and time &lt;= 2017-11-01T16:37:00.000);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="按照多个时间区间选择不同设备的多列数据" tabindex="-1"><a class="header-anchor" href="#按照多个时间区间选择不同设备的多列数据"><span>按照多个时间区间选择不同设备的多列数据</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select wf01.wt01.status, wf02.wt02.hardware from root.ln where (time &gt; 2017-11-01T00:05:00.000 and time &lt; 2017-11-01T00:12:00.000) or (time &gt;= 2017-11-01T16:35:00.000 and time &lt;= 2017-11-01T16:37:00.000);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="根据时间降序返回结果集" tabindex="-1"><a class="header-anchor" href="#根据时间降序返回结果集"><span>根据时间降序返回结果集</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.** where time &gt; 1 order by time desc limit 10;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2、选择表达式" tabindex="-1"><a class="header-anchor" href="#_2、选择表达式"><span>2、选择表达式</span></a></h3><h4 id="使用别名" tabindex="-1"><a class="header-anchor" href="#使用别名"><span>使用别名</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select s1 as temperature, s2 as speed from root.ln.wf01.wt01;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h4><h4 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h4><p>不支持：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select s1, count(s1) from root.sg.d1;</span>
<span class="line"></span>
<span class="line">select sin(s1), count(s1) from root.sg.d1;</span>
<span class="line"></span>
<span class="line">select s1, count(s1) from root.sg.d1 group by ([10,100),10ms);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="时间序列查询嵌套表达式" tabindex="-1"><a class="header-anchor" href="#时间序列查询嵌套表达式"><span>时间序列查询嵌套表达式</span></a></h5><p>示例 1：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select a,</span>
<span class="line"></span>
<span class="line">​       b,</span>
<span class="line"></span>
<span class="line">​       ((a + 1) * 2 - 1) % 2 + 1.5,</span>
<span class="line"></span>
<span class="line">​       sin(a + sin(a + sin(b))),</span>
<span class="line"></span>
<span class="line">​       -(a + b) * (sin(a + b) * sin(a + b) + cos(a + b) * cos(a + b)) + 1</span>
<span class="line"></span>
<span class="line">from root.sg1;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 2：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select (a + b) * 2 + sin(a) from root.sg</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例 3：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select (a + *) / 2  from root.sg1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>示例 4：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select (a + b) * 3 from root.sg, root.ln</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="聚合查询嵌套表达式" tabindex="-1"><a class="header-anchor" href="#聚合查询嵌套表达式"><span>聚合查询嵌套表达式</span></a></h5><p>示例 1：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select avg(temperature),</span>
<span class="line"></span>
<span class="line">​       sin(avg(temperature)),</span>
<span class="line"></span>
<span class="line">​       avg(temperature) + 1,</span>
<span class="line"></span>
<span class="line">​       -sum(hardware),</span>
<span class="line"></span>
<span class="line">​       avg(temperature) + sum(hardware)</span>
<span class="line"></span>
<span class="line">from root.ln.wf01.wt01;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 2：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select avg(*), </span>
<span class="line"></span>
<span class="line">​           (avg(*) + 1) * 3 / 2 -1 </span>
<span class="line"></span>
<span class="line">from root.sg1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例 3：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select avg(temperature),</span>
<span class="line"></span>
<span class="line">​       sin(avg(temperature)),</span>
<span class="line"></span>
<span class="line">​       avg(temperature) + 1,</span>
<span class="line"></span>
<span class="line">​       -sum(hardware),</span>
<span class="line"></span>
<span class="line">​       avg(temperature) + sum(hardware) as custom_sum</span>
<span class="line"></span>
<span class="line">from root.ln.wf01.wt01</span>
<span class="line"></span>
<span class="line">GROUP BY([10, 90), 10ms);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="最新点查询" tabindex="-1"><a class="header-anchor" href="#最新点查询"><span>最新点查询</span></a></h4><p>SQL 语法：</p><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">select last &lt;Path&gt; [COMMA &lt;Path&gt;]* from &lt; PrefixPath &gt; [COMMA &lt; PrefixPath &gt;]* &lt;whereClause&gt; [ORDER BY TIMESERIES (DESC | ASC)?]</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询 root.ln.wf01.wt01.status 的最新数据点</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select last status from root.ln.wf01.wt01</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询 root.ln.wf01.wt01 下 status，temperature 时间戳大于等于 2017-11-07T23:50:00 的最新数据点</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select last status, temperature from root.ln.wf01.wt01 where time &gt;= 2017-11-07T23:50:00</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询 root.ln.wf01.wt01 下所有序列的最新数据点，并按照序列名降序排列</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select last * from root.ln.wf01.wt01 order by timeseries desc;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3、查询过滤条件" tabindex="-1"><a class="header-anchor" href="#_3、查询过滤条件"><span>3、查询过滤条件</span></a></h3><h4 id="时间过滤条件" tabindex="-1"><a class="header-anchor" href="#时间过滤条件"><span>时间过滤条件</span></a></h4><p>选择时间戳大于 2022-01-01T00:05:00.000 的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select s1 from root.sg1.d1 where time &gt; 2022-01-01T00:05:00.000;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择时间戳等于 2022-01-01T00:05:00.000 的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select s1 from root.sg1.d1 where time = 2022-01-01T00:05:00.000;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择时间区间 [2017-11-01T00:05:00.000, 2017-11-01T00:12:00.000) 内的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select s1 from root.sg1.d1 where time &gt;= 2022-01-01T00:05:00.000 and time &lt; 2017-11-01T00:12:00.000;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="值过滤条件" tabindex="-1"><a class="header-anchor" href="#值过滤条件"><span>值过滤条件</span></a></h4><p>选择值大于 36.5 的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature from root.sg1.d1 where temperature &gt; 36.5;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择值等于 true 的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select status from root.sg1.d1 where status = true;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择区间 [36.5,40] 内或之外的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature from root.sg1.d1 where temperature between 36.5 and 40;</span>
<span class="line"></span>
<span class="line">select temperature from root.sg1.d1 where temperature not between 36.5 and 40;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>选择值在特定范围内的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select code from root.sg1.d1 where code in (&#39;200&#39;, &#39;300&#39;, &#39;400&#39;, &#39;500&#39;);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择值在特定范围外的数据：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select code from root.sg1.d1 where code not in (&#39;200&#39;, &#39;300&#39;, &#39;400&#39;, &#39;500&#39;);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择值为空的数据:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select code from root.sg1.d1 where temperature is null;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>选择值为非空的数据:</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select code from root.sg1.d1 where temperature is not null;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="模糊查询" tabindex="-1"><a class="header-anchor" href="#模糊查询"><span>模糊查询</span></a></h4><p>查询 <code>root.sg.d1</code> 下 <code>value</code> 含有<code>&#39;cc&#39;</code>的数据</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select * from root.sg.d1 where value like &#39;%cc%&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询 <code>root.sg.d1</code> 下 <code>value</code> 中间为 <code>&#39;b&#39;</code>、前后为任意单个字符的数据</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select * from root.sg.device where value like &#39;_b_&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询 root.sg.d1 下 value 值为26个英文字符组成的字符串</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select * from root.sg.d1 where value regexp &#39;^[A-Za-z]+$&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询 root.sg.d1 下 value 值为26个小写英文字符组成的字符串且时间大于100的</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select * from root.sg.d1 where value regexp &#39;^[a-z]+$&#39; and time &gt; 100</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4、分段分组聚合" tabindex="-1"><a class="header-anchor" href="#_4、分段分组聚合"><span>4、分段分组聚合</span></a></h3><h4 id="未指定滑动步长的时间区间分组聚合查询" tabindex="-1"><a class="header-anchor" href="#未指定滑动步长的时间区间分组聚合查询"><span>未指定滑动步长的时间区间分组聚合查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status), max_value(temperature) from root.ln.wf01.wt01 group by ([2017-11-01T00:00:00, 2017-11-07T23:00:00),1d);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="指定滑动步长的时间区间分组聚合查询" tabindex="-1"><a class="header-anchor" href="#指定滑动步长的时间区间分组聚合查询"><span>指定滑动步长的时间区间分组聚合查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status), max_value(temperature) from root.ln.wf01.wt01 group by ([2017-11-01 00:00:00, 2017-11-07 23:00:00), 3h, 1d);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>滑动步长可以小于聚合窗口</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status), max_value(temperature) from root.ln.wf01.wt01 group by ([2017-11-01 00:00:00, 2017-11-01 10:00:00), 4h, 2h);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="按照自然月份的时间区间分组聚合查询" tabindex="-1"><a class="header-anchor" href="#按照自然月份的时间区间分组聚合查询"><span>按照自然月份的时间区间分组聚合查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.ln.wf01.wt01 where time &gt; 2017-11-01T01:00:00 group by([2017-11-01T00:00:00, 2019-11-07T23:00:00), 1mo, 2mo);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>每个时间间隔窗口内都有数据</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.ln.wf01.wt01 group by([2017-10-31T00:00:00, 2019-11-07T23:00:00), 1mo, 2mo);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="左开右闭区间" tabindex="-1"><a class="header-anchor" href="#左开右闭区间"><span>左开右闭区间</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.ln.wf01.wt01 group by ((2017-11-01T00:00:00, 2017-11-07T23:00:00],1d);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="与分组聚合混合使用" tabindex="-1"><a class="header-anchor" href="#与分组聚合混合使用"><span>与分组聚合混合使用</span></a></h4><p>统计降采样后的数据点个数</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.ln.wf01.wt01 group by ((2017-11-01T00:00:00, 2017-11-07T23:00:00],1d), level=1;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>加上滑动 Step 的降采样后的结果也可以汇总</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.ln.wf01.wt01 group by ([2017-11-01 00:00:00, 2017-11-07 23:00:00), 3h, 1d), level=1;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="路径层级分组聚合" tabindex="-1"><a class="header-anchor" href="#路径层级分组聚合"><span>路径层级分组聚合</span></a></h4><p>统计不同 database 下 status 序列的数据点个数</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.** group by level = 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>统计不同设备下 status 序列的数据点个数</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.** group by level = 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>统计不同 database 下的不同设备中 status 序列的数据点个数</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status) from root.** group by level = 1, 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询所有序列下温度传感器 temperature 的最大值</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select max_value(temperature) from root.** group by level = 0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询某一层级下所有传感器拥有的总数据点数</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(*) from root.ln.** group by level = 2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="标签分组聚合" tabindex="-1"><a class="header-anchor" href="#标签分组聚合"><span>标签分组聚合</span></a></h4><h5 id="单标签聚合查询" tabindex="-1"><a class="header-anchor" href="#单标签聚合查询"><span>单标签聚合查询</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT AVG(temperature) FROM root.factory1.** GROUP BY TAGS(city);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="多标签聚合查询" tabindex="-1"><a class="header-anchor" href="#多标签聚合查询"><span>多标签聚合查询</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT avg(temperature) FROM root.factory1.** GROUP BY TAGS(city, workshop);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="基于时间区间的标签聚合查询" tabindex="-1"><a class="header-anchor" href="#基于时间区间的标签聚合查询"><span>基于时间区间的标签聚合查询</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT AVG(temperature) FROM root.factory1.** GROUP BY ([1000, 10000), 5s), TAGS(city, workshop);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="差值分段聚合" tabindex="-1"><a class="header-anchor" href="#差值分段聚合"><span>差值分段聚合</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">group by variation(controlExpression[,delta][,ignoreNull=true/false])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="delta-0时的等值事件分段" tabindex="-1"><a class="header-anchor" href="#delta-0时的等值事件分段"><span>delta=0时的等值事件分段</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select __endTime, avg(s1), count(s2), sum(s3) from root.sg.d group by variation(s6)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>指定ignoreNull为false</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select __endTime, avg(s1), count(s2), sum(s3) from root.sg.d group by variation(s6, ignoreNull=false)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="delta-0时的差值事件分段" tabindex="-1"><a class="header-anchor" href="#delta-0时的差值事件分段"><span>delta!=0时的差值事件分段</span></a></h5><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select __endTime, avg(s1), count(s2), sum(s3) from root.sg.d group by variation(s6, 4)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="条件分段聚合" tabindex="-1"><a class="header-anchor" href="#条件分段聚合"><span>条件分段聚合</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">group by condition(predict,[keep&gt;/&gt;=/=/&lt;=/&lt;]threshold,[,ignoreNull=true/false])</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>查询至少连续两行以上的charging_status=1的数据</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select max_time(charging_status),count(vehicle_status),last_value(soc) from root.** group by condition(charging_status=1,KEEP&gt;=2,ignoreNull=true)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当设置<code>ignoreNull</code>为false时，遇到null值为将其视为一个不满足条件的行，得到结果原先的分组被含null的行拆分</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select max_time(charging_status),count(vehicle_status),last_value(soc) from root.** group by condition(charging_status=1,KEEP&gt;=2,ignoreNull=false)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="会话分段聚合" tabindex="-1"><a class="header-anchor" href="#会话分段聚合"><span>会话分段聚合</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">group by session(timeInterval)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按照不同的时间单位设定时间间隔</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select __endTime,count(*) from root.** group by session(1d)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>和<code>HAVING</code>、<code>ALIGN BY DEVICE</code>共同使用</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select __endTime,sum(hardware) from root.ln.wf02.wt01 group by session(50s) having sum(hardware)&gt;0 align by device</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="点数分段聚合" tabindex="-1"><a class="header-anchor" href="#点数分段聚合"><span>点数分段聚合</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">group by count(controlExpression, size[,ignoreNull=true/false])</span>
<span class="line"></span>
<span class="line">select count(charging_stauts), first_value(soc) from root.sg group by count(charging_status,5) </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当使用ignoreNull将null值也考虑进来</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(charging_stauts), first_value(soc) from root.sg group by count(charging_status,5,ignoreNull=false) </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5、聚合结果过滤" tabindex="-1"><a class="header-anchor" href="#_5、聚合结果过滤"><span>5、聚合结果过滤</span></a></h3><p>不正确的：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(s1) from root.** group by ([1,3),1ms) having sum(s1) &gt; s1</span>
<span class="line"></span>
<span class="line">select count(s1) from root.** group by ([1,3),1ms) having s1 &gt; 1</span>
<span class="line"></span>
<span class="line">select count(s1) from root.** group by ([1,3),1ms), level=1 having sum(d1.s1) &gt; 1</span>
<span class="line"></span>
<span class="line">select count(d1.s1) from root.** group by ([1,3),1ms), level=1 having sum(s1) &gt; 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>SQL 示例：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"> select count(s1) from root.** group by ([1,11),2ms), level=1 having count(s2) &gt; 2;</span>
<span class="line"></span>
<span class="line"> select count(s1), count(s2) from root.** group by ([1,11),2ms) having count(s2) &gt; 1 align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、结果集补空值" tabindex="-1"><a class="header-anchor" href="#_6、结果集补空值"><span>6、结果集补空值</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">FILL &#39;(&#39; PREVIOUS | LINEAR | constant &#39;)&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="previous-填充" tabindex="-1"><a class="header-anchor" href="#previous-填充"><span><code>PREVIOUS</code> 填充</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature, status from root.sgcc.wf03.wt01 where time &gt;= 2017-11-01T16:37:00.000 and time &lt;= 2017-11-01T16:40:00.000 fill(previous);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="linear-填充" tabindex="-1"><a class="header-anchor" href="#linear-填充"><span><code>LINEAR</code> 填充</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature, status from root.sgcc.wf03.wt01 where time &gt;= 2017-11-01T16:37:00.000 and time &lt;= 2017-11-01T16:40:00.000 fill(linear);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="常量填充" tabindex="-1"><a class="header-anchor" href="#常量填充"><span>常量填充</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature, status from root.sgcc.wf03.wt01 where time &gt;= 2017-11-01T16:37:00.000 and time &lt;= 2017-11-01T16:40:00.000 fill(2.0);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用 <code>BOOLEAN</code> 类型的常量填充</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select temperature, status from root.sgcc.wf03.wt01 where time &gt;= 2017-11-01T16:37:00.000 and time &lt;= 2017-11-01T16:40:00.000 fill(true);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_7、查询结果分页" tabindex="-1"><a class="header-anchor" href="#_7、查询结果分页"><span>7、查询结果分页</span></a></h3><h4 id="按行分页" tabindex="-1"><a class="header-anchor" href="#按行分页"><span>按行分页</span></a></h4><p>基本的 <code>LIMIT</code> 子句</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select status, temperature from root.ln.wf01.wt01 limit 10</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>带 <code>OFFSET</code> 的 <code>LIMIT</code> 子句</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select status, temperature from root.ln.wf01.wt01 limit 5 offset 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>LIMIT</code> 子句与 <code>WHERE</code> 子句结合</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select status,temperature from root.ln.wf01.wt01 where time &gt; 2017-11-01T00:05:00.000 and time&lt; 2017-11-01T00:12:00.000 limit 5 offset 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>LIMIT</code> 子句与 <code>GROUP BY</code> 子句组合</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(status), max_value(temperature) from root.ln.wf01.wt01 group by ([2017-11-01T00:00:00, 2017-11-07T23:00:00),1d) limit 4 offset 3</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="按列分页" tabindex="-1"><a class="header-anchor" href="#按列分页"><span>按列分页</span></a></h4><p>基本的 <code>SLIMIT</code> 子句</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.wf01.wt01 where time &gt; 2017-11-01T00:05:00.000 and time &lt; 2017-11-01T00:12:00.000 slimit 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>带 <code>SOFFSET</code> 的 <code>SLIMIT</code> 子句</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.wf01.wt01 where time &gt; 2017-11-01T00:05:00.000 and time &lt; 2017-11-01T00:12:00.000 slimit 1 soffset 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>SLIMIT</code> 子句与 <code>GROUP BY</code> 子句结合</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select max_value(*) from root.ln.wf01.wt01 group by ([2017-11-01T00:00:00, 2017-11-07T23:00:00),1d) slimit 1 soffset 1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>SLIMIT</code> 子句与 <code>LIMIT</code> 子句结合</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.wf01.wt01 limit 10 offset 100 slimit 2 soffset 0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_8、排序" tabindex="-1"><a class="header-anchor" href="#_8、排序"><span>8、排序</span></a></h3><p>时间对齐模式下的排序</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.** where time &lt;= 2017-11-01T00:01:00 order by time desc;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>设备对齐模式下的排序</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.** where time &lt;= 2017-11-01T00:01:00 order by device desc,time asc align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在时间戳相等时按照设备名排序</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.** where time &lt;= 2017-11-01T00:01:00 order by time asc,device desc align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>没有显式指定时</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.** where time &lt;= 2017-11-01T00:01:00 align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对聚合后的结果进行排序</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select count(*) from root.ln.** group by ((2017-11-01T00:00:00.000+08:00,2017-11-01T00:03:00.000+08:00],1m) order by device asc,time asc align by device</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_9、查询对齐模式" tabindex="-1"><a class="header-anchor" href="#_9、查询对齐模式"><span>9、查询对齐模式</span></a></h3><h4 id="按设备对齐" tabindex="-1"><a class="header-anchor" href="#按设备对齐"><span>按设备对齐</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * from root.ln.** where time &lt;= 2017-11-01T00:01:00 align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_10、查询写回-select-into" tabindex="-1"><a class="header-anchor" href="#_10、查询写回-select-into"><span>10、查询写回（SELECT INTO）</span></a></h3><h4 id="整体描述" tabindex="-1"><a class="header-anchor" href="#整体描述"><span>整体描述</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">selectIntoStatement</span>
<span class="line"></span>
<span class="line">​    : SELECT</span>
<span class="line"></span>
<span class="line">​        resultColumn [, resultColumn] ...</span>
<span class="line"></span>
<span class="line">​        INTO intoItem [, intoItem] ...</span>
<span class="line"></span>
<span class="line">​        FROM prefixPath [, prefixPath] ...</span>
<span class="line"></span>
<span class="line">​        [WHERE whereCondition]</span>
<span class="line"></span>
<span class="line">​        [GROUP BY groupByTimeClause, groupByLevelClause]</span>
<span class="line"></span>
<span class="line">​        [FILL {PREVIOUS | LINEAR | constant}]</span>
<span class="line"></span>
<span class="line">​        [LIMIT rowLimit OFFSET rowOffset]</span>
<span class="line"></span>
<span class="line">​        [ALIGN BY DEVICE]</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">intoItem</span>
<span class="line"></span>
<span class="line">​    : [ALIGNED] intoDevicePath &#39;(&#39; intoMeasurementName [&#39;,&#39; intoMeasurementName]* &#39;)&#39;</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按时间对齐，将 <code>root.sg</code> database 下四条序列的查询结果写入到 <code>root.sg_copy</code> database 下指定的四条序列中</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select s1, s2 into root.sg_copy.d1(t1), root.sg_copy.d2(t1, t2), root.sg_copy.d1(t2) from root.sg.d1, root.sg.d2;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按时间对齐，将聚合查询的结果存储到指定序列中</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select count(s1 + s2), last_value(s2) into root.agg.count(s1_add_s2), root.agg.last_value(s2) from root.sg.d1 group by ([0, 100), 10ms);</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按设备对齐</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select s1, s2 into root.sg_copy.d1(t1, t2), root.sg_copy.d2(t1, t2) from root.sg.d1, root.sg.d2 align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>按设备对齐，将表达式计算的结果存储到指定序列中</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">IoTDB&gt; select s1 + s2 into root.expr.add(d1s1_d1s2), root.expr.add(d2s1_d2s2) from root.sg.d1, root.sg.d2 align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="使用变量占位符" tabindex="-1"><a class="header-anchor" href="#使用变量占位符"><span>使用变量占位符</span></a></h4><h5 id="按时间对齐-默认" tabindex="-1"><a class="header-anchor" href="#按时间对齐-默认"><span>按时间对齐（默认）</span></a></h5><h6 id="_1-目标设备不使用变量占位符-目标物理量列表使用变量占位符" tabindex="-1"><a class="header-anchor" href="#_1-目标设备不使用变量占位符-目标物理量列表使用变量占位符"><span>（1）目标设备不使用变量占位符 &amp; 目标物理量列表使用变量占位符</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">select s1, s2</span>
<span class="line"></span>
<span class="line">into root.sg_copy.d1(::), root.sg_copy.d2(s1), root.sg_copy.d1(\${3}), root.sg_copy.d2(::)</span>
<span class="line"></span>
<span class="line">from root.sg.d1, root.sg.d2;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>该语句等价于：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">select s1, s2</span>
<span class="line"></span>
<span class="line">into root.sg_copy.d1(s1), root.sg_copy.d2(s1), root.sg_copy.d1(s2), root.sg_copy.d2(s2)</span>
<span class="line"></span>
<span class="line">from root.sg.d1, root.sg.d2;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-目标设备使用变量占位符-目标物理量列表不使用变量占位符" tabindex="-1"><a class="header-anchor" href="#_2-目标设备使用变量占位符-目标物理量列表不使用变量占位符"><span>（2）目标设备使用变量占位符 &amp; 目标物理量列表不使用变量占位符</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select d1.s1, d1.s2, d2.s3, d3.s4 </span>
<span class="line"></span>
<span class="line">into ::(s1_1, s2_2), root.sg.d2_2(s3_3), root.\${2}_copy.::(s4)</span>
<span class="line"></span>
<span class="line">from root.sg;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_3-目标设备使用变量占位符-目标物理量列表使用变量占位符" tabindex="-1"><a class="header-anchor" href="#_3-目标设备使用变量占位符-目标物理量列表使用变量占位符"><span>（3）目标设备使用变量占位符 &amp; 目标物理量列表使用变量占位符</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">select * into root.sg_bk.::(::) from root.sg.**;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="按设备对齐-使用-align-by-device" tabindex="-1"><a class="header-anchor" href="#按设备对齐-使用-align-by-device"><span>按设备对齐（使用 <code>ALIGN BY DEVICE</code>）</span></a></h5><h6 id="_1-目标设备不使用变量占位符-目标物理量列表使用变量占位符-1" tabindex="-1"><a class="header-anchor" href="#_1-目标设备不使用变量占位符-目标物理量列表使用变量占位符-1"><span>（1）目标设备不使用变量占位符 &amp; 目标物理量列表使用变量占位符</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">select s1, s2, s3, s4</span>
<span class="line"></span>
<span class="line">into root.backup_sg.d1(s1, s2, s3, s4), root.backup_sg.d2(::), root.sg.d3(backup_\${4})</span>
<span class="line"></span>
<span class="line">from root.sg.d1, root.sg.d2, root.sg.d3</span>
<span class="line"></span>
<span class="line">align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2-目标设备使用变量占位符-目标物理量列表不使用变量占位符-1" tabindex="-1"><a class="header-anchor" href="#_2-目标设备使用变量占位符-目标物理量列表不使用变量占位符-1"><span>（2）目标设备使用变量占位符 &amp; 目标物理量列表不使用变量占位符</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">select avg(s1), sum(s2) + sum(s3), count(s4)</span>
<span class="line"></span>
<span class="line">into root.agg_\${2}.::(avg_s1, sum_s2_add_s3, count_s4)</span>
<span class="line"></span>
<span class="line">from root.**</span>
<span class="line"></span>
<span class="line">align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_3-目标设备使用变量占位符-目标物理量列表使用变量占位符-1" tabindex="-1"><a class="header-anchor" href="#_3-目标设备使用变量占位符-目标物理量列表使用变量占位符-1"><span>（3）目标设备使用变量占位符 &amp; 目标物理量列表使用变量占位符</span></a></h6><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">select * into ::(backup_\${4}) from root.sg.** align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="指定目标序列为对齐序列" tabindex="-1"><a class="header-anchor" href="#指定目标序列为对齐序列"><span>指定目标序列为对齐序列</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line"></span>
<span class="line">select s1, s2 into root.sg_copy.d1(t1, t2), aligned root.sg_copy.d2(t1, t2) from root.sg.d1, root.sg.d2 align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="运算符-1" tabindex="-1"><a class="header-anchor" href="#运算符-1"><span>运算符</span></a></h2>`,347)),a("p",null,[s[1]||(s[1]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[0]||(s[0]=[n("Operator-and-Expression")])),_:1})]),s[55]||(s[55]=a("h3",{id:"算数运算符",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#算数运算符"},[a("span",null,"算数运算符")])],-1)),a("p",null,[s[3]||(s[3]=n("更多见文档 ")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[2]||(s[2]=[n("Arithmetic Operators and Functions")])),_:1})]),s[56]||(s[56]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> <span class="token operator">-</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token operator">+</span> s2<span class="token punctuation">,</span> s1 <span class="token operator">+</span> s2<span class="token punctuation">,</span> s1 <span class="token operator">-</span> s2<span class="token punctuation">,</span> s1 <span class="token operator">*</span> s2<span class="token punctuation">,</span> s1 <span class="token operator">/</span> s2<span class="token punctuation">,</span> s1 <span class="token operator">%</span> s2 <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="比较运算符" tabindex="-1"><a class="header-anchor" href="#比较运算符"><span>比较运算符</span></a></h3>`,2)),a("p",null,[s[5]||(s[5]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[4]||(s[4]=[n("Comparison Operators and Functions")])),_:1})]),s[57]||(s[57]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># Basic comparison operators</span></span>
<span class="line"><span class="token keyword">select</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> a <span class="token operator">&lt;=</span> b<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span> a <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">&gt;</span> b <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \`BETWEEN ... AND ...\` operator</span></span>
<span class="line"><span class="token keyword">select</span> temperature <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> temperature <span class="token operator">between</span> <span class="token number">36.5</span> <span class="token operator">and</span> <span class="token number">40</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> temperature <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> temperature <span class="token operator">not</span> <span class="token operator">between</span> <span class="token number">36.5</span> <span class="token operator">and</span> <span class="token number">40</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Fuzzy matching operator: Use \`Like\` for fuzzy matching</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">value</span> <span class="token operator">like</span> <span class="token string">&#39;%cc%&#39;</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg<span class="token punctuation">.</span>device <span class="token keyword">where</span> <span class="token keyword">value</span> <span class="token operator">like</span> <span class="token string">&#39;_b_&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Fuzzy matching operator: Use \`Regexp\` for fuzzy matching</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">value</span> <span class="token operator">regexp</span> <span class="token string">&#39;^[A-Za-z]+$&#39;</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">value</span> <span class="token operator">regexp</span> <span class="token string">&#39;^[a-z]+$&#39;</span> <span class="token operator">and</span> <span class="token keyword">time</span> <span class="token operator">&gt;</span> <span class="token number">100</span></span>
<span class="line"><span class="token keyword">select</span> b<span class="token punctuation">,</span> b <span class="token operator">like</span> <span class="token string">&#39;1%&#39;</span><span class="token punctuation">,</span> b <span class="token operator">regexp</span> <span class="token string">&#39;[0-2]&#39;</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \`IS NULL\` operator</span></span>
<span class="line"><span class="token keyword">select</span> code <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> temperature <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> code <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> temperature <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># \`IN\` operator</span></span>
<span class="line"><span class="token keyword">select</span> code <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> code <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">&#39;200&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;300&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;400&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;500&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> code <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> code <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token string">&#39;200&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;300&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;400&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;500&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> a<span class="token punctuation">,</span> a <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="逻辑运算符" tabindex="-1"><a class="header-anchor" href="#逻辑运算符"><span>逻辑运算符</span></a></h3>`,2)),a("p",null,[s[7]||(s[7]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[6]||(s[6]=[n("Logical Operators")])),_:1})]),s[58]||(s[58]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> a <span class="token operator">&gt;</span> <span class="token number">10</span><span class="token punctuation">,</span> a <span class="token operator">&lt;=</span> b<span class="token punctuation">,</span> <span class="token operator">!</span><span class="token punctuation">(</span>a <span class="token operator">&lt;=</span> b<span class="token punctuation">)</span><span class="token punctuation">,</span> a <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> a <span class="token operator">&gt;</span> b <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="内置函数" tabindex="-1"><a class="header-anchor" href="#内置函数"><span>内置函数</span></a></h2>`,2)),a("p",null,[s[9]||(s[9]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[8]||(s[8]=[n("Operator-and-Expression")])),_:1})]),s[59]||(s[59]=a("h3",{id:"aggregate-functions",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#aggregate-functions"},[a("span",null,"Aggregate Functions")])],-1)),a("p",null,[s[11]||(s[11]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[10]||(s[10]=[n("Aggregate Functions")])),_:1})]),s[60]||(s[60]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">status</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> count_if<span class="token punctuation">(</span>s1<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">&amp;</span> s2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> count_if<span class="token punctuation">(</span>s1<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">&amp;</span> s2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>db<span class="token punctuation">.</span>d1<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> count_if<span class="token punctuation">(</span>s1<span class="token operator">=</span><span class="token number">0</span> <span class="token operator">&amp;</span> s2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;ignoreNull&#39;</span><span class="token operator">=</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> count_if<span class="token punctuation">(</span>s1<span class="token operator">=</span><span class="token number">1</span> <span class="token operator">&amp;</span> s2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;ignoreNull&#39;</span><span class="token operator">=</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>db<span class="token punctuation">.</span>d1<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> time_duration<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>db<span class="token punctuation">.</span>d1<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="算数函数" tabindex="-1"><a class="header-anchor" href="#算数函数"><span>算数函数</span></a></h3>`,2)),a("p",null,[s[13]||(s[13]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[12]||(s[12]=[n("Arithmetic Operators and Functions")])),_:1})]),s[61]||(s[61]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> sin<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> cos<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> tan<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">limit</span> <span class="token number">5</span> <span class="token keyword">offset</span> <span class="token number">1000</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> s4<span class="token punctuation">,</span><span class="token function">round</span><span class="token punctuation">(</span>s4<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">round</span><span class="token punctuation">(</span>s4<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">round</span><span class="token punctuation">(</span>s4<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="比较函数" tabindex="-1"><a class="header-anchor" href="#比较函数"><span>比较函数</span></a></h3>`,2)),a("p",null,[s[15]||(s[15]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[14]||(s[14]=[n("Comparison Operators and Functions")])),_:1})]),s[62]||(s[62]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> ts<span class="token punctuation">,</span> on_off<span class="token punctuation">(</span>ts<span class="token punctuation">,</span> <span class="token string">&#39;threshold&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> ts<span class="token punctuation">,</span> in_range<span class="token punctuation">(</span>ts<span class="token punctuation">,</span> <span class="token string">&#39;lower&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;upper&#39;</span><span class="token operator">=</span><span class="token string">&#39;3.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="字符串处理函数" tabindex="-1"><a class="header-anchor" href="#字符串处理函数"><span>字符串处理函数</span></a></h3>`,2)),a("p",null,[s[17]||(s[17]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[16]||(s[16]=[n("String Processing")])),_:1})]),s[63]||(s[63]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> string_contains<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;s&#39;</span><span class="token operator">=</span><span class="token string">&#39;warn&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d4<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> string_matches<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;regex&#39;</span><span class="token operator">=</span><span class="token string">&#39;[^\\\\s]+37229&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d4<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> length<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> locate<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> locate<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;reverse&quot;</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> startswith<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> endswith<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> concat<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token string">&quot;target1&quot;</span><span class="token operator">=</span><span class="token string">&quot;IoT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;target2&quot;</span><span class="token operator">=</span><span class="token string">&quot;DB&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> concat<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> <span class="token string">&quot;target1&quot;</span><span class="token operator">=</span><span class="token string">&quot;IoT&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;target2&quot;</span><span class="token operator">=</span><span class="token string">&quot;DB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;series_behind&quot;</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> substring<span class="token punctuation">(</span>s1 <span class="token keyword">from</span> <span class="token number">1</span> <span class="token keyword">for</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> <span class="token keyword">replace</span><span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;es&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;tt&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> upper<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> lower<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s3<span class="token punctuation">,</span> trim<span class="token punctuation">(</span>s3<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> strcmp<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> strreplace<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;replace&quot;</span><span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> strreplace<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;target&quot;</span><span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;replace&quot;</span><span class="token operator">=</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;offset&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;reverse&quot;</span><span class="token operator">=</span><span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> regexmatch<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;regex&quot;</span><span class="token operator">=</span><span class="token string">&quot;\\d+\\.\\d+\\.\\d+\\.\\d+&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;group&quot;</span><span class="token operator">=</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> regexreplace<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;regex&quot;</span><span class="token operator">=</span><span class="token string">&quot;192\\.168\\.0\\.(\\d+)&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;replace&quot;</span><span class="token operator">=</span><span class="token string">&quot;cluster-$1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;limit&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> regexsplit<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;regex&quot;</span><span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;index&quot;</span><span class="token operator">=</span><span class="token string">&quot;-1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> regexsplit<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;regex&quot;</span><span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;index&quot;</span><span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据类型转换函数" tabindex="-1"><a class="header-anchor" href="#数据类型转换函数"><span>数据类型转换函数</span></a></h3>`,2)),a("p",null,[s[19]||(s[19]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[18]||(s[18]=[n("Data Type Conversion Function")])),_:1})]),s[64]||(s[64]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">SELECT</span> cast<span class="token punctuation">(</span>s1 <span class="token keyword">as</span> INT32<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="常序列生成函数" tabindex="-1"><a class="header-anchor" href="#常序列生成函数"><span>常序列生成函数</span></a></h3>`,2)),a("p",null,[s[21]||(s[21]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[20]||(s[20]=[n("Constant Timeseries Generating Functions")])),_:1})]),s[65]||(s[65]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> s2<span class="token punctuation">,</span> const<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token operator">=</span><span class="token string">&#39;1024&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;INT64&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> pi<span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1<span class="token punctuation">;</span> </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="选择函数" tabindex="-1"><a class="header-anchor" href="#选择函数"><span>选择函数</span></a></h3>`,2)),a("p",null,[s[23]||(s[23]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[22]||(s[22]=[n("Selector Functions")])),_:1})]),s[66]||(s[66]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> top_k<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> bottom_k<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d2 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&gt;</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">-</span><span class="token number">10</span>T20:<span class="token number">36</span>:<span class="token number">15.530</span><span class="token operator">+</span><span class="token number">08</span>:<span class="token number">00</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="区间查询函数" tabindex="-1"><a class="header-anchor" href="#区间查询函数"><span>区间查询函数</span></a></h3>`,2)),a("p",null,[s[25]||(s[25]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[24]||(s[24]=[n("Continuous Interval Functions")])),_:1})]),s[67]||(s[67]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> zero_count<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> non_zero_count<span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">,</span> zero_duration<span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">,</span> non_zero_duration<span class="token punctuation">(</span>s4<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg<span class="token punctuation">.</span>d2<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="趋势计算函数" tabindex="-1"><a class="header-anchor" href="#趋势计算函数"><span>趋势计算函数</span></a></h3>`,2)),a("p",null,[s[27]||(s[27]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[26]||(s[26]=[n("Variation Trend Calculation Functions")])),_:1})]),s[68]||(s[68]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> s1<span class="token punctuation">,</span> time_difference<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> difference<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> non_negative_difference<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> derivative<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> non_negative_derivative<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>sg1<span class="token punctuation">.</span>d1 <span class="token keyword">limit</span> <span class="token number">5</span> <span class="token keyword">offset</span> <span class="token number">1000</span><span class="token punctuation">;</span> </span>
<span class="line"></span>
<span class="line"><span class="token keyword">SELECT</span> DIFF<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> DIFF<span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">SELECT</span> DIFF<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;ignoreNull&#39;</span><span class="token operator">=</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> DIFF<span class="token punctuation">(</span>s2<span class="token punctuation">,</span> <span class="token string">&#39;ignoreNull&#39;</span><span class="token operator">=</span><span class="token string">&#39;false&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="采样函数" tabindex="-1"><a class="header-anchor" href="#采样函数"><span>采样函数</span></a></h3>`,2)),a("p",null,[s[29]||(s[29]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[28]||(s[28]=[n("Sample Functions")])),_:1})]),s[69]||(s[69]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> equal_size_bucket_random_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> random_sample <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> equal_size_bucket_agg_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;avg&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> agg_avg<span class="token punctuation">,</span> equal_size_bucket_agg_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;max&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> agg_max<span class="token punctuation">,</span> equal_size_bucket_agg_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span><span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;min&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> agg_min<span class="token punctuation">,</span> equal_size_bucket_agg_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;sum&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> agg_sum<span class="token punctuation">,</span> equal_size_bucket_agg_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;extreme&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> agg_extreme<span class="token punctuation">,</span> equal_size_bucket_agg_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;variance&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> agg_variance <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> equal_size_bucket_m4_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> M4_sample <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">select</span> equal_size_bucket_outlier_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;avg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> outlier_avg_sample<span class="token punctuation">,</span> equal_size_bucket_outlier_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;stendis&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> outlier_stendis_sample<span class="token punctuation">,</span> equal_size_bucket_outlier_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;cos&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> outlier_cos_sample<span class="token punctuation">,</span> equal_size_bucket_outlier_sample<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;proportion&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token operator">=</span><span class="token string">&#39;prenextdis&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;number&#39;</span><span class="token operator">=</span><span class="token string">&#39;2&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> outlier_prenextdis_sample <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> M4<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;timeInterval&#39;</span><span class="token operator">=</span><span class="token string">&#39;25&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;displayWindowBegin&#39;</span><span class="token operator">=</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;displayWindowEnd&#39;</span><span class="token operator">=</span><span class="token string">&#39;100&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>vehicle<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> M4<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;windowSize&#39;</span><span class="token operator">=</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>vehicle<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="时间序列处理函数" tabindex="-1"><a class="header-anchor" href="#时间序列处理函数"><span>时间序列处理函数</span></a></h3>`,2)),a("p",null,[s[31]||(s[31]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[30]||(s[30]=[n("Time-Series")])),_:1})]),s[70]||(s[70]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> change_points<span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">,</span> change_points<span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">,</span> change_points<span class="token punctuation">(</span>s3<span class="token punctuation">)</span><span class="token punctuation">,</span> change_points<span class="token punctuation">(</span>s4<span class="token punctuation">)</span><span class="token punctuation">,</span> change_points<span class="token punctuation">(</span>s5<span class="token punctuation">)</span><span class="token punctuation">,</span> change_points<span class="token punctuation">(</span>s6<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>testChangePoints<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="数据质量函数库" tabindex="-1"><a class="header-anchor" href="#数据质量函数库"><span>数据质量函数库</span></a></h2>`,2)),a("p",null,[s[33]||(s[33]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[32]||(s[32]=[n("Operator-and-Expression")])),_:1})]),s[71]||(s[71]=a("h3",{id:"数据质量",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#数据质量"},[a("span",null,"数据质量")])],-1)),a("p",null,[s[35]||(s[35]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[34]||(s[34]=[n("Data-Quality")])),_:1})]),s[72]||(s[72]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># Completeness</span></span>
<span class="line"><span class="token keyword">select</span> completeness<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"><span class="token keyword">select</span> completeness<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;window&quot;</span><span class="token operator">=</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">01</span>:<span class="token number">00</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Consistency</span></span>
<span class="line"><span class="token keyword">select</span> consistency<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"><span class="token keyword">select</span> consistency<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;window&quot;</span><span class="token operator">=</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">01</span>:<span class="token number">00</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Timeliness</span></span>
<span class="line"><span class="token keyword">select</span> timeliness<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"><span class="token keyword">select</span> timeliness<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;window&quot;</span><span class="token operator">=</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">01</span>:<span class="token number">00</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Validity</span></span>
<span class="line"><span class="token keyword">select</span> Validity<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"><span class="token keyword">select</span> Validity<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;window&quot;</span><span class="token operator">=</span><span class="token string">&quot;15&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">01</span>:<span class="token number">00</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Accuracy</span></span>
<span class="line"><span class="token keyword">select</span> Accuracy<span class="token punctuation">(</span>t1<span class="token punctuation">,</span>t2<span class="token punctuation">,</span>t3<span class="token punctuation">,</span>m1<span class="token punctuation">,</span>m2<span class="token punctuation">,</span>m3<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据画像" tabindex="-1"><a class="header-anchor" href="#数据画像"><span>数据画像</span></a></h3>`,2)),a("p",null,[s[37]||(s[37]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[36]||(s[36]=[n("Data-Profiling")])),_:1})]),s[73]||(s[73]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># ACF</span></span>
<span class="line"><span class="token keyword">select</span> acf<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">05</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Distinct</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token keyword">distinct</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Histogram</span></span>
<span class="line"><span class="token keyword">select</span> histogram<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;min&quot;</span><span class="token operator">=</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;max&quot;</span><span class="token operator">=</span><span class="token string">&quot;20&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;count&quot;</span><span class="token operator">=</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Integral</span></span>
<span class="line"><span class="token keyword">select</span> integral<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">10</span></span>
<span class="line"><span class="token keyword">select</span> integral<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;unit&quot;</span><span class="token operator">=</span><span class="token string">&quot;1m&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">10</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># IntegralAvg</span></span>
<span class="line"><span class="token keyword">select</span> integralavg<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">10</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Mad</span></span>
<span class="line"><span class="token keyword">select</span> mad<span class="token punctuation">(</span>s0<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"><span class="token keyword">select</span> mad<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Median</span></span>
<span class="line"><span class="token keyword">select</span> median<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MinMax</span></span>
<span class="line"><span class="token keyword">select</span> minmax<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Mode</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token keyword">mode</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MvAvg</span></span>
<span class="line"><span class="token keyword">select</span> mvavg<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;window&quot;</span><span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># PACF</span></span>
<span class="line"><span class="token keyword">select</span> pacf<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;lag&quot;</span><span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Percentile</span></span>
<span class="line"><span class="token keyword">select</span> percentile<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;rank&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.01&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Quantile</span></span>
<span class="line"><span class="token keyword">select</span> quantile<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&quot;rank&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;K&quot;</span><span class="token operator">=</span><span class="token string">&quot;800&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Period</span></span>
<span class="line"><span class="token keyword">select</span> period<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d3</span>
<span class="line"></span>
<span class="line"><span class="token comment"># QLB</span></span>
<span class="line"><span class="token keyword">select</span> QLB<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Resample</span></span>
<span class="line"><span class="token keyword">select</span> resample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;every&#39;</span><span class="token operator">=</span><span class="token string">&#39;5m&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;interp&#39;</span><span class="token operator">=</span><span class="token string">&#39;linear&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> resample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;every&#39;</span><span class="token operator">=</span><span class="token string">&#39;30m&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;aggr&#39;</span><span class="token operator">=</span><span class="token string">&#39;first&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> resample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;every&#39;</span><span class="token operator">=</span><span class="token string">&#39;30m&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;start&#39;</span><span class="token operator">=</span><span class="token string">&#39;2021-03-06 15:00:00&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Sample</span></span>
<span class="line"><span class="token keyword">select</span> sample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token string">&#39;reservoir&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> sample<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token string">&#39;isometric&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Segment</span></span>
<span class="line"><span class="token keyword">select</span> segment<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;error&quot;</span><span class="token operator">=</span><span class="token string">&quot;0.1&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Skew</span></span>
<span class="line"><span class="token keyword">select</span> skew<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Spline</span></span>
<span class="line"><span class="token keyword">select</span> spline<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;points&quot;</span><span class="token operator">=</span><span class="token string">&quot;151&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Spread</span></span>
<span class="line"><span class="token keyword">select</span> spread<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Stddev</span></span>
<span class="line"><span class="token keyword">select</span> stddev<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ZScore</span></span>
<span class="line"><span class="token keyword">select</span> zscore<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="异常检测" tabindex="-1"><a class="header-anchor" href="#异常检测"><span>异常检测</span></a></h3>`,2)),a("p",null,[s[39]||(s[39]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[38]||(s[38]=[n("Anomaly-Detection")])),_:1})]),s[74]||(s[74]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># IQR</span></span>
<span class="line"><span class="token keyword">select</span> iqr<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># KSigma</span></span>
<span class="line"><span class="token keyword">select</span> ksigma<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;k&quot;</span><span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># LOF</span></span>
<span class="line"><span class="token keyword">select</span> lof<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span><span class="token operator">&lt;</span><span class="token number">1000</span></span>
<span class="line"><span class="token keyword">select</span> lof<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&quot;method&quot;</span><span class="token operator">=</span><span class="token string">&quot;series&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span><span class="token operator">&lt;</span><span class="token number">1000</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># MissDetect</span></span>
<span class="line"><span class="token keyword">select</span> missdetect<span class="token punctuation">(</span>s2<span class="token punctuation">,</span><span class="token string">&#39;minlen&#39;</span><span class="token operator">=</span><span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Range</span></span>
<span class="line"><span class="token keyword">select</span> range<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;lower_bound&quot;</span><span class="token operator">=</span><span class="token string">&quot;101.0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;upper_bound&quot;</span><span class="token operator">=</span><span class="token string">&quot;125.0&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">30</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># TwoSidedFilter</span></span>
<span class="line"><span class="token keyword">select</span> TwoSidedFilter<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> <span class="token string">&#39;len&#39;</span><span class="token operator">=</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;threshold&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.3&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Outlier</span></span>
<span class="line"><span class="token keyword">select</span> outlier<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;r&quot;</span><span class="token operator">=</span><span class="token string">&quot;5.0&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;k&quot;</span><span class="token operator">=</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;w&quot;</span><span class="token operator">=</span><span class="token string">&quot;10&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;s&quot;</span><span class="token operator">=</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MasterTrain</span></span>
<span class="line"><span class="token keyword">select</span> MasterTrain<span class="token punctuation">(</span>lo<span class="token punctuation">,</span>la<span class="token punctuation">,</span>m_lo<span class="token punctuation">,</span>m_la<span class="token punctuation">,</span><span class="token string">&#39;p&#39;</span><span class="token operator">=</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;eta&#39;</span><span class="token operator">=</span><span class="token string">&#39;1.0&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MasterDetect</span></span>
<span class="line"><span class="token keyword">select</span> MasterDetect<span class="token punctuation">(</span>lo<span class="token punctuation">,</span>la<span class="token punctuation">,</span>m_lo<span class="token punctuation">,</span>m_la<span class="token punctuation">,</span>model<span class="token punctuation">,</span><span class="token string">&#39;output_type&#39;</span><span class="token operator">=</span><span class="token string">&#39;repair&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;p&#39;</span><span class="token operator">=</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;eta&#39;</span><span class="token operator">=</span><span class="token string">&#39;1.0&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"><span class="token keyword">select</span> MasterDetect<span class="token punctuation">(</span>lo<span class="token punctuation">,</span>la<span class="token punctuation">,</span>m_lo<span class="token punctuation">,</span>m_la<span class="token punctuation">,</span>model<span class="token punctuation">,</span><span class="token string">&#39;output_type&#39;</span><span class="token operator">=</span><span class="token string">&#39;anomaly&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;p&#39;</span><span class="token operator">=</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;eta&#39;</span><span class="token operator">=</span><span class="token string">&#39;1.0&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="频域分析" tabindex="-1"><a class="header-anchor" href="#频域分析"><span>频域分析</span></a></h3>`,2)),a("p",null,[s[41]||(s[41]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[40]||(s[40]=[n("Frequency-Domain")])),_:1})]),s[75]||(s[75]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># Conv</span></span>
<span class="line"><span class="token keyword">select</span> conv<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Deconv</span></span>
<span class="line"><span class="token keyword">select</span> deconv<span class="token punctuation">(</span>s3<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"><span class="token keyword">select</span> deconv<span class="token punctuation">(</span>s3<span class="token punctuation">,</span>s2<span class="token punctuation">,</span><span class="token string">&#39;result&#39;</span><span class="token operator">=</span><span class="token string">&#39;remainder&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># DWT</span></span>
<span class="line"><span class="token keyword">select</span> dwt<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;method&quot;</span><span class="token operator">=</span><span class="token string">&quot;haar&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># FFT</span></span>
<span class="line"><span class="token keyword">select</span> fft<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> fft<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;result&#39;</span><span class="token operator">=</span><span class="token string">&#39;real&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;compress&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.99&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fft<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> <span class="token string">&#39;result&#39;</span><span class="token operator">=</span><span class="token string">&#39;imag&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;compress&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.99&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># HighPass</span></span>
<span class="line"><span class="token keyword">select</span> highpass<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;wpass&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.45&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># IFFT</span></span>
<span class="line"><span class="token keyword">select</span> ifft<span class="token punctuation">(</span>re<span class="token punctuation">,</span> im<span class="token punctuation">,</span> <span class="token string">&#39;interval&#39;</span><span class="token operator">=</span><span class="token string">&#39;1m&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;start&#39;</span><span class="token operator">=</span><span class="token string">&#39;2021-01-01 00:00:00&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># LowPass</span></span>
<span class="line"><span class="token keyword">select</span> lowpass<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;wpass&#39;</span><span class="token operator">=</span><span class="token string">&#39;0.45&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据匹配" tabindex="-1"><a class="header-anchor" href="#数据匹配"><span>数据匹配</span></a></h3>`,2)),a("p",null,[s[43]||(s[43]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[42]||(s[42]=[n("Data-Matching")])),_:1})]),s[76]||(s[76]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># Cov</span></span>
<span class="line"><span class="token keyword">select</span> cov<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># DTW</span></span>
<span class="line"><span class="token keyword">select</span> dtw<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Pearson</span></span>
<span class="line"><span class="token keyword">select</span> pearson<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># PtnSym</span></span>
<span class="line"><span class="token keyword">select</span> ptnsym<span class="token punctuation">(</span>s4<span class="token punctuation">,</span> <span class="token string">&#39;window&#39;</span><span class="token operator">=</span><span class="token string">&#39;5&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;threshold&#39;</span><span class="token operator">=</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># XCorr</span></span>
<span class="line"><span class="token keyword">select</span> xcorr<span class="token punctuation">(</span>s1<span class="token punctuation">,</span> s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1 <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2020</span><span class="token operator">-</span><span class="token number">01</span><span class="token operator">-</span><span class="token number">01</span> <span class="token number">00</span>:<span class="token number">00</span>:<span class="token number">05</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="数据修复" tabindex="-1"><a class="header-anchor" href="#数据修复"><span>数据修复</span></a></h3>`,2)),a("p",null,[s[45]||(s[45]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[44]||(s[44]=[n("Data-Repairing")])),_:1})]),s[77]||(s[77]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># TimestampRepair</span></span>
<span class="line"><span class="token keyword">select</span> timestamprepair<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;interval&#39;</span><span class="token operator">=</span><span class="token string">&#39;10000&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"><span class="token keyword">select</span> timestamprepair<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ValueFill</span></span>
<span class="line"><span class="token keyword">select</span> valuefill<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"><span class="token keyword">select</span> valuefill<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&quot;method&quot;</span><span class="token operator">=</span><span class="token string">&quot;previous&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ValueRepair</span></span>
<span class="line"><span class="token keyword">select</span> valuerepair<span class="token punctuation">(</span>s1<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"><span class="token keyword">select</span> valuerepair<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token string">&#39;LsGreedy&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span>
<span class="line"><span class="token comment"># MasterRepair</span></span>
<span class="line"><span class="token keyword">select</span> MasterRepair<span class="token punctuation">(</span>t1<span class="token punctuation">,</span>t2<span class="token punctuation">,</span>t3<span class="token punctuation">,</span>m1<span class="token punctuation">,</span>m2<span class="token punctuation">,</span>m3<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test</span>
<span class="line"></span>
<span class="line"><span class="token comment"># SeasonalRepair</span></span>
<span class="line"><span class="token keyword">select</span> seasonalrepair<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;period&#39;</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;k&#39;</span><span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"><span class="token keyword">select</span> seasonalrepair<span class="token punctuation">(</span>s1<span class="token punctuation">,</span><span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token string">&#39;improved&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;period&#39;</span><span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="序列发现" tabindex="-1"><a class="header-anchor" href="#序列发现"><span>序列发现</span></a></h3>`,2)),a("p",null,[s[47]||(s[47]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[46]||(s[46]=[n("Series-Discovery")])),_:1})]),s[78]||(s[78]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># ConsecutiveSequences</span></span>
<span class="line"><span class="token keyword">select</span> consecutivesequences<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">,</span><span class="token string">&#39;gap&#39;</span><span class="token operator">=</span><span class="token string">&#39;5m&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"><span class="token keyword">select</span> consecutivesequences<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># ConsecutiveWindows</span></span>
<span class="line"><span class="token keyword">select</span> consecutivewindows<span class="token punctuation">(</span>s1<span class="token punctuation">,</span>s2<span class="token punctuation">,</span><span class="token string">&#39;length&#39;</span><span class="token operator">=</span><span class="token string">&#39;10m&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="机器学习" tabindex="-1"><a class="header-anchor" href="#机器学习"><span>机器学习</span></a></h3>`,2)),a("p",null,[s[49]||(s[49]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[48]||(s[48]=[n("Machine-Learning")])),_:1})]),s[79]||(s[79]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token comment"># AR</span></span>
<span class="line"><span class="token keyword">select</span> ar<span class="token punctuation">(</span>s0<span class="token punctuation">,</span><span class="token string">&quot;p&quot;</span><span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Representation</span></span>
<span class="line"><span class="token keyword">select</span> representation<span class="token punctuation">(</span>s0<span class="token punctuation">,</span><span class="token string">&quot;tb&quot;</span><span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;vb&quot;</span><span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># RM</span></span>
<span class="line"><span class="token keyword">select</span> rm<span class="token punctuation">(</span>s0<span class="token punctuation">,</span> s1<span class="token punctuation">,</span><span class="token string">&quot;tb&quot;</span><span class="token operator">=</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;vb&quot;</span><span class="token operator">=</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test<span class="token punctuation">.</span>d0</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="lambda-表达式" tabindex="-1"><a class="header-anchor" href="#lambda-表达式"><span>Lambda 表达式</span></a></h2>`,2)),a("p",null,[s[51]||(s[51]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[50]||(s[50]=[n("Lambda")])),_:1})]),s[80]||(s[80]=l('<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> jexl<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;expr&#39;</span><span class="token operator">=</span><span class="token string">&#39;x -&gt; {x + x}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> jexl1<span class="token punctuation">,</span> jexl<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;expr&#39;</span><span class="token operator">=</span><span class="token string">&#39;x -&gt; {x * 3}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> jexl2<span class="token punctuation">,</span> jexl<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;expr&#39;</span><span class="token operator">=</span><span class="token string">&#39;x -&gt; {x * x}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> jexl3<span class="token punctuation">,</span> jexl<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> <span class="token string">&#39;expr&#39;</span><span class="token operator">=</span><span class="token string">&#39;x -&gt; {multiply(x, 100)}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> jexl4<span class="token punctuation">,</span> jexl<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> st<span class="token punctuation">,</span> <span class="token string">&#39;expr&#39;</span><span class="token operator">=</span><span class="token string">&#39;(x, y) -&gt; {x + y}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> jexl5<span class="token punctuation">,</span> jexl<span class="token punctuation">(</span>temperature<span class="token punctuation">,</span> st<span class="token punctuation">,</span> str<span class="token punctuation">,</span> <span class="token string">&#39;expr&#39;</span><span class="token operator">=</span><span class="token string">&#39;(x, y, z) -&gt; {x + y + z}&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> jexl6 <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span>wf01<span class="token punctuation">.</span>wt01<span class="token punctuation">;</span><span class="token identifier"><span class="token punctuation">`</span><span class="token punctuation">`</span></span><span class="token punctuation">`</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="条件表达式" tabindex="-1"><a class="header-anchor" href="#条件表达式"><span>条件表达式</span></a></h2>',2)),a("p",null,[s[53]||(s[53]=n("更多见文档")),t(e,{to:"/zh/UserGuide/V1.2.x/User-Manual/Operator-and-Expression.html"},{default:p(()=>s[52]||(s[52]=[n("Conditional Expressions")])),_:1})]),s[81]||(s[81]=l(`<div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> T<span class="token punctuation">,</span> P<span class="token punctuation">,</span> <span class="token keyword">case</span></span>
<span class="line"><span class="token keyword">when</span> <span class="token number">1000</span><span class="token operator">&lt;</span>T <span class="token operator">and</span> T<span class="token operator">&lt;</span><span class="token number">1050</span> <span class="token operator">and</span> <span class="token number">1000000</span><span class="token operator">&lt;</span>P <span class="token operator">and</span> P<span class="token operator">&lt;</span><span class="token number">1100000</span> <span class="token keyword">then</span> <span class="token string">&quot;good!&quot;</span></span>
<span class="line"><span class="token keyword">when</span> T<span class="token operator">&lt;=</span><span class="token number">1000</span> <span class="token operator">or</span> T<span class="token operator">&gt;=</span><span class="token number">1050</span> <span class="token keyword">then</span> <span class="token string">&quot;bad temperature&quot;</span></span>
<span class="line"><span class="token keyword">when</span> P<span class="token operator">&lt;=</span><span class="token number">1000000</span> <span class="token operator">or</span> P<span class="token operator">&gt;=</span><span class="token number">1100000</span> <span class="token keyword">then</span> <span class="token string">&quot;bad pressure&quot;</span></span>
<span class="line"><span class="token keyword">end</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>result<span class="token punctuation">\`</span></span></span>
<span class="line"><span class="token keyword">from</span> root<span class="token punctuation">.</span>test1</span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> str<span class="token punctuation">,</span> <span class="token keyword">case</span></span>
<span class="line"><span class="token keyword">when</span> str <span class="token operator">like</span> <span class="token string">&quot;%cc%&quot;</span> <span class="token keyword">then</span> <span class="token string">&quot;has cc&quot;</span></span>
<span class="line"><span class="token keyword">when</span> str <span class="token operator">like</span> <span class="token string">&quot;%dd%&quot;</span> <span class="token keyword">then</span> <span class="token string">&quot;has dd&quot;</span></span>
<span class="line"><span class="token keyword">else</span> <span class="token string">&quot;no cc and dd&quot;</span> <span class="token keyword">end</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>result<span class="token punctuation">\`</span></span></span>
<span class="line"><span class="token keyword">from</span> root<span class="token punctuation">.</span>test2</span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span></span>
<span class="line"><span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> x<span class="token operator">&lt;=</span><span class="token number">1</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>(-∞,1]<span class="token punctuation">\`</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token number">1</span><span class="token operator">&lt;</span>x <span class="token operator">and</span> x<span class="token operator">&lt;=</span><span class="token number">3</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>(1,3]<span class="token punctuation">\`</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token number">3</span><span class="token operator">&lt;</span>x <span class="token operator">and</span> x<span class="token operator">&lt;=</span><span class="token number">7</span> <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>(3,7]<span class="token punctuation">\`</span></span><span class="token punctuation">,</span></span>
<span class="line"><span class="token function">count</span><span class="token punctuation">(</span><span class="token keyword">case</span> <span class="token keyword">when</span> <span class="token number">7</span><span class="token operator">&lt;</span>x <span class="token keyword">then</span> <span class="token number">1</span> <span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>(7,+∞)<span class="token punctuation">\`</span></span></span>
<span class="line"><span class="token keyword">from</span> root<span class="token punctuation">.</span>test3</span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> x<span class="token punctuation">,</span> <span class="token keyword">case</span> x <span class="token keyword">when</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token string">&quot;one&quot;</span> <span class="token keyword">when</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token string">&quot;two&quot;</span> <span class="token keyword">else</span> <span class="token string">&quot;other&quot;</span> <span class="token keyword">end</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test4</span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> x<span class="token punctuation">,</span> <span class="token keyword">case</span> x <span class="token keyword">when</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token boolean">true</span> <span class="token keyword">when</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token boolean">false</span> <span class="token keyword">end</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>result<span class="token punctuation">\`</span></span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>test4</span>
<span class="line"></span>
<span class="line"><span class="token keyword">select</span> x<span class="token punctuation">,</span> <span class="token keyword">case</span> x</span>
<span class="line"><span class="token keyword">when</span> <span class="token number">1</span> <span class="token keyword">then</span> <span class="token number">1</span></span>
<span class="line"><span class="token keyword">when</span> <span class="token number">2</span> <span class="token keyword">then</span> <span class="token number">222222222222222</span></span>
<span class="line"><span class="token keyword">when</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token number">3.3</span></span>
<span class="line"><span class="token keyword">when</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token number">4.4444444444444</span></span>
<span class="line"><span class="token keyword">end</span> <span class="token keyword">as</span> <span class="token identifier"><span class="token punctuation">\`</span>result<span class="token punctuation">\`</span></span></span>
<span class="line"><span class="token keyword">from</span> root<span class="token punctuation">.</span>test4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="触发器" tabindex="-1"><a class="header-anchor" href="#触发器"><span>触发器</span></a></h2><h3 id="使用-sql-语句注册该触发器" tabindex="-1"><a class="header-anchor" href="#使用-sql-语句注册该触发器"><span>使用 SQL 语句注册该触发器</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// Create Trigger</span>
<span class="line"></span>
<span class="line">createTrigger</span>
<span class="line"></span>
<span class="line">​    : CREATE triggerType TRIGGER triggerName=identifier triggerEventClause ON pathPattern AS className=STRING_LITERAL uriClause? triggerAttributeClause?</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">triggerType</span>
<span class="line"></span>
<span class="line">​    : STATELESS | STATEFUL</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">triggerEventClause</span>
<span class="line"></span>
<span class="line">​    : (BEFORE | AFTER) INSERT</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">uriClause</span>
<span class="line"></span>
<span class="line">​    : USING URI uri</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">uri</span>
<span class="line"></span>
<span class="line">​    : STRING_LITERAL</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">triggerAttributeClause</span>
<span class="line"></span>
<span class="line">​    : WITH LR_BRACKET triggerAttribute (COMMA triggerAttribute)* RR_BRACKET</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">triggerAttribute</span>
<span class="line"></span>
<span class="line">​    : key=attributeKey operator_eq value=attributeValue</span>
<span class="line"></span>
<span class="line">​    ;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="sql-语句示例" tabindex="-1"><a class="header-anchor" href="#sql-语句示例"><span>SQL 语句示例</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE STATELESS TRIGGER triggerTest</span>
<span class="line"></span>
<span class="line">BEFORE INSERT</span>
<span class="line"></span>
<span class="line">ON root.sg.**</span>
<span class="line"></span>
<span class="line">AS &#39;org.apache.iotdb.trigger.ClusterAlertingExample&#39;</span>
<span class="line"></span>
<span class="line">USING URI &#39;http://jar/ClusterAlertingExample.jar&#39;</span>
<span class="line"></span>
<span class="line">WITH (</span>
<span class="line"></span>
<span class="line">​    &quot;name&quot; = &quot;trigger&quot;,</span>
<span class="line"></span>
<span class="line">​    &quot;limit&quot; = &quot;100&quot;</span>
<span class="line"></span>
<span class="line">)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="卸载触发器" tabindex="-1"><a class="header-anchor" href="#卸载触发器"><span>卸载触发器</span></a></h3><h4 id="卸载触发器的-sql-语法如下" tabindex="-1"><a class="header-anchor" href="#卸载触发器的-sql-语法如下"><span>卸载触发器的 SQL 语法如下：</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">// Drop Trigger</span>
<span class="line"></span>
<span class="line">dropTrigger</span>
<span class="line"></span>
<span class="line">  : DROP TRIGGER triggerName=identifier</span>
<span class="line"></span>
<span class="line">;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="示例语句" tabindex="-1"><a class="header-anchor" href="#示例语句"><span>示例语句</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DROP TRIGGER triggerTest1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查询触发器" tabindex="-1"><a class="header-anchor" href="#查询触发器"><span>查询触发器</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SHOW TRIGGERS</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="连续查询-continuous-query-cq" tabindex="-1"><a class="header-anchor" href="#连续查询-continuous-query-cq"><span>连续查询（Continuous Query, CQ）</span></a></h2><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">CREATE (CONTINUOUS QUERY | CQ) &lt;cq_id&gt; </span>
<span class="line">[RESAMPLE </span>
<span class="line">  [EVERY &lt;every_interval&gt;] </span>
<span class="line">  [BOUNDARY &lt;execution_boundary_time&gt;]</span>
<span class="line">  [RANGE &lt;start_time_offset&gt;[, end_time_offset]] </span>
<span class="line">]</span>
<span class="line">[TIMEOUT POLICY BLOCKED|DISCARD]</span>
<span class="line">BEGIN </span>
<span class="line">    SELECT CLAUSE</span>
<span class="line">        INTO CLAUSE</span>
<span class="line">        FROM CLAUSE</span>
<span class="line">        [WHERE CLAUSE]</span>
<span class="line">        [GROUP BY(&lt;group_by_interval&gt;[, &lt;sliding_step&gt;]) [, level = &lt;level&gt;]]</span>
<span class="line">        [HAVING CLAUSE]</span>
<span class="line">        [FILL {PREVIOUS | LINEAR | constant}]</span>
<span class="line">        [LIMIT rowLimit OFFSET rowOffset]</span>
<span class="line">        [ALIGN BY DEVICE]</span>
<span class="line">END</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置连续查询执行的周期性间隔" tabindex="-1"><a class="header-anchor" href="#配置连续查询执行的周期性间隔"><span>配置连续查询执行的周期性间隔</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE CONTINUOUS QUERY cq1</span>
<span class="line"></span>
<span class="line">RESAMPLE EVERY 20s</span>
<span class="line"></span>
<span class="line">BEGIN</span>
<span class="line"></span>
<span class="line">  SELECT max_value(temperature)</span>
<span class="line"></span>
<span class="line">  INTO root.ln.wf02.wt02(temperature_max), root.ln.wf02.wt01(temperature_max), root.ln.wf01.wt02(temperature_max), root.ln.wf01.wt01(temperature_max)</span>
<span class="line"></span>
<span class="line">  FROM root.ln.*.*</span>
<span class="line"></span>
<span class="line">  GROUP BY(10s)</span>
<span class="line"></span>
<span class="line">END</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">\\&gt; SELECT temperature_max from root.ln.*.*;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置连续查询的时间窗口大小" tabindex="-1"><a class="header-anchor" href="#配置连续查询的时间窗口大小"><span>配置连续查询的时间窗口大小</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE CONTINUOUS QUERY cq2</span>
<span class="line"></span>
<span class="line">RESAMPLE RANGE 40s</span>
<span class="line"></span>
<span class="line">BEGIN</span>
<span class="line"></span>
<span class="line">  SELECT max_value(temperature)</span>
<span class="line"></span>
<span class="line">  INTO root.ln.wf02.wt02(temperature_max), root.ln.wf02.wt01(temperature_max), root.ln.wf01.wt02(temperature_max), root.ln.wf01.wt01(temperature_max)</span>
<span class="line"></span>
<span class="line">  FROM root.ln.*.*</span>
<span class="line"></span>
<span class="line">  GROUP BY(10s)</span>
<span class="line"></span>
<span class="line">END</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">\\&gt; SELECT temperature_max from root.ln.*.*;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="同时配置连续查询执行的周期性间隔和时间窗口大小" tabindex="-1"><a class="header-anchor" href="#同时配置连续查询执行的周期性间隔和时间窗口大小"><span>同时配置连续查询执行的周期性间隔和时间窗口大小</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE CONTINUOUS QUERY cq3</span>
<span class="line"></span>
<span class="line">RESAMPLE EVERY 20s RANGE 40s</span>
<span class="line"></span>
<span class="line">BEGIN</span>
<span class="line"></span>
<span class="line">  SELECT max_value(temperature)</span>
<span class="line"></span>
<span class="line">  INTO root.ln.wf02.wt02(temperature_max), root.ln.wf02.wt01(temperature_max), root.ln.wf01.wt02(temperature_max), root.ln.wf01.wt01(temperature_max)</span>
<span class="line"></span>
<span class="line">  FROM root.ln.*.*</span>
<span class="line"></span>
<span class="line">  GROUP BY(10s)</span>
<span class="line"></span>
<span class="line">  FILL(100.0)</span>
<span class="line"></span>
<span class="line">END</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">\\&gt; SELECT temperature_max from root.ln.*.*;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置连续查询每次查询执行时间窗口的结束时间" tabindex="-1"><a class="header-anchor" href="#配置连续查询每次查询执行时间窗口的结束时间"><span>配置连续查询每次查询执行时间窗口的结束时间</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE CONTINUOUS QUERY cq4</span>
<span class="line"></span>
<span class="line">RESAMPLE EVERY 20s RANGE 40s, 20s</span>
<span class="line"></span>
<span class="line">BEGIN</span>
<span class="line"></span>
<span class="line">  SELECT max_value(temperature)</span>
<span class="line"></span>
<span class="line">  INTO root.ln.wf02.wt02(temperature_max), root.ln.wf02.wt01(temperature_max), root.ln.wf01.wt02(temperature_max), root.ln.wf01.wt01(temperature_max)</span>
<span class="line"></span>
<span class="line">  FROM root.ln.*.*</span>
<span class="line"></span>
<span class="line">  GROUP BY(10s)</span>
<span class="line"></span>
<span class="line">  FILL(100.0)</span>
<span class="line"></span>
<span class="line">END</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">\\&gt; SELECT temperature_max from root.ln.*.*;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="没有group-by-time子句的连续查询" tabindex="-1"><a class="header-anchor" href="#没有group-by-time子句的连续查询"><span>没有GROUP BY TIME子句的连续查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE CONTINUOUS QUERY cq5</span>
<span class="line"></span>
<span class="line">RESAMPLE EVERY 20s</span>
<span class="line"></span>
<span class="line">BEGIN</span>
<span class="line"></span>
<span class="line">  SELECT temperature + 1</span>
<span class="line"></span>
<span class="line">  INTO root.precalculated_sg.::(temperature)</span>
<span class="line"></span>
<span class="line">  FROM root.ln.*.*</span>
<span class="line"></span>
<span class="line">  align by device</span>
<span class="line"></span>
<span class="line">END</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">\\&gt; SELECT temperature from root.precalculated_sg.*.* align by device;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="连续查询的管理" tabindex="-1"><a class="header-anchor" href="#连续查询的管理"><span>连续查询的管理</span></a></h3><h4 id="查询系统已有的连续查询" tabindex="-1"><a class="header-anchor" href="#查询系统已有的连续查询"><span>查询系统已有的连续查询</span></a></h4><p>展示集群中所有的已注册的连续查询</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SHOW (CONTINUOUS QUERIES | CQS) </span>
<span class="line"></span>
<span class="line">SHOW CONTINUOUS QUERIES;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除已有的连续查询" tabindex="-1"><a class="header-anchor" href="#删除已有的连续查询"><span>删除已有的连续查询</span></a></h4><p>删除指定的名为cq_id的连续查询：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DROP (CONTINUOUS QUERY | CQ) &lt;cq_id&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DROP CONTINUOUS QUERY s1_count_cq;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="作为子查询的替代品" tabindex="-1"><a class="header-anchor" href="#作为子查询的替代品"><span>作为子查询的替代品</span></a></h4><p>\\1. 创建一个连续查询</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE CQ s1_count_cq </span>
<span class="line"></span>
<span class="line">BEGIN </span>
<span class="line"></span>
<span class="line">​    SELECT count(s1)  </span>
<span class="line"></span>
<span class="line">​        INTO root.sg_count.d.count_s1</span>
<span class="line"></span>
<span class="line">​        FROM root.sg.d</span>
<span class="line"></span>
<span class="line">​        GROUP BY(30m)</span>
<span class="line"></span>
<span class="line">END</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>查询连续查询的结果</li></ol><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT avg(count_s1) from root.sg_count.d;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="用户自定义函数" tabindex="-1"><a class="header-anchor" href="#用户自定义函数"><span>用户自定义函数</span></a></h2><h3 id="udfparameters" tabindex="-1"><a class="header-anchor" href="#udfparameters"><span>UDFParameters</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT UDF(s1, s2, &#39;key1&#39;=&#39;iotdb&#39;, &#39;key2&#39;=&#39;123.45&#39;) FROM root.sg.d;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="udf-注册" tabindex="-1"><a class="header-anchor" href="#udf-注册"><span>UDF 注册</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE FUNCTION &lt;UDF-NAME&gt; AS &lt;UDF-CLASS-FULL-PATHNAME&gt; (USING URI URI-STRING)?</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="不指定uri" tabindex="-1"><a class="header-anchor" href="#不指定uri"><span>不指定URI</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE FUNCTION example AS &#39;org.apache.iotdb.udf.UDTFExample&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="指定uri" tabindex="-1"><a class="header-anchor" href="#指定uri"><span>指定URI</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE FUNCTION example AS &#39;org.apache.iotdb.udf.UDTFExample&#39; USING URI &#39;http://jar/example.jar&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="udf-卸载" tabindex="-1"><a class="header-anchor" href="#udf-卸载"><span>UDF 卸载</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DROP FUNCTION &lt;UDF-NAME&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">DROP FUNCTION example</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="udf-查询" tabindex="-1"><a class="header-anchor" href="#udf-查询"><span>UDF 查询</span></a></h3><h4 id="带自定义输入参数的查询" tabindex="-1"><a class="header-anchor" href="#带自定义输入参数的查询"><span>带自定义输入参数的查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT example(s1, &#39;key1&#39;=&#39;value1&#39;, &#39;key2&#39;=&#39;value2&#39;), example(*, &#39;key3&#39;=&#39;value3&#39;) FROM root.sg.d1;</span>
<span class="line"></span>
<span class="line">SELECT example(s1, s2, &#39;key1&#39;=&#39;value1&#39;, &#39;key2&#39;=&#39;value2&#39;) FROM root.sg.d1;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="与其他查询的嵌套查询" tabindex="-1"><a class="header-anchor" href="#与其他查询的嵌套查询"><span>与其他查询的嵌套查询</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SELECT s1, s2, example(s1, s2) FROM root.sg.d1;</span>
<span class="line"></span>
<span class="line">SELECT *, example(*) FROM root.sg.d1 DISABLE ALIGN;</span>
<span class="line"></span>
<span class="line">SELECT s1 * example(* / s1 + s2) FROM root.sg.d1;</span>
<span class="line"></span>
<span class="line">SELECT s1, s2, s1 + example(s1, s2), s1 - example(s1 + example(s1, s2) / s2) FROM root.sg.d1;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看所有注册的-udf" tabindex="-1"><a class="header-anchor" href="#查看所有注册的-udf"><span>查看所有注册的 UDF</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">SHOW FUNCTIONS</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="权限管理" tabindex="-1"><a class="header-anchor" href="#权限管理"><span>权限管理</span></a></h2><h3 id="_1、创建用户" tabindex="-1"><a class="header-anchor" href="#_1、创建用户"><span>1、创建用户</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">CREATE USER \`ln_write_user\` &#39;write_pwd&#39;</span>
<span class="line"></span>
<span class="line">CREATE USER \`sgcc_write_user\` &#39;write_pwd&#39;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、展示用户" tabindex="-1"><a class="header-anchor" href="#_2、展示用户"><span>2、展示用户</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">LIST USER</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3、赋予用户权限" tabindex="-1"><a class="header-anchor" href="#_3、赋予用户权限"><span>3、赋予用户权限</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)</span>
<span class="line"></span>
<span class="line">系统不允许用户进行此操作，会提示错误：</span>
<span class="line"></span>
<span class="line">IoTDB&gt; INSERT INTO root.ln.wf01.wt01(timestamp,status) values(1509465600000,true)</span>
<span class="line"></span>
<span class="line">Msg: 602: No permissions for this operation, please add privilege INSERT_TIMESERIES.</span>
<span class="line"></span>
<span class="line">用root用户分别赋予他们向对应 database 数据的写入权限</span>
<span class="line"></span>
<span class="line">GRANT USER \`ln_write_user\` PRIVILEGES INSERT_TIMESERIES on root.ln.**</span>
<span class="line"></span>
<span class="line">GRANT USER \`sgcc_write_user\` PRIVILEGES INSERT_TIMESERIES on root.sgcc1.**, root.sgcc2.**</span>
<span class="line"></span>
<span class="line">GRANT USER \`ln_write_user\` PRIVILEGES CREATE_USER</span>
<span class="line"></span>
<span class="line">使用ln_write_user再尝试写入数据</span>
<span class="line"></span>
<span class="line">IoTDB&gt; INSERT INTO root.ln.wf01.wt01(timestamp, status) values(1509465600000, true)</span>
<span class="line"></span>
<span class="line">Msg: The statement is executed successfully.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、撤销用户权限" tabindex="-1"><a class="header-anchor" href="#_4、撤销用户权限"><span>4、撤销用户权限</span></a></h3><p>用root用户撤销ln_write_user和sgcc_write_user的权限：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">REVOKE USER \`ln_write_user\` PRIVILEGES INSERT_TIMESERIES on root.ln.**</span>
<span class="line"></span>
<span class="line">REVOKE USER \`sgcc_write_user\` PRIVILEGES INSERT_TIMESERIES on root.sgcc1.**, root.sgcc2.**</span>
<span class="line"></span>
<span class="line">REVOKE USER \`ln_write_user\` PRIVILEGES CREATE_USER</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>撤销权限后，ln_write_user就没有向root.ln.**写入数据的权限了</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">INSERT INTO root.ln.wf01.wt01(timestamp, status) values(1509465600000, true)</span>
<span class="line"></span>
<span class="line">Msg: 602: No permissions for this operation, please add privilege INSERT_TIMESERIES.</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5、sql-语句" tabindex="-1"><a class="header-anchor" href="#_5、sql-语句"><span>5、SQL 语句</span></a></h3><ul><li>创建用户</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">CREATE USER &lt;userName&gt; &lt;password&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; CREATE USER <code>thulab</code> &#39;passwd&#39;;</p><ul><li>删除用户</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">DROP USER &lt;userName&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; DROP USER <code>xiaoming</code>;</p><ul><li>创建角色</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">CREATE ROLE &lt;roleName&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; CREATE ROLE <code>admin</code>;</p><ul><li>删除角色</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">DROP USER &lt;userName&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; DROP USER <code>xiaoming</code>;</p><ul><li>赋予用户权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">GRANT USER &lt;userName&gt; PRIVILEGES &lt;privileges&gt; ON &lt;nodeNames&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; GRANT USER <code>tempuser</code> PRIVILEGES INSERT_TIMESERIES, DELETE_TIMESERIES on root.ln.<strong>, root.sgcc.</strong>;</p><p>Eg: IoTDB &gt; GRANT USER <code>tempuser</code> PRIVILEGES CREATE_ROLE;</p><ul><li>赋予用户全部的权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">GRANT USER &lt;userName&gt; PRIVILEGES ALL; </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; GRANT USER <code>tempuser</code> PRIVILEGES ALL;</p><ul><li>赋予角色权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">GRANT ROLE &lt;roleName&gt; PRIVILEGES &lt;privileges&gt; ON &lt;nodeNames&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; GRANT ROLE <code>temprole</code> PRIVILEGES INSERT_TIMESERIES, DELETE_TIMESERIES ON root.sgcc.<strong>, root.ln.</strong>;</p><p>Eg: IoTDB &gt; GRANT ROLE <code>temprole</code> PRIVILEGES CREATE_ROLE;</p><ul><li>赋予角色全部的权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">GRANT ROLE &lt;roleName&gt; PRIVILEGES ALL;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; GRANT ROLE <code>temprole</code> PRIVILEGES ALL;</p><ul><li>赋予用户角色</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">GRANT &lt;roleName&gt; TO &lt;userName&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; GRANT <code>temprole</code> TO tempuser;</p><ul><li>撤销用户权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">REVOKE USER &lt;userName&gt; PRIVILEGES &lt;privileges&gt; ON &lt;nodeNames&gt;;   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; REVOKE USER <code>tempuser</code> PRIVILEGES DELETE_TIMESERIES on root.ln.**;</p><p>Eg: IoTDB &gt; REVOKE USER <code>tempuser</code> PRIVILEGES CREATE_ROLE;</p><ul><li>移除用户所有权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">REVOKE USER &lt;userName&gt; PRIVILEGES ALL; </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; REVOKE USER <code>tempuser</code> PRIVILEGES ALL;</p><ul><li>撤销角色权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">REVOKE ROLE &lt;roleName&gt; PRIVILEGES &lt;privileges&gt; ON &lt;nodeNames&gt;;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; REVOKE ROLE <code>temprole</code> PRIVILEGES DELETE_TIMESERIES ON root.ln.**;</p><p>Eg: IoTDB &gt; REVOKE ROLE <code>temprole</code> PRIVILEGES CREATE_ROLE;</p><ul><li>撤销角色全部的权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">REVOKE ROLE &lt;roleName&gt; PRIVILEGES ALL;  </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; REVOKE ROLE <code>temprole</code> PRIVILEGES ALL;</p><ul><li>撤销用户角色</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">REVOKE &lt;roleName&gt; FROM &lt;userName&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; REVOKE <code>temprole</code> FROM tempuser;</p><ul><li>列出所有用户</li></ul><p>LIST USER</p><p>Eg: IoTDB &gt; LIST USER</p><ul><li>列出指定角色下所有用户</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">LIST USER OF ROLE &lt;roleName&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; LIST USER OF ROLE <code>roleuser</code>;</p><ul><li>列出所有角色</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">REVOKE &lt;roleName&gt; FROM &lt;userName&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; REVOKE <code>temprole</code> FROM tempuser;</p><ul><li>列出指定用户下所有角色</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">LIST USER OF ROLE &lt;roleName&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; LIST USER OF ROLE <code>roleuser</code>;</p><ul><li>列出用户所有权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">LIST PRIVILEGES USER &lt;username&gt;;   </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; LIST PRIVILEGES USER <code>tempuser</code>;</p><ul><li>列出用户在具体路径上相关联的权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">LIST PRIVILEGES USER &lt;username&gt; ON &lt;paths&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB&gt; LIST PRIVILEGES USER <code>tempuser</code> ON root.ln.<strong>, root.ln.wf01.</strong>;</p><p>IoTDB&gt; LIST PRIVILEGES USER <code>tempuser</code> ON root.ln.wf01.wt01.**;</p><ul><li>列出角色所有权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">LIST PRIVILEGES ROLE &lt;roleName&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; LIST PRIVILEGES ROLE <code>actor</code>;</p><ul><li>列出角色在具体路径上相关联的权限</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">LIST PRIVILEGES ROLE &lt;roleName&gt; ON &lt;paths&gt;;    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB&gt; LIST PRIVILEGES ROLE <code>temprole</code> ON root.ln.<strong>, root.ln.wf01.wt01.</strong>;</p><p>IoTDB&gt; LIST PRIVILEGES ROLE <code>temprole</code> ON root.ln.wf01.wt01.**;</p><ul><li>更新密码</li></ul><div class="language-Go line-numbers-mode" data-highlighter="prismjs" data-ext="Go" data-title="Go"><pre><code><span class="line">ALTER USER &lt;username&gt; SET PASSWORD &lt;password&gt;;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Eg: IoTDB &gt; ALTER USER <code>tempuser</code> SET PASSWORD &#39;newpwd&#39;;</p><h3 id="_6、非root用户限制进行的操作" tabindex="-1"><a class="header-anchor" href="#_6、非root用户限制进行的操作"><span>6、非root用户限制进行的操作</span></a></h3><h4 id="tsfile管理" tabindex="-1"><a class="header-anchor" href="#tsfile管理"><span>TsFile管理</span></a></h4><ul><li>加载TsFile</li></ul><p>Eg: IoTDB &gt; load &#39;/Users/Desktop/data/1575028885956-101-0.tsfile&#39;</p><ul><li>删除TsFile文件</li></ul><p>Eg: IoTDB &gt; remove &#39;/Users/Desktop/data/data/root.vehicle/0/0/1575028885956-101-0.tsfile&#39;</p><ul><li>卸载TsFile文件到指定目录</li></ul><p>Eg: IoTDB &gt; unload &#39;/Users/Desktop/data/data/root.vehicle/0/0/1575028885956-101-0.tsfile&#39; &#39;/data/data/tmp&#39;</p><h4 id="删除时间分区-实验性功能" tabindex="-1"><a class="header-anchor" href="#删除时间分区-实验性功能"><span>删除时间分区（实验性功能）</span></a></h4><ul><li>删除时间分区（实验性功能）</li></ul><p>Eg: IoTDB &gt; DELETE PARTITION root.ln 0,1,2</p><h4 id="连续查询" tabindex="-1"><a class="header-anchor" href="#连续查询"><span>连续查询</span></a></h4><ul><li>连续查询(CQ)</li></ul><p>Eg: IoTDB &gt; CREATE CONTINUOUS QUERY cq1 BEGIN SELECT max_value(temperature) INTO temperature_max FROM root.ln.<em>.</em> GROUP BY time(10s) END</p><h4 id="运维命令" tabindex="-1"><a class="header-anchor" href="#运维命令"><span>运维命令</span></a></h4><ul><li>FLUSH</li></ul><p>Eg: IoTDB &gt; flush</p><ul><li>MERGE</li></ul><p>Eg: IoTDB &gt; MERGE</p><p>Eg: IoTDB &gt; FULL MERGE</p><ul><li>CLEAR CACHE</li></ul><p>Eg: IoTDB &gt; CLEAR CACHE</p><ul><li>SET SYSTEM TO READONLY / WRITABLE</li></ul><p>Eg: IoTDB &gt; SET SYSTEM TO READONLY / WRITABLE</p><ul><li>查询终止</li></ul><p>Eg: IoTDB &gt; KILL QUERY 1</p><h4 id="水印工具" tabindex="-1"><a class="header-anchor" href="#水印工具"><span>水印工具</span></a></h4><ul><li>为新用户施加水印</li></ul><p>Eg: IoTDB &gt; grant watermark_embedding to Alice</p><ul><li>撤销水印</li></ul><p>Eg: IoTDB &gt; revoke watermark_embedding from Alice</p>`,177))])}const v=i(d,[["render",u],["__file","SQL-Manual.html.vue"]]),b=JSON.parse('{"path":"/zh/UserGuide/V1.2.x/SQL-Manual/SQL-Manual.html","title":"SQL手册","lang":"zh-CN","frontmatter":{"description":"SQL手册 元数据操作 1、数据库管理 创建数据库 查看数据库 删除数据库 统计数据库数量 2、时间序列管理 创建时间序列 简化版 错误提示 创建对齐时间序列 删除时间序列 查看时间序列 统计时间序列数量 标签点管理 重命名标签或属性 重新设置标签或属性的值 删除已经存在的标签或属性 添加新的标签 添加新的属性 更新插入别名，标签和属性 使用标签作为过...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.2.x/SQL-Manual/SQL-Manual.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.2.x/SQL-Manual/SQL-Manual.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:title","content":"SQL手册"}],["meta",{"property":"og:description","content":"SQL手册 元数据操作 1、数据库管理 创建数据库 查看数据库 删除数据库 统计数据库数量 2、时间序列管理 创建时间序列 简化版 错误提示 创建对齐时间序列 删除时间序列 查看时间序列 统计时间序列数量 标签点管理 重命名标签或属性 重新设置标签或属性的值 删除已经存在的标签或属性 添加新的标签 添加新的属性 更新插入别名，标签和属性 使用标签作为过..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://alioss.timecho.com/docs/img/%E6%A8%A1%E6%9D%BF.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-11-11T09:21:04.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-11T09:21:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SQL手册\\",\\"image\\":[\\"https://alioss.timecho.com/docs/img/%E6%A8%A1%E6%9D%BF.png\\",\\"https://alioss.timecho.com/docs/img/%E6%A8%A1%E6%9D%BF%E6%B5%81%E7%A8%8B.png\\"],\\"dateModified\\":\\"2024-11-11T09:21:04.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"元数据操作","slug":"元数据操作","link":"#元数据操作","children":[{"level":3,"title":"1、数据库管理","slug":"_1、数据库管理","link":"#_1、数据库管理","children":[]},{"level":3,"title":"2、时间序列管理","slug":"_2、时间序列管理","link":"#_2、时间序列管理","children":[]},{"level":3,"title":"3、时间序列路径管理","slug":"_3、时间序列路径管理","link":"#_3、时间序列路径管理","children":[]},{"level":3,"title":"4、设备模板管理","slug":"_4、设备模板管理","link":"#_4、设备模板管理","children":[]},{"level":3,"title":"5、数据存活时间管理","slug":"_5、数据存活时间管理","link":"#_5、数据存活时间管理","children":[]}]},{"level":2,"title":"写入数据","slug":"写入数据","link":"#写入数据","children":[{"level":3,"title":"1、写入单列数据","slug":"_1、写入单列数据","link":"#_1、写入单列数据","children":[]},{"level":3,"title":"2、写入多列数据","slug":"_2、写入多列数据","link":"#_2、写入多列数据","children":[]},{"level":3,"title":"3、使用服务器时间戳","slug":"_3、使用服务器时间戳","link":"#_3、使用服务器时间戳","children":[]},{"level":3,"title":"4、写入对齐时间序列数据","slug":"_4、写入对齐时间序列数据","link":"#_4、写入对齐时间序列数据","children":[]},{"level":3,"title":"5、加载 TsFile 文件数据","slug":"_5、加载-tsfile-文件数据","link":"#_5、加载-tsfile-文件数据","children":[]}]},{"level":2,"title":"删除数据","slug":"删除数据","link":"#删除数据","children":[{"level":3,"title":"1、删除单列数据","slug":"_1、删除单列数据","link":"#_1、删除单列数据","children":[]},{"level":3,"title":"2、删除多列数据","slug":"_2、删除多列数据","link":"#_2、删除多列数据","children":[]}]},{"level":2,"title":"数据查询","slug":"数据查询","link":"#数据查询","children":[{"level":3,"title":"1、基础查询","slug":"_1、基础查询","link":"#_1、基础查询","children":[]},{"level":3,"title":"2、选择表达式","slug":"_2、选择表达式","link":"#_2、选择表达式","children":[]},{"level":3,"title":"3、查询过滤条件","slug":"_3、查询过滤条件","link":"#_3、查询过滤条件","children":[]},{"level":3,"title":"4、分段分组聚合","slug":"_4、分段分组聚合","link":"#_4、分段分组聚合","children":[]},{"level":3,"title":"5、聚合结果过滤","slug":"_5、聚合结果过滤","link":"#_5、聚合结果过滤","children":[]},{"level":3,"title":"6、结果集补空值","slug":"_6、结果集补空值","link":"#_6、结果集补空值","children":[]},{"level":3,"title":"7、查询结果分页","slug":"_7、查询结果分页","link":"#_7、查询结果分页","children":[]},{"level":3,"title":"8、排序","slug":"_8、排序","link":"#_8、排序","children":[]},{"level":3,"title":"9、查询对齐模式","slug":"_9、查询对齐模式","link":"#_9、查询对齐模式","children":[]},{"level":3,"title":"10、查询写回（SELECT INTO）","slug":"_10、查询写回-select-into","link":"#_10、查询写回-select-into","children":[]}]},{"level":2,"title":"运算符","slug":"运算符-1","link":"#运算符-1","children":[{"level":3,"title":"算数运算符","slug":"算数运算符","link":"#算数运算符","children":[]},{"level":3,"title":"比较运算符","slug":"比较运算符","link":"#比较运算符","children":[]},{"level":3,"title":"逻辑运算符","slug":"逻辑运算符","link":"#逻辑运算符","children":[]}]},{"level":2,"title":"内置函数","slug":"内置函数","link":"#内置函数","children":[{"level":3,"title":"Aggregate Functions","slug":"aggregate-functions","link":"#aggregate-functions","children":[]},{"level":3,"title":"算数函数","slug":"算数函数","link":"#算数函数","children":[]},{"level":3,"title":"比较函数","slug":"比较函数","link":"#比较函数","children":[]},{"level":3,"title":"字符串处理函数","slug":"字符串处理函数","link":"#字符串处理函数","children":[]},{"level":3,"title":"数据类型转换函数","slug":"数据类型转换函数","link":"#数据类型转换函数","children":[]},{"level":3,"title":"常序列生成函数","slug":"常序列生成函数","link":"#常序列生成函数","children":[]},{"level":3,"title":"选择函数","slug":"选择函数","link":"#选择函数","children":[]},{"level":3,"title":"区间查询函数","slug":"区间查询函数","link":"#区间查询函数","children":[]},{"level":3,"title":"趋势计算函数","slug":"趋势计算函数","link":"#趋势计算函数","children":[]},{"level":3,"title":"采样函数","slug":"采样函数","link":"#采样函数","children":[]},{"level":3,"title":"时间序列处理函数","slug":"时间序列处理函数","link":"#时间序列处理函数","children":[]}]},{"level":2,"title":"数据质量函数库","slug":"数据质量函数库","link":"#数据质量函数库","children":[{"level":3,"title":"数据质量","slug":"数据质量","link":"#数据质量","children":[]},{"level":3,"title":"数据画像","slug":"数据画像","link":"#数据画像","children":[]},{"level":3,"title":"异常检测","slug":"异常检测","link":"#异常检测","children":[]},{"level":3,"title":"频域分析","slug":"频域分析","link":"#频域分析","children":[]},{"level":3,"title":"数据匹配","slug":"数据匹配","link":"#数据匹配","children":[]},{"level":3,"title":"数据修复","slug":"数据修复","link":"#数据修复","children":[]},{"level":3,"title":"序列发现","slug":"序列发现","link":"#序列发现","children":[]},{"level":3,"title":"机器学习","slug":"机器学习","link":"#机器学习","children":[]}]},{"level":2,"title":"Lambda 表达式","slug":"lambda-表达式","link":"#lambda-表达式","children":[]},{"level":2,"title":"条件表达式","slug":"条件表达式","link":"#条件表达式","children":[]},{"level":2,"title":"触发器","slug":"触发器","link":"#触发器","children":[{"level":3,"title":"使用 SQL 语句注册该触发器","slug":"使用-sql-语句注册该触发器","link":"#使用-sql-语句注册该触发器","children":[]},{"level":3,"title":"卸载触发器","slug":"卸载触发器","link":"#卸载触发器","children":[]},{"level":3,"title":"查询触发器","slug":"查询触发器","link":"#查询触发器","children":[]}]},{"level":2,"title":"连续查询（Continuous Query, CQ）","slug":"连续查询-continuous-query-cq","link":"#连续查询-continuous-query-cq","children":[{"level":3,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":3,"title":"连续查询的管理","slug":"连续查询的管理","link":"#连续查询的管理","children":[]}]},{"level":2,"title":"用户自定义函数","slug":"用户自定义函数","link":"#用户自定义函数","children":[{"level":3,"title":"UDFParameters","slug":"udfparameters","link":"#udfparameters","children":[]},{"level":3,"title":"UDF 注册","slug":"udf-注册","link":"#udf-注册","children":[]},{"level":3,"title":"UDF 卸载","slug":"udf-卸载","link":"#udf-卸载","children":[]},{"level":3,"title":"UDF 查询","slug":"udf-查询","link":"#udf-查询","children":[]},{"level":3,"title":"查看所有注册的 UDF","slug":"查看所有注册的-udf","link":"#查看所有注册的-udf","children":[]}]},{"level":2,"title":"权限管理","slug":"权限管理","link":"#权限管理","children":[{"level":3,"title":"1、创建用户","slug":"_1、创建用户","link":"#_1、创建用户","children":[]},{"level":3,"title":"2、展示用户","slug":"_2、展示用户","link":"#_2、展示用户","children":[]},{"level":3,"title":"3、赋予用户权限","slug":"_3、赋予用户权限","link":"#_3、赋予用户权限","children":[]},{"level":3,"title":"4、撤销用户权限","slug":"_4、撤销用户权限","link":"#_4、撤销用户权限","children":[]},{"level":3,"title":"5、SQL 语句","slug":"_5、sql-语句","link":"#_5、sql-语句","children":[]},{"level":3,"title":"6、非root用户限制进行的操作","slug":"_6、非root用户限制进行的操作","link":"#_6、非root用户限制进行的操作","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1731316864000,"contributors":[{"name":"wanghui42","email":"105700158+wanghui42@users.noreply.github.com","commits":4},{"name":"Chen YZ","email":"43774645+Cpaulyz@users.noreply.github.com","commits":1},{"name":"CritasWang","email":"critas@outlook.com","commits":1},{"name":"Itami Sho","email":"42286868+MiniSho@users.noreply.github.com","commits":1},{"name":"Lei","email":"33376433+LeiRui@users.noreply.github.com","commits":1},{"name":"W1y1r","email":"150988475+W1y1r@users.noreply.github.com","commits":1},{"name":"mal117","email":"107627937+mal117@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":27.62,"words":8287},"filePathRelative":"zh/UserGuide/V1.2.x/SQL-Manual/SQL-Manual.md","localizedDate":"2023年7月10日","autoDesc":true}');export{v as comp,b as data};
