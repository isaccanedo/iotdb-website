import{_ as n,c as a,b as e,o as l}from"./app-BHE9oQwv.js";const t={};function p(o,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h2 id="结果集排序" tabindex="-1"><a class="header-anchor" href="#结果集排序"><span>结果集排序</span></a></h2><h3 id="时间对齐模式下的排序" tabindex="-1"><a class="header-anchor" href="#时间对齐模式下的排序"><span>时间对齐模式下的排序</span></a></h3><p>IoTDB的查询结果集默认按照时间对齐，可以使用<code>ORDER BY TIME</code>的子句指定时间戳的排列顺序。示例代码如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2017</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>T00:<span class="token number">01</span>:<span class="token number">00</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token keyword">time</span> <span class="token keyword">desc</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+--------------------------+------------------------+-----------------------------+------------------------+</span>
<span class="line">|                         Time|root.ln.wf02.wt02.hardware|root.ln.wf02.wt02.status|root.ln.wf01.wt01.temperature|root.ln.wf01.wt01.status|</span>
<span class="line">+-----------------------------+--------------------------+------------------------+-----------------------------+------------------------+</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|                        v2|                    true|                        24.36|                    true|</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|                        v2|                    true|                        25.96|                    true|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|                        v2|                   false|                         null|                    null|</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|                        v1|                    true|                         null|                    null|</span>
<span class="line">+-----------------------------+--------------------------+------------------------+-----------------------------+------------------------+</span>
<span class="line">Total line number = 4</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="设备对齐模式下的排序" tabindex="-1"><a class="header-anchor" href="#设备对齐模式下的排序"><span>设备对齐模式下的排序</span></a></h3><p>当使用<code>ALIGN BY DEVICE</code>查询对齐模式下的结果集时，可以使用<code>ORDER BY</code>子句对返回的结果集顺序进行规定。</p><p>在设备对齐模式下支持4种排序模式的子句,其中包括两种排序键，<code>DEVICE</code>和<code>TIME</code>，靠前的排序键为主排序键，每种排序键都支持<code>ASC</code>和<code>DESC</code>两种排列顺序。</p><ol><li><p><code>ORDER BY DEVICE</code>: 按照设备名的字典序进行排序，排序方式为字典序排序，在这种情况下，相同名的设备会以组的形式进行展示。</p></li><li><p><code>ORDER BY TIME</code>: 按照时间戳进行排序，此时不同的设备对应的数据点会按照时间戳的优先级被打乱排序。</p></li><li><p><code>ORDER BY DEVICE,TIME</code>: 按照设备名的字典序进行排序，设备名相同的数据点会通过时间戳进行排序。</p></li><li><p><code>ORDER BY TIME,DEVICE</code>: 按照时间戳进行排序，时间戳相同的数据点会通过设备名的字典序进行排序。</p></li></ol><blockquote><p>为了保证结果的可观性，当不使用<code>ORDER BY</code>子句，仅使用<code>ALIGN BY DEVICE</code>时，会为设备视图提供默认的排序方式。其中默认的排序视图为<code>ORDER BY DEVCE,TIME</code>，默认的排序顺序为<code>ASC</code>，<br> 即结果集默认先按照设备名升序排列，在相同设备名内再按照时间戳升序排序。</p></blockquote><p>当主排序键为<code>DEVICE</code>时，结果集的格式与默认情况类似：先按照设备名对结果进行排列，在相同的设备名下内按照时间戳进行排序。示例代码如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2017</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>T00:<span class="token number">01</span>:<span class="token number">00</span> <span class="token keyword">order</span> <span class="token keyword">by</span> device <span class="token keyword">desc</span><span class="token punctuation">,</span><span class="token keyword">time</span> <span class="token keyword">asc</span> align <span class="token keyword">by</span> device<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">|                         Time|           Device|hardware|status|temperature|</span>
<span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|root.ln.wf02.wt02|      v1|  true|       null|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|root.ln.wf02.wt02|      v2| false|       null|</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|root.ln.wf02.wt02|      v2|  true|       null|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf02.wt02|      v2|  true|       null|</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|root.ln.wf01.wt01|    null|  true|      25.96|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf01.wt01|    null|  true|      24.36|</span>
<span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">Total line number = 6</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>主排序键为<code>Time</code>时，结果集会先按照时间戳进行排序，在时间戳相等时按照设备名排序。<br> 示例代码如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2017</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>T00:<span class="token number">01</span>:<span class="token number">00</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token keyword">time</span> <span class="token keyword">asc</span><span class="token punctuation">,</span>device <span class="token keyword">desc</span> align <span class="token keyword">by</span> device<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">|                         Time|           Device|hardware|status|temperature|</span>
<span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|root.ln.wf02.wt02|      v1|  true|       null|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|root.ln.wf02.wt02|      v2| false|       null|</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|root.ln.wf02.wt02|      v2|  true|       null|</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|root.ln.wf01.wt01|    null|  true|      25.96|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf02.wt02|      v2|  true|       null|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf01.wt01|    null|  true|      24.36|</span>
<span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">Total line number = 6</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当没有显式指定时，主排序键默认为<code>Device</code>，排序顺序默认为<code>ASC</code>，示例代码如下：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">where</span> <span class="token keyword">time</span> <span class="token operator">&lt;=</span> <span class="token number">2017</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>T00:<span class="token number">01</span>:<span class="token number">00</span> align <span class="token keyword">by</span> device<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果如图所示，可以看出，<code>ORDER BY DEVICE ASC,TIME ASC</code>就是默认情况下的排序方式，由于<code>ASC</code>是默认排序顺序，此处可以省略。</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">|                         Time|           Device|hardware|status|temperature|</span>
<span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|root.ln.wf01.wt01|    null|  true|      25.96|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf01.wt01|    null|  true|      24.36|</span>
<span class="line">|1970-01-01T08:00:00.001+08:00|root.ln.wf02.wt02|      v1|  true|       null|</span>
<span class="line">|1970-01-01T08:00:00.002+08:00|root.ln.wf02.wt02|      v2| false|       null|</span>
<span class="line">|2017-11-01T00:00:00.000+08:00|root.ln.wf02.wt02|      v2|  true|       null|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf02.wt02|      v2|  true|       null|</span>
<span class="line">+-----------------------------+-----------------+--------+------+-----------+</span>
<span class="line">Total line number = 6</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样，可以在聚合查询中使用<code>ALIGN BY DEVICE</code>和<code>ORDER BY</code>子句，对聚合后的结果进行排序，示例代码如下所示：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> root<span class="token punctuation">.</span>ln<span class="token punctuation">.</span><span class="token operator">*</span><span class="token operator">*</span> <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2017</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>T00:<span class="token number">00</span>:<span class="token number">00.000</span><span class="token operator">+</span><span class="token number">08</span>:<span class="token number">00</span><span class="token punctuation">,</span><span class="token number">2017</span><span class="token operator">-</span><span class="token number">11</span><span class="token operator">-</span><span class="token number">01</span>T00:<span class="token number">03</span>:<span class="token number">00.000</span><span class="token operator">+</span><span class="token number">08</span>:<span class="token number">00</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">1</span>m<span class="token punctuation">)</span> <span class="token keyword">order</span> <span class="token keyword">by</span> device <span class="token keyword">asc</span><span class="token punctuation">,</span><span class="token keyword">time</span> <span class="token keyword">asc</span> align <span class="token keyword">by</span> device</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">+-----------------------------+-----------------+---------------+-------------+------------------+</span>
<span class="line">|                         Time|           Device|count(hardware)|count(status)|count(temperature)|</span>
<span class="line">+-----------------------------+-----------------+---------------+-------------+------------------+</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf01.wt01|           null|            1|                 1|</span>
<span class="line">|2017-11-01T00:02:00.000+08:00|root.ln.wf01.wt01|           null|            0|                 0|</span>
<span class="line">|2017-11-01T00:03:00.000+08:00|root.ln.wf01.wt01|           null|            0|                 0|</span>
<span class="line">|2017-11-01T00:01:00.000+08:00|root.ln.wf02.wt02|              1|            1|              null|</span>
<span class="line">|2017-11-01T00:02:00.000+08:00|root.ln.wf02.wt02|              0|            0|              null|</span>
<span class="line">|2017-11-01T00:03:00.000+08:00|root.ln.wf02.wt02|              0|            0|              null|</span>
<span class="line">+-----------------------------+-----------------+---------------+-------------+------------------+</span>
<span class="line">Total line number = 6</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27)]))}const r=n(t,[["render",p],["__file","Order-By.html.vue"]]),c=JSON.parse('{"path":"/zh/UserGuide/V1.1.x/Query-Data/Order-By.html","title":"","lang":"zh-CN","frontmatter":{"description":"结果集排序 时间对齐模式下的排序 IoTDB的查询结果集默认按照时间对齐，可以使用ORDER BY TIME的子句指定时间戳的排列顺序。示例代码如下： 执行结果： 设备对齐模式下的排序 当使用ALIGN BY DEVICE查询对齐模式下的结果集时，可以使用ORDER BY子句对返回的结果集顺序进行规定。 在设备对齐模式下支持4种排序模式的子句,其中包括...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://iotdb.apache.org/UserGuide/V1.1.x/Query-Data/Order-By.html"}],["meta",{"property":"og:url","content":"https://iotdb.apache.org/zh/UserGuide/V1.1.x/Query-Data/Order-By.html"}],["meta",{"property":"og:site_name","content":"IoTDB Website"}],["meta",{"property":"og:description","content":"结果集排序 时间对齐模式下的排序 IoTDB的查询结果集默认按照时间对齐，可以使用ORDER BY TIME的子句指定时间戳的排列顺序。示例代码如下： 执行结果： 设备对齐模式下的排序 当使用ALIGN BY DEVICE查询对齐模式下的结果集时，可以使用ORDER BY子句对返回的结果集顺序进行规定。 在设备对齐模式下支持4种排序模式的子句,其中包括..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-07-10T03:11:17.000Z"}],["meta",{"property":"article:modified_time","content":"2023-07-10T03:11:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-10T03:11:17.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"结果集排序","slug":"结果集排序","link":"#结果集排序","children":[{"level":3,"title":"时间对齐模式下的排序","slug":"时间对齐模式下的排序","link":"#时间对齐模式下的排序","children":[]},{"level":3,"title":"设备对齐模式下的排序","slug":"设备对齐模式下的排序","link":"#设备对齐模式下的排序","children":[]}]}],"git":{"createdTime":1688958677000,"updatedTime":1688958677000,"contributors":[{"name":"CritasWang","email":"critas@outlook.com","commits":1}]},"readingTime":{"minutes":4.07,"words":1222},"filePathRelative":"zh/UserGuide/V1.1.x/Query-Data/Order-By.md","localizedDate":"2023年7月10日","autoDesc":true}');export{r as comp,c as data};
